{
	"id": "af3d8fc9759c192925b26acecc723380",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.18",
	"solcLongVersion": "0.8.18+commit.87f61d96",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/ChadPepeCrowdsale.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.9;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\n\ncontract ChadPepeCrowdsale is Ownable, ReentrancyGuard {\n    using SafeMath for uint256;\n\n    IERC20 public token;\n    uint256 public rate;\n    uint256 public weiRaised;\n\n    event TokensPurchased(address indexed purchaser, address indexed beneficiary, uint256 value, uint256 amount);\n\n    constructor(uint256 _rate, address _tokenAddress) {\n        require(_rate > 0, \"ChadPepeCrowdsale: rate is 0\");\n        require(_tokenAddress != address(0), \"ChadPepeCrowdsale: token is the zero address\");\n\n        rate = _rate;\n        token = IERC20(_tokenAddress);\n    }\n\n    receive() external payable {\n        buyTokens(msg.sender);\n    }\n\n    function buyTokens(address beneficiary) public nonReentrant payable {\n        uint256 weiAmount = msg.value;\n        _preValidatePurchase(beneficiary, weiAmount);\n\n        uint256 tokens = _getTokenAmount(weiAmount);\n\n        weiRaised = weiRaised.add(weiAmount);\n\n        _processPurchase(beneficiary, tokens);\n        emit TokensPurchased(msg.sender, beneficiary, weiAmount, tokens);\n\n        _updatePurchasingState(beneficiary, weiAmount);\n\n        _forwardFunds();\n        _postValidatePurchase(beneficiary, weiAmount);\n    }\n\n    function _preValidatePurchase(address beneficiary, uint256 weiAmount) internal pure {\n        require(beneficiary != address(0), \"ChadPepeCrowdsale: beneficiary is the zero address\");\n        require(weiAmount != 0, \"ChadPepeCrowdsale: weiAmount is 0\");\n    }\n\n    function _postValidatePurchase(address beneficiary, uint256 weiAmount) internal pure {\n        // Can be overridden to add custom post-validation logic\n    }\n\n    function _deliverTokens(address beneficiary, uint256 tokenAmount) internal {\n        token.transferFrom(owner(), beneficiary, tokenAmount);\n    }\n\n    function _processPurchase(address beneficiary, uint256 tokenAmount) internal {\n        _deliverTokens(beneficiary, tokenAmount);\n    }\n\n    function _updatePurchasingState(address beneficiary, uint256 weiAmount) internal {\n        // Can be overridden to add custom purchasing state update logic\n    }\n\n    function _getTokenAmount(uint256 weiAmount) internal view returns (uint256) {\n        return weiAmount.mul(rate);\n    }\n\n    function _forwardFunds() internal {\n        payable(owner()).transfer(msg.value);\n    }\n\n    function setRate(uint256 newRate) external onlyOwner {\n        require(newRate > 0, \"ChadPepeCrowdsale: new rate is 0\");\n        rate = newRate;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x190dd6f8d592b7e4e930feb7f4313aeb8e1c4ad3154c27ce1cf6a512fc30d8cc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ce8dfb62d0c4fa260d6eec8f1cd47f5f2a044e11bde5b31d18072fa6e7d9010\",\"dweb:/ipfs/QmTyFztU3tLEcEDnqqiaW4UJetqsU77LXc6pjc9oTXCK5u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 123,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6782  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6782  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212202aec753447c361eb41c4fe16248018585c42ca231123171bca7c35a05e054d3e64736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202aec753447c361eb41c4fe16248018585c42ca231123171bca7c35a05e054d3e64736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2A 0xEC PUSH22 0x3447C361EB41C4FE16248018585C42CA231123171BCA PUSH29 0x35A05E054D3E64736F6C63430008120033000000000000000000000000 ",
							"sourceMap": "482:6300:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202aec753447c361eb41c4fe16248018585c42ca231123171bca7c35a05e054d3e64736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2A 0xEC PUSH22 0x3447C361EB41C4FE16248018585C42CA231123171BCA PUSH29 0x35A05E054D3E64736F6C63430008120033000000000000000000000000 ",
							"sourceMap": "482:6300:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 4,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202aec753447c361eb41c4fe16248018585c42ca231123171bca7c35a05e054d3e64736f6c63430008120033",
									".code": [
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"contracts/ChadPepeCrowdsale.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/ChadPepeCrowdsale.sol": {
				"ChadPepeCrowdsale": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_rate",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_tokenAddress",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "purchaser",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "beneficiary",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "TokensPurchased",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "beneficiary",
									"type": "address"
								}
							],
							"name": "buyTokens",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "newRate",
									"type": "uint256"
								}
							],
							"name": "setRate",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "weiRaised",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/ChadPepeCrowdsale.sol\":289:2720  contract ChadPepeCrowdsale is Ownable, ReentrancyGuard {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/ChadPepeCrowdsale.sol\":579:852  constructor(uint256 _rate, address _tokenAddress) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  tag_8\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:967  _msgSender() */\n  tag_9\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:965  _msgSender */\n  shl(0x20, tag_10)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:967  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_9:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:954  _transferOwnership */\n  shl(0x20, tag_11)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  0x20\n  shr\n  jump\t// in\ntag_8:\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1828  _status */\n  dup1\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/ChadPepeCrowdsale.sol\":655:656  0 */\n  0x00\n    /* \"contracts/ChadPepeCrowdsale.sol\":647:652  _rate */\n  dup3\n    /* \"contracts/ChadPepeCrowdsale.sol\":647:656  _rate > 0 */\n  gt\n    /* \"contracts/ChadPepeCrowdsale.sol\":639:689  require(_rate > 0, \"ChadPepeCrowdsale: rate is 0\") */\n  tag_14\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_15\n  swap1\n  tag_16\n  jump\t// in\ntag_15:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_14:\n    /* \"contracts/ChadPepeCrowdsale.sol\":732:733  0 */\n  0x00\n    /* \"contracts/ChadPepeCrowdsale.sol\":707:734  _tokenAddress != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/ChadPepeCrowdsale.sol\":707:720  _tokenAddress */\n  dup2\n    /* \"contracts/ChadPepeCrowdsale.sol\":707:734  _tokenAddress != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"contracts/ChadPepeCrowdsale.sol\":699:783  require(_tokenAddress != address(0), \"ChadPepeCrowdsale: token is the zero address\") */\n  tag_17\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_18\n  swap1\n  tag_19\n  jump\t// in\ntag_18:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_17:\n    /* \"contracts/ChadPepeCrowdsale.sol\":801:806  _rate */\n  dup2\n    /* \"contracts/ChadPepeCrowdsale.sol\":794:798  rate */\n  0x03\n    /* \"contracts/ChadPepeCrowdsale.sol\":794:806  rate = _rate */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/ChadPepeCrowdsale.sol\":831:844  _tokenAddress */\n  dup1\n    /* \"contracts/ChadPepeCrowdsale.sol\":816:821  token */\n  0x02\n  0x00\n    /* \"contracts/ChadPepeCrowdsale.sol\":816:845  token = IERC20(_tokenAddress) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/ChadPepeCrowdsale.sol\":579:852  constructor(uint256 _rate, address _tokenAddress) {... */\n  pop\n  pop\n    /* \"contracts/ChadPepeCrowdsale.sol\":289:2720  contract ChadPepeCrowdsale is Ownable, ReentrancyGuard {... */\n  jump(tag_20)\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\ntag_10:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\ntag_11:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2531  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2550:2558  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2547  _owner */\n  0x00\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2604:2612  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2594:2602  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2496:2620  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_24:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:411   */\ntag_26:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":400:405   */\n  dup2\n    /* \"#utility.yul\":389:405   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:411   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":417:539   */\ntag_27:\n    /* \"#utility.yul\":490:514   */\n  tag_44\n    /* \"#utility.yul\":508:513   */\n  dup2\n    /* \"#utility.yul\":490:514   */\n  tag_26\n  jump\t// in\ntag_44:\n    /* \"#utility.yul\":483:488   */\n  dup2\n    /* \"#utility.yul\":480:515   */\n  eq\n    /* \"#utility.yul\":470:533   */\n  tag_45\n  jumpi\n    /* \"#utility.yul\":529:530   */\n  0x00\n    /* \"#utility.yul\":526:527   */\n  dup1\n    /* \"#utility.yul\":519:531   */\n  revert\n    /* \"#utility.yul\":470:533   */\ntag_45:\n    /* \"#utility.yul\":417:539   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":545:688   */\ntag_28:\n    /* \"#utility.yul\":602:607   */\n  0x00\n    /* \"#utility.yul\":633:639   */\n  dup2\n    /* \"#utility.yul\":627:640   */\n  mload\n    /* \"#utility.yul\":618:640   */\n  swap1\n  pop\n    /* \"#utility.yul\":649:682   */\n  tag_47\n    /* \"#utility.yul\":676:681   */\n  dup2\n    /* \"#utility.yul\":649:682   */\n  tag_27\n  jump\t// in\ntag_47:\n    /* \"#utility.yul\":545:688   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":694:820   */\ntag_29:\n    /* \"#utility.yul\":731:738   */\n  0x00\n    /* \"#utility.yul\":771:813   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":764:769   */\n  dup3\n    /* \"#utility.yul\":760:814   */\n  and\n    /* \"#utility.yul\":749:814   */\n  swap1\n  pop\n    /* \"#utility.yul\":694:820   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":826:922   */\ntag_30:\n    /* \"#utility.yul\":863:870   */\n  0x00\n    /* \"#utility.yul\":892:916   */\n  tag_50\n    /* \"#utility.yul\":910:915   */\n  dup3\n    /* \"#utility.yul\":892:916   */\n  tag_29\n  jump\t// in\ntag_50:\n    /* \"#utility.yul\":881:916   */\n  swap1\n  pop\n    /* \"#utility.yul\":826:922   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":928:1050   */\ntag_31:\n    /* \"#utility.yul\":1001:1025   */\n  tag_52\n    /* \"#utility.yul\":1019:1024   */\n  dup2\n    /* \"#utility.yul\":1001:1025   */\n  tag_30\n  jump\t// in\ntag_52:\n    /* \"#utility.yul\":994:999   */\n  dup2\n    /* \"#utility.yul\":991:1026   */\n  eq\n    /* \"#utility.yul\":981:1044   */\n  tag_53\n  jumpi\n    /* \"#utility.yul\":1040:1041   */\n  0x00\n    /* \"#utility.yul\":1037:1038   */\n  dup1\n    /* \"#utility.yul\":1030:1042   */\n  revert\n    /* \"#utility.yul\":981:1044   */\ntag_53:\n    /* \"#utility.yul\":928:1050   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1056:1199   */\ntag_32:\n    /* \"#utility.yul\":1113:1118   */\n  0x00\n    /* \"#utility.yul\":1144:1150   */\n  dup2\n    /* \"#utility.yul\":1138:1151   */\n  mload\n    /* \"#utility.yul\":1129:1151   */\n  swap1\n  pop\n    /* \"#utility.yul\":1160:1193   */\n  tag_55\n    /* \"#utility.yul\":1187:1192   */\n  dup2\n    /* \"#utility.yul\":1160:1193   */\n  tag_31\n  jump\t// in\ntag_55:\n    /* \"#utility.yul\":1056:1199   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1205:1712   */\ntag_3:\n    /* \"#utility.yul\":1284:1290   */\n  0x00\n    /* \"#utility.yul\":1292:1298   */\n  dup1\n    /* \"#utility.yul\":1341:1343   */\n  0x40\n    /* \"#utility.yul\":1329:1338   */\n  dup4\n    /* \"#utility.yul\":1320:1327   */\n  dup6\n    /* \"#utility.yul\":1316:1339   */\n  sub\n    /* \"#utility.yul\":1312:1344   */\n  slt\n    /* \"#utility.yul\":1309:1428   */\n  iszero\n  tag_57\n  jumpi\n    /* \"#utility.yul\":1347:1426   */\n  tag_58\n  tag_24\n  jump\t// in\ntag_58:\n    /* \"#utility.yul\":1309:1428   */\ntag_57:\n    /* \"#utility.yul\":1467:1468   */\n  0x00\n    /* \"#utility.yul\":1492:1556   */\n  tag_59\n    /* \"#utility.yul\":1548:1555   */\n  dup6\n    /* \"#utility.yul\":1539:1545   */\n  dup3\n    /* \"#utility.yul\":1528:1537   */\n  dup7\n    /* \"#utility.yul\":1524:1546   */\n  add\n    /* \"#utility.yul\":1492:1556   */\n  tag_28\n  jump\t// in\ntag_59:\n    /* \"#utility.yul\":1482:1556   */\n  swap3\n  pop\n    /* \"#utility.yul\":1438:1566   */\n  pop\n    /* \"#utility.yul\":1605:1607   */\n  0x20\n    /* \"#utility.yul\":1631:1695   */\n  tag_60\n    /* \"#utility.yul\":1687:1694   */\n  dup6\n    /* \"#utility.yul\":1678:1684   */\n  dup3\n    /* \"#utility.yul\":1667:1676   */\n  dup7\n    /* \"#utility.yul\":1663:1685   */\n  add\n    /* \"#utility.yul\":1631:1695   */\n  tag_32\n  jump\t// in\ntag_60:\n    /* \"#utility.yul\":1621:1695   */\n  swap2\n  pop\n    /* \"#utility.yul\":1576:1705   */\n  pop\n    /* \"#utility.yul\":1205:1712   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1718:1887   */\ntag_33:\n    /* \"#utility.yul\":1802:1813   */\n  0x00\n    /* \"#utility.yul\":1836:1842   */\n  dup3\n    /* \"#utility.yul\":1831:1834   */\n  dup3\n    /* \"#utility.yul\":1824:1843   */\n  mstore\n    /* \"#utility.yul\":1876:1880   */\n  0x20\n    /* \"#utility.yul\":1871:1874   */\n  dup3\n    /* \"#utility.yul\":1867:1881   */\n  add\n    /* \"#utility.yul\":1852:1881   */\n  swap1\n  pop\n    /* \"#utility.yul\":1718:1887   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1893:2071   */\ntag_34:\n    /* \"#utility.yul\":2033:2063   */\n  0x436861645065706543726f776473616c653a2072617465206973203000000000\n    /* \"#utility.yul\":2029:2030   */\n  0x00\n    /* \"#utility.yul\":2021:2027   */\n  dup3\n    /* \"#utility.yul\":2017:2031   */\n  add\n    /* \"#utility.yul\":2010:2064   */\n  mstore\n    /* \"#utility.yul\":1893:2071   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2077:2443   */\ntag_35:\n    /* \"#utility.yul\":2219:2222   */\n  0x00\n    /* \"#utility.yul\":2240:2307   */\n  tag_64\n    /* \"#utility.yul\":2304:2306   */\n  0x1c\n    /* \"#utility.yul\":2299:2302   */\n  dup4\n    /* \"#utility.yul\":2240:2307   */\n  tag_33\n  jump\t// in\ntag_64:\n    /* \"#utility.yul\":2233:2307   */\n  swap2\n  pop\n    /* \"#utility.yul\":2316:2409   */\n  tag_65\n    /* \"#utility.yul\":2405:2408   */\n  dup3\n    /* \"#utility.yul\":2316:2409   */\n  tag_34\n  jump\t// in\ntag_65:\n    /* \"#utility.yul\":2434:2436   */\n  0x20\n    /* \"#utility.yul\":2429:2432   */\n  dup3\n    /* \"#utility.yul\":2425:2437   */\n  add\n    /* \"#utility.yul\":2418:2437   */\n  swap1\n  pop\n    /* \"#utility.yul\":2077:2443   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2449:2868   */\ntag_16:\n    /* \"#utility.yul\":2615:2619   */\n  0x00\n    /* \"#utility.yul\":2653:2655   */\n  0x20\n    /* \"#utility.yul\":2642:2651   */\n  dup3\n    /* \"#utility.yul\":2638:2656   */\n  add\n    /* \"#utility.yul\":2630:2656   */\n  swap1\n  pop\n    /* \"#utility.yul\":2702:2711   */\n  dup2\n    /* \"#utility.yul\":2696:2700   */\n  dup2\n    /* \"#utility.yul\":2692:2712   */\n  sub\n    /* \"#utility.yul\":2688:2689   */\n  0x00\n    /* \"#utility.yul\":2677:2686   */\n  dup4\n    /* \"#utility.yul\":2673:2690   */\n  add\n    /* \"#utility.yul\":2666:2713   */\n  mstore\n    /* \"#utility.yul\":2730:2861   */\n  tag_67\n    /* \"#utility.yul\":2856:2860   */\n  dup2\n    /* \"#utility.yul\":2730:2861   */\n  tag_35\n  jump\t// in\ntag_67:\n    /* \"#utility.yul\":2722:2861   */\n  swap1\n  pop\n    /* \"#utility.yul\":2449:2868   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2874:3105   */\ntag_36:\n    /* \"#utility.yul\":3014:3048   */\n  0x436861645065706543726f776473616c653a20746f6b656e2069732074686520\n    /* \"#utility.yul\":3010:3011   */\n  0x00\n    /* \"#utility.yul\":3002:3008   */\n  dup3\n    /* \"#utility.yul\":2998:3012   */\n  add\n    /* \"#utility.yul\":2991:3049   */\n  mstore\n    /* \"#utility.yul\":3083:3097   */\n  0x7a65726f20616464726573730000000000000000000000000000000000000000\n    /* \"#utility.yul\":3078:3080   */\n  0x20\n    /* \"#utility.yul\":3070:3076   */\n  dup3\n    /* \"#utility.yul\":3066:3081   */\n  add\n    /* \"#utility.yul\":3059:3098   */\n  mstore\n    /* \"#utility.yul\":2874:3105   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3111:3477   */\ntag_37:\n    /* \"#utility.yul\":3253:3256   */\n  0x00\n    /* \"#utility.yul\":3274:3341   */\n  tag_70\n    /* \"#utility.yul\":3338:3340   */\n  0x2c\n    /* \"#utility.yul\":3333:3336   */\n  dup4\n    /* \"#utility.yul\":3274:3341   */\n  tag_33\n  jump\t// in\ntag_70:\n    /* \"#utility.yul\":3267:3341   */\n  swap2\n  pop\n    /* \"#utility.yul\":3350:3443   */\n  tag_71\n    /* \"#utility.yul\":3439:3442   */\n  dup3\n    /* \"#utility.yul\":3350:3443   */\n  tag_36\n  jump\t// in\ntag_71:\n    /* \"#utility.yul\":3468:3470   */\n  0x40\n    /* \"#utility.yul\":3463:3466   */\n  dup3\n    /* \"#utility.yul\":3459:3471   */\n  add\n    /* \"#utility.yul\":3452:3471   */\n  swap1\n  pop\n    /* \"#utility.yul\":3111:3477   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3483:3902   */\ntag_19:\n    /* \"#utility.yul\":3649:3653   */\n  0x00\n    /* \"#utility.yul\":3687:3689   */\n  0x20\n    /* \"#utility.yul\":3676:3685   */\n  dup3\n    /* \"#utility.yul\":3672:3690   */\n  add\n    /* \"#utility.yul\":3664:3690   */\n  swap1\n  pop\n    /* \"#utility.yul\":3736:3745   */\n  dup2\n    /* \"#utility.yul\":3730:3734   */\n  dup2\n    /* \"#utility.yul\":3726:3746   */\n  sub\n    /* \"#utility.yul\":3722:3723   */\n  0x00\n    /* \"#utility.yul\":3711:3720   */\n  dup4\n    /* \"#utility.yul\":3707:3724   */\n  add\n    /* \"#utility.yul\":3700:3747   */\n  mstore\n    /* \"#utility.yul\":3764:3895   */\n  tag_73\n    /* \"#utility.yul\":3890:3894   */\n  dup2\n    /* \"#utility.yul\":3764:3895   */\n  tag_37\n  jump\t// in\ntag_73:\n    /* \"#utility.yul\":3756:3895   */\n  swap1\n  pop\n    /* \"#utility.yul\":3483:3902   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"contracts/ChadPepeCrowdsale.sol\":289:2720  contract ChadPepeCrowdsale is Ownable, ReentrancyGuard {... */\ntag_20:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/ChadPepeCrowdsale.sol\":289:2720  contract ChadPepeCrowdsale is Ownable, ReentrancyGuard {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8da5cb5b\n      gt\n      tag_11\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xec8ac4d8\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xfc0c546a\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_11:\n      dup1\n      0x2c4e722e\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x34fcf437\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x4042b66f\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_6\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n        /* \"contracts/ChadPepeCrowdsale.sol\":895:916  buyTokens(msg.sender) */\n      tag_14\n        /* \"contracts/ChadPepeCrowdsale.sol\":905:915  msg.sender */\n      caller\n        /* \"contracts/ChadPepeCrowdsale.sol\":895:904  buyTokens */\n      tag_15\n        /* \"contracts/ChadPepeCrowdsale.sol\":895:916  buyTokens(msg.sender) */\n      jump\t// in\n    tag_14:\n        /* \"contracts/ChadPepeCrowdsale.sol\":289:2720  contract ChadPepeCrowdsale is Ownable, ReentrancyGuard {... */\n      stop\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/ChadPepeCrowdsale.sol\":408:427  uint256 public rate */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_16\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_16:\n      pop\n      tag_17\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      tag_19\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ChadPepeCrowdsale.sol\":2568:2718  function setRate(uint256 newRate) external onlyOwner {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_21\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_21:\n      pop\n      tag_22\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      tag_25\n      jump\t// in\n    tag_22:\n      stop\n        /* \"contracts/ChadPepeCrowdsale.sol\":433:457  uint256 public weiRaised */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_26\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_26:\n      pop\n      tag_27\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      tag_29\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_30\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_30:\n      pop\n      tag_31\n      tag_32\n      jump\t// in\n    tag_31:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_33\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_33:\n      pop\n      tag_34\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_36\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ChadPepeCrowdsale.sol\":929:1458  function buyTokens(address beneficiary) public nonReentrant payable {... */\n    tag_8:\n      tag_38\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_39\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n      tag_15\n      jump\t// in\n    tag_38:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_41\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_41:\n      pop\n      tag_42\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_43\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_43:\n      tag_44\n      jump\t// in\n    tag_42:\n      stop\n        /* \"contracts/ChadPepeCrowdsale.sol\":383:402  IERC20 public token */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_45\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_45:\n      pop\n      tag_46\n      tag_47\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      tag_48\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ChadPepeCrowdsale.sol\":929:1458  function buyTokens(address beneficiary) public nonReentrant payable {... */\n    tag_15:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_51\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_52\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_51:\n        /* \"contracts/ChadPepeCrowdsale.sol\":1007:1024  uint256 weiAmount */\n      0x00\n        /* \"contracts/ChadPepeCrowdsale.sol\":1027:1036  msg.value */\n      callvalue\n        /* \"contracts/ChadPepeCrowdsale.sol\":1007:1036  uint256 weiAmount = msg.value */\n      swap1\n      pop\n        /* \"contracts/ChadPepeCrowdsale.sol\":1046:1090  _preValidatePurchase(beneficiary, weiAmount) */\n      tag_54\n        /* \"contracts/ChadPepeCrowdsale.sol\":1067:1078  beneficiary */\n      dup3\n        /* \"contracts/ChadPepeCrowdsale.sol\":1080:1089  weiAmount */\n      dup3\n        /* \"contracts/ChadPepeCrowdsale.sol\":1046:1066  _preValidatePurchase */\n      tag_55\n        /* \"contracts/ChadPepeCrowdsale.sol\":1046:1090  _preValidatePurchase(beneficiary, weiAmount) */\n      jump\t// in\n    tag_54:\n        /* \"contracts/ChadPepeCrowdsale.sol\":1101:1115  uint256 tokens */\n      0x00\n        /* \"contracts/ChadPepeCrowdsale.sol\":1118:1144  _getTokenAmount(weiAmount) */\n      tag_56\n        /* \"contracts/ChadPepeCrowdsale.sol\":1134:1143  weiAmount */\n      dup3\n        /* \"contracts/ChadPepeCrowdsale.sol\":1118:1133  _getTokenAmount */\n      tag_57\n        /* \"contracts/ChadPepeCrowdsale.sol\":1118:1144  _getTokenAmount(weiAmount) */\n      jump\t// in\n    tag_56:\n        /* \"contracts/ChadPepeCrowdsale.sol\":1101:1144  uint256 tokens = _getTokenAmount(weiAmount) */\n      swap1\n      pop\n        /* \"contracts/ChadPepeCrowdsale.sol\":1167:1191  weiRaised.add(weiAmount) */\n      tag_58\n        /* \"contracts/ChadPepeCrowdsale.sol\":1181:1190  weiAmount */\n      dup3\n        /* \"contracts/ChadPepeCrowdsale.sol\":1167:1176  weiRaised */\n      sload(0x04)\n        /* \"contracts/ChadPepeCrowdsale.sol\":1167:1180  weiRaised.add */\n      tag_59\n      swap1\n        /* \"contracts/ChadPepeCrowdsale.sol\":1167:1191  weiRaised.add(weiAmount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_58:\n        /* \"contracts/ChadPepeCrowdsale.sol\":1155:1164  weiRaised */\n      0x04\n        /* \"contracts/ChadPepeCrowdsale.sol\":1155:1191  weiRaised = weiRaised.add(weiAmount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ChadPepeCrowdsale.sol\":1202:1239  _processPurchase(beneficiary, tokens) */\n      tag_60\n        /* \"contracts/ChadPepeCrowdsale.sol\":1219:1230  beneficiary */\n      dup4\n        /* \"contracts/ChadPepeCrowdsale.sol\":1232:1238  tokens */\n      dup3\n        /* \"contracts/ChadPepeCrowdsale.sol\":1202:1218  _processPurchase */\n      tag_61\n        /* \"contracts/ChadPepeCrowdsale.sol\":1202:1239  _processPurchase(beneficiary, tokens) */\n      jump\t// in\n    tag_60:\n        /* \"contracts/ChadPepeCrowdsale.sol\":1282:1293  beneficiary */\n      dup3\n        /* \"contracts/ChadPepeCrowdsale.sol\":1254:1313  TokensPurchased(msg.sender, beneficiary, weiAmount, tokens) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ChadPepeCrowdsale.sol\":1270:1280  msg.sender */\n      caller\n        /* \"contracts/ChadPepeCrowdsale.sol\":1254:1313  TokensPurchased(msg.sender, beneficiary, weiAmount, tokens) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x6faf93231a456e552dbc9961f58d9713ee4f2e69d15f1975b050ef0911053a7b\n        /* \"contracts/ChadPepeCrowdsale.sol\":1295:1304  weiAmount */\n      dup5\n        /* \"contracts/ChadPepeCrowdsale.sol\":1306:1312  tokens */\n      dup5\n        /* \"contracts/ChadPepeCrowdsale.sol\":1254:1313  TokensPurchased(msg.sender, beneficiary, weiAmount, tokens) */\n      mload(0x40)\n      tag_62\n      swap3\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/ChadPepeCrowdsale.sol\":1324:1370  _updatePurchasingState(beneficiary, weiAmount) */\n      tag_64\n        /* \"contracts/ChadPepeCrowdsale.sol\":1347:1358  beneficiary */\n      dup4\n        /* \"contracts/ChadPepeCrowdsale.sol\":1360:1369  weiAmount */\n      dup4\n        /* \"contracts/ChadPepeCrowdsale.sol\":1324:1346  _updatePurchasingState */\n      tag_65\n        /* \"contracts/ChadPepeCrowdsale.sol\":1324:1370  _updatePurchasingState(beneficiary, weiAmount) */\n      jump\t// in\n    tag_64:\n        /* \"contracts/ChadPepeCrowdsale.sol\":1381:1396  _forwardFunds() */\n      tag_66\n        /* \"contracts/ChadPepeCrowdsale.sol\":1381:1394  _forwardFunds */\n      tag_67\n        /* \"contracts/ChadPepeCrowdsale.sol\":1381:1396  _forwardFunds() */\n      jump\t// in\n    tag_66:\n        /* \"contracts/ChadPepeCrowdsale.sol\":1406:1451  _postValidatePurchase(beneficiary, weiAmount) */\n      tag_68\n        /* \"contracts/ChadPepeCrowdsale.sol\":1428:1439  beneficiary */\n      dup4\n        /* \"contracts/ChadPepeCrowdsale.sol\":1441:1450  weiAmount */\n      dup4\n        /* \"contracts/ChadPepeCrowdsale.sol\":1406:1427  _postValidatePurchase */\n      tag_69\n        /* \"contracts/ChadPepeCrowdsale.sol\":1406:1451  _postValidatePurchase(beneficiary, weiAmount) */\n      jump\t// in\n    tag_68:\n        /* \"contracts/ChadPepeCrowdsale.sol\":997:1458  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_70\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_71\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_70:\n        /* \"contracts/ChadPepeCrowdsale.sol\":929:1458  function buyTokens(address beneficiary) public nonReentrant payable {... */\n      pop\n      jump\t// out\n        /* \"contracts/ChadPepeCrowdsale.sol\":408:427  uint256 public rate */\n    tag_18:\n      sload(0x03)\n      dup2\n      jump\t// out\n        /* \"contracts/ChadPepeCrowdsale.sol\":2568:2718  function setRate(uint256 newRate) external onlyOwner {... */\n    tag_25:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_73\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_74\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_73:\n        /* \"contracts/ChadPepeCrowdsale.sol\":2649:2650  0 */\n      0x00\n        /* \"contracts/ChadPepeCrowdsale.sol\":2639:2646  newRate */\n      dup2\n        /* \"contracts/ChadPepeCrowdsale.sol\":2639:2650  newRate > 0 */\n      gt\n        /* \"contracts/ChadPepeCrowdsale.sol\":2631:2687  require(newRate > 0, \"ChadPepeCrowdsale: new rate is 0\") */\n      tag_76\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_77\n      swap1\n      tag_78\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_76:\n        /* \"contracts/ChadPepeCrowdsale.sol\":2704:2711  newRate */\n      dup1\n        /* \"contracts/ChadPepeCrowdsale.sol\":2697:2701  rate */\n      0x03\n        /* \"contracts/ChadPepeCrowdsale.sol\":2697:2711  rate = newRate */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ChadPepeCrowdsale.sol\":2568:2718  function setRate(uint256 newRate) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/ChadPepeCrowdsale.sol\":433:457  uint256 public weiRaised */\n    tag_28:\n      sload(0x04)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_32:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_80\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_74\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_80:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      tag_82\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1922:1923  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1913  _transferOwnership */\n      tag_83\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_82:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_35:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1247:1254  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1266:1279  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_44:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_86\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_74\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_86:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2189:2190  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2169:2191  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2169:2177  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2169:2191  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_88\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_89\n      swap1\n      tag_90\n      jump\t// in\n    tag_89:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_88:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      tag_91\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2263:2271  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2262  _transferOwnership */\n      tag_83\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_91:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/ChadPepeCrowdsale.sol\":383:402  IERC20 public token */\n    tag_47:\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n    tag_52:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2475  _status */\n      sload(0x01)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2487  _status != _ENTERED */\n      sub\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_93\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_94\n      swap1\n      tag_95\n      jump\t// in\n    tag_94:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_93:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2605  _status */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2616  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"contracts/ChadPepeCrowdsale.sol\":1464:1723  function _preValidatePurchase(address beneficiary, uint256 weiAmount) internal pure {... */\n    tag_55:\n        /* \"contracts/ChadPepeCrowdsale.sol\":1589:1590  0 */\n      0x00\n        /* \"contracts/ChadPepeCrowdsale.sol\":1566:1591  beneficiary != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ChadPepeCrowdsale.sol\":1566:1577  beneficiary */\n      dup3\n        /* \"contracts/ChadPepeCrowdsale.sol\":1566:1591  beneficiary != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/ChadPepeCrowdsale.sol\":1558:1646  require(beneficiary != address(0), \"ChadPepeCrowdsale: beneficiary is the zero address\") */\n      tag_97\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_98\n      swap1\n      tag_99\n      jump\t// in\n    tag_98:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_97:\n        /* \"contracts/ChadPepeCrowdsale.sol\":1677:1678  0 */\n      0x00\n        /* \"contracts/ChadPepeCrowdsale.sol\":1664:1673  weiAmount */\n      dup2\n        /* \"contracts/ChadPepeCrowdsale.sol\":1664:1678  weiAmount != 0 */\n      sub\n        /* \"contracts/ChadPepeCrowdsale.sol\":1656:1716  require(weiAmount != 0, \"ChadPepeCrowdsale: weiAmount is 0\") */\n      tag_100\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_101\n      swap1\n      tag_102\n      jump\t// in\n    tag_101:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_100:\n        /* \"contracts/ChadPepeCrowdsale.sol\":1464:1723  function _preValidatePurchase(address beneficiary, uint256 weiAmount) internal pure {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ChadPepeCrowdsale.sol\":2350:2469  function _getTokenAmount(uint256 weiAmount) internal view returns (uint256) {... */\n    tag_57:\n        /* \"contracts/ChadPepeCrowdsale.sol\":2417:2424  uint256 */\n      0x00\n        /* \"contracts/ChadPepeCrowdsale.sol\":2443:2462  weiAmount.mul(rate) */\n      tag_104\n        /* \"contracts/ChadPepeCrowdsale.sol\":2457:2461  rate */\n      sload(0x03)\n        /* \"contracts/ChadPepeCrowdsale.sol\":2443:2452  weiAmount */\n      dup4\n        /* \"contracts/ChadPepeCrowdsale.sol\":2443:2456  weiAmount.mul */\n      tag_105\n      swap1\n        /* \"contracts/ChadPepeCrowdsale.sol\":2443:2462  weiAmount.mul(rate) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_104:\n        /* \"contracts/ChadPepeCrowdsale.sol\":2436:2462  return weiAmount.mul(rate) */\n      swap1\n      pop\n        /* \"contracts/ChadPepeCrowdsale.sol\":2350:2469  function _getTokenAmount(uint256 weiAmount) internal view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2755:2851  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_59:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2813:2820  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2843:2844  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2840  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2844  a + b */\n      tag_107\n      swap2\n      swap1\n      tag_108\n      jump\t// in\n    tag_107:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2832:2844  return a + b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2755:2851  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ChadPepeCrowdsale.sol\":2043:2177  function _processPurchase(address beneficiary, uint256 tokenAmount) internal {... */\n    tag_61:\n        /* \"contracts/ChadPepeCrowdsale.sol\":2130:2170  _deliverTokens(beneficiary, tokenAmount) */\n      tag_110\n        /* \"contracts/ChadPepeCrowdsale.sol\":2145:2156  beneficiary */\n      dup3\n        /* \"contracts/ChadPepeCrowdsale.sol\":2158:2169  tokenAmount */\n      dup3\n        /* \"contracts/ChadPepeCrowdsale.sol\":2130:2144  _deliverTokens */\n      tag_111\n        /* \"contracts/ChadPepeCrowdsale.sol\":2130:2170  _deliverTokens(beneficiary, tokenAmount) */\n      jump\t// in\n    tag_110:\n        /* \"contracts/ChadPepeCrowdsale.sol\":2043:2177  function _processPurchase(address beneficiary, uint256 tokenAmount) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ChadPepeCrowdsale.sol\":2183:2344  function _updatePurchasingState(address beneficiary, uint256 weiAmount) internal {... */\n    tag_65:\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ChadPepeCrowdsale.sol\":2475:2562  function _forwardFunds() internal {... */\n    tag_67:\n        /* \"contracts/ChadPepeCrowdsale.sol\":2527:2534  owner() */\n      tag_114\n        /* \"contracts/ChadPepeCrowdsale.sol\":2527:2532  owner */\n      tag_35\n        /* \"contracts/ChadPepeCrowdsale.sol\":2527:2534  owner() */\n      jump\t// in\n    tag_114:\n        /* \"contracts/ChadPepeCrowdsale.sol\":2519:2544  payable(owner()).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ChadPepeCrowdsale.sol\":2519:2555  payable(owner()).transfer(msg.value) */\n      0x08fc\n        /* \"contracts/ChadPepeCrowdsale.sol\":2545:2554  msg.value */\n      callvalue\n        /* \"contracts/ChadPepeCrowdsale.sol\":2519:2555  payable(owner()).transfer(msg.value) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_116\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_116:\n      pop\n        /* \"contracts/ChadPepeCrowdsale.sol\":2475:2562  function _forwardFunds() internal {... */\n      jump\t// out\n        /* \"contracts/ChadPepeCrowdsale.sol\":1729:1886  function _postValidatePurchase(address beneficiary, uint256 weiAmount) internal pure {... */\n    tag_69:\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n    tag_71:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2816  _status */\n      dup1\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2831  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n    tag_74:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1433:1445  _msgSender() */\n      tag_120\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1433:1443  _msgSender */\n      tag_121\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1433:1445  _msgSender() */\n      jump\t// in\n    tag_120:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1429  owner() */\n      tag_122\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1427  owner */\n      tag_35\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1429  owner() */\n      jump\t// in\n    tag_122:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_123\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_124\n      swap1\n      tag_125\n      jump\t// in\n    tag_124:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_123:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_83:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2531  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2550:2558  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2547  _owner */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2604:2612  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2594:2602  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2496:2620  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3465:3561  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_105:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3523:3530  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3553:3554  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3549:3550  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3549:3554  a * b */\n      tag_128\n      swap2\n      swap1\n      tag_129\n      jump\t// in\n    tag_128:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3542:3554  return a * b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3465:3561  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ChadPepeCrowdsale.sol\":1892:2037  function _deliverTokens(address beneficiary, uint256 tokenAmount) internal {... */\n    tag_111:\n        /* \"contracts/ChadPepeCrowdsale.sol\":1977:1982  token */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ChadPepeCrowdsale.sol\":1977:1995  token.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contracts/ChadPepeCrowdsale.sol\":1996:2003  owner() */\n      tag_131\n        /* \"contracts/ChadPepeCrowdsale.sol\":1996:2001  owner */\n      tag_35\n        /* \"contracts/ChadPepeCrowdsale.sol\":1996:2003  owner() */\n      jump\t// in\n    tag_131:\n        /* \"contracts/ChadPepeCrowdsale.sol\":2005:2016  beneficiary */\n      dup5\n        /* \"contracts/ChadPepeCrowdsale.sol\":2018:2029  tokenAmount */\n      dup5\n        /* \"contracts/ChadPepeCrowdsale.sol\":1977:2030  token.transferFrom(owner(), beneficiary, tokenAmount) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_132\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_133\n      jump\t// in\n    tag_132:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_135\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_135:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_136\n      swap2\n      swap1\n      tag_137\n      jump\t// in\n    tag_136:\n      pop\n        /* \"contracts/ChadPepeCrowdsale.sol\":1892:2037  function _deliverTokens(address beneficiary, uint256 tokenAmount) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n    tag_121:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:84   */\n    tag_139:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":73:78   */\n      dup2\n        /* \"#utility.yul\":62:78   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:84   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":90:208   */\n    tag_140:\n        /* \"#utility.yul\":177:201   */\n      tag_176\n        /* \"#utility.yul\":195:200   */\n      dup2\n        /* \"#utility.yul\":177:201   */\n      tag_139\n      jump\t// in\n    tag_176:\n        /* \"#utility.yul\":172:175   */\n      dup3\n        /* \"#utility.yul\":165:202   */\n      mstore\n        /* \"#utility.yul\":90:208   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":214:436   */\n    tag_20:\n        /* \"#utility.yul\":307:311   */\n      0x00\n        /* \"#utility.yul\":345:347   */\n      0x20\n        /* \"#utility.yul\":334:343   */\n      dup3\n        /* \"#utility.yul\":330:348   */\n      add\n        /* \"#utility.yul\":322:348   */\n      swap1\n      pop\n        /* \"#utility.yul\":358:429   */\n      tag_178\n        /* \"#utility.yul\":426:427   */\n      0x00\n        /* \"#utility.yul\":415:424   */\n      dup4\n        /* \"#utility.yul\":411:428   */\n      add\n        /* \"#utility.yul\":402:408   */\n      dup5\n        /* \"#utility.yul\":358:429   */\n      tag_140\n      jump\t// in\n    tag_178:\n        /* \"#utility.yul\":214:436   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":523:640   */\n    tag_142:\n        /* \"#utility.yul\":632:633   */\n      0x00\n        /* \"#utility.yul\":629:630   */\n      dup1\n        /* \"#utility.yul\":622:634   */\n      revert\n        /* \"#utility.yul\":769:891   */\n    tag_144:\n        /* \"#utility.yul\":842:866   */\n      tag_183\n        /* \"#utility.yul\":860:865   */\n      dup2\n        /* \"#utility.yul\":842:866   */\n      tag_139\n      jump\t// in\n    tag_183:\n        /* \"#utility.yul\":835:840   */\n      dup2\n        /* \"#utility.yul\":832:867   */\n      eq\n        /* \"#utility.yul\":822:885   */\n      tag_184\n      jumpi\n        /* \"#utility.yul\":881:882   */\n      0x00\n        /* \"#utility.yul\":878:879   */\n      dup1\n        /* \"#utility.yul\":871:883   */\n      revert\n        /* \"#utility.yul\":822:885   */\n    tag_184:\n        /* \"#utility.yul\":769:891   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":897:1036   */\n    tag_145:\n        /* \"#utility.yul\":943:948   */\n      0x00\n        /* \"#utility.yul\":981:987   */\n      dup2\n        /* \"#utility.yul\":968:988   */\n      calldataload\n        /* \"#utility.yul\":959:988   */\n      swap1\n      pop\n        /* \"#utility.yul\":997:1030   */\n      tag_186\n        /* \"#utility.yul\":1024:1029   */\n      dup2\n        /* \"#utility.yul\":997:1030   */\n      tag_144\n      jump\t// in\n    tag_186:\n        /* \"#utility.yul\":897:1036   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1042:1371   */\n    tag_24:\n        /* \"#utility.yul\":1101:1107   */\n      0x00\n        /* \"#utility.yul\":1150:1152   */\n      0x20\n        /* \"#utility.yul\":1138:1147   */\n      dup3\n        /* \"#utility.yul\":1129:1136   */\n      dup5\n        /* \"#utility.yul\":1125:1148   */\n      sub\n        /* \"#utility.yul\":1121:1153   */\n      slt\n        /* \"#utility.yul\":1118:1237   */\n      iszero\n      tag_188\n      jumpi\n        /* \"#utility.yul\":1156:1235   */\n      tag_189\n      tag_142\n      jump\t// in\n    tag_189:\n        /* \"#utility.yul\":1118:1237   */\n    tag_188:\n        /* \"#utility.yul\":1276:1277   */\n      0x00\n        /* \"#utility.yul\":1301:1354   */\n      tag_190\n        /* \"#utility.yul\":1346:1353   */\n      dup5\n        /* \"#utility.yul\":1337:1343   */\n      dup3\n        /* \"#utility.yul\":1326:1335   */\n      dup6\n        /* \"#utility.yul\":1322:1344   */\n      add\n        /* \"#utility.yul\":1301:1354   */\n      tag_145\n      jump\t// in\n    tag_190:\n        /* \"#utility.yul\":1291:1354   */\n      swap2\n      pop\n        /* \"#utility.yul\":1247:1364   */\n      pop\n        /* \"#utility.yul\":1042:1371   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1377:1503   */\n    tag_146:\n        /* \"#utility.yul\":1414:1421   */\n      0x00\n        /* \"#utility.yul\":1454:1496   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1447:1452   */\n      dup3\n        /* \"#utility.yul\":1443:1497   */\n      and\n        /* \"#utility.yul\":1432:1497   */\n      swap1\n      pop\n        /* \"#utility.yul\":1377:1503   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1509:1605   */\n    tag_147:\n        /* \"#utility.yul\":1546:1553   */\n      0x00\n        /* \"#utility.yul\":1575:1599   */\n      tag_193\n        /* \"#utility.yul\":1593:1598   */\n      dup3\n        /* \"#utility.yul\":1575:1599   */\n      tag_146\n      jump\t// in\n    tag_193:\n        /* \"#utility.yul\":1564:1599   */\n      swap1\n      pop\n        /* \"#utility.yul\":1509:1605   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1611:1729   */\n    tag_148:\n        /* \"#utility.yul\":1698:1722   */\n      tag_195\n        /* \"#utility.yul\":1716:1721   */\n      dup2\n        /* \"#utility.yul\":1698:1722   */\n      tag_147\n      jump\t// in\n    tag_195:\n        /* \"#utility.yul\":1693:1696   */\n      dup3\n        /* \"#utility.yul\":1686:1723   */\n      mstore\n        /* \"#utility.yul\":1611:1729   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1735:1957   */\n    tag_37:\n        /* \"#utility.yul\":1828:1832   */\n      0x00\n        /* \"#utility.yul\":1866:1868   */\n      0x20\n        /* \"#utility.yul\":1855:1864   */\n      dup3\n        /* \"#utility.yul\":1851:1869   */\n      add\n        /* \"#utility.yul\":1843:1869   */\n      swap1\n      pop\n        /* \"#utility.yul\":1879:1950   */\n      tag_197\n        /* \"#utility.yul\":1947:1948   */\n      0x00\n        /* \"#utility.yul\":1936:1945   */\n      dup4\n        /* \"#utility.yul\":1932:1949   */\n      add\n        /* \"#utility.yul\":1923:1929   */\n      dup5\n        /* \"#utility.yul\":1879:1950   */\n      tag_148\n      jump\t// in\n    tag_197:\n        /* \"#utility.yul\":1735:1957   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1963:2085   */\n    tag_149:\n        /* \"#utility.yul\":2036:2060   */\n      tag_199\n        /* \"#utility.yul\":2054:2059   */\n      dup2\n        /* \"#utility.yul\":2036:2060   */\n      tag_147\n      jump\t// in\n    tag_199:\n        /* \"#utility.yul\":2029:2034   */\n      dup2\n        /* \"#utility.yul\":2026:2061   */\n      eq\n        /* \"#utility.yul\":2016:2079   */\n      tag_200\n      jumpi\n        /* \"#utility.yul\":2075:2076   */\n      0x00\n        /* \"#utility.yul\":2072:2073   */\n      dup1\n        /* \"#utility.yul\":2065:2077   */\n      revert\n        /* \"#utility.yul\":2016:2079   */\n    tag_200:\n        /* \"#utility.yul\":1963:2085   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2091:2230   */\n    tag_150:\n        /* \"#utility.yul\":2137:2142   */\n      0x00\n        /* \"#utility.yul\":2175:2181   */\n      dup2\n        /* \"#utility.yul\":2162:2182   */\n      calldataload\n        /* \"#utility.yul\":2153:2182   */\n      swap1\n      pop\n        /* \"#utility.yul\":2191:2224   */\n      tag_202\n        /* \"#utility.yul\":2218:2223   */\n      dup2\n        /* \"#utility.yul\":2191:2224   */\n      tag_149\n      jump\t// in\n    tag_202:\n        /* \"#utility.yul\":2091:2230   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2236:2565   */\n    tag_40:\n        /* \"#utility.yul\":2295:2301   */\n      0x00\n        /* \"#utility.yul\":2344:2346   */\n      0x20\n        /* \"#utility.yul\":2332:2341   */\n      dup3\n        /* \"#utility.yul\":2323:2330   */\n      dup5\n        /* \"#utility.yul\":2319:2342   */\n      sub\n        /* \"#utility.yul\":2315:2347   */\n      slt\n        /* \"#utility.yul\":2312:2431   */\n      iszero\n      tag_204\n      jumpi\n        /* \"#utility.yul\":2350:2429   */\n      tag_205\n      tag_142\n      jump\t// in\n    tag_205:\n        /* \"#utility.yul\":2312:2431   */\n    tag_204:\n        /* \"#utility.yul\":2470:2471   */\n      0x00\n        /* \"#utility.yul\":2495:2548   */\n      tag_206\n        /* \"#utility.yul\":2540:2547   */\n      dup5\n        /* \"#utility.yul\":2531:2537   */\n      dup3\n        /* \"#utility.yul\":2520:2529   */\n      dup6\n        /* \"#utility.yul\":2516:2538   */\n      add\n        /* \"#utility.yul\":2495:2548   */\n      tag_150\n      jump\t// in\n    tag_206:\n        /* \"#utility.yul\":2485:2548   */\n      swap2\n      pop\n        /* \"#utility.yul\":2441:2558   */\n      pop\n        /* \"#utility.yul\":2236:2565   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2571:2631   */\n    tag_151:\n        /* \"#utility.yul\":2599:2602   */\n      0x00\n        /* \"#utility.yul\":2620:2625   */\n      dup2\n        /* \"#utility.yul\":2613:2625   */\n      swap1\n      pop\n        /* \"#utility.yul\":2571:2631   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2637:2779   */\n    tag_152:\n        /* \"#utility.yul\":2687:2696   */\n      0x00\n        /* \"#utility.yul\":2720:2773   */\n      tag_209\n        /* \"#utility.yul\":2738:2772   */\n      tag_210\n        /* \"#utility.yul\":2747:2771   */\n      tag_211\n        /* \"#utility.yul\":2765:2770   */\n      dup5\n        /* \"#utility.yul\":2747:2771   */\n      tag_146\n      jump\t// in\n    tag_211:\n        /* \"#utility.yul\":2738:2772   */\n      tag_151\n      jump\t// in\n    tag_210:\n        /* \"#utility.yul\":2720:2773   */\n      tag_146\n      jump\t// in\n    tag_209:\n        /* \"#utility.yul\":2707:2773   */\n      swap1\n      pop\n        /* \"#utility.yul\":2637:2779   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2785:2911   */\n    tag_153:\n        /* \"#utility.yul\":2835:2844   */\n      0x00\n        /* \"#utility.yul\":2868:2905   */\n      tag_213\n        /* \"#utility.yul\":2899:2904   */\n      dup3\n        /* \"#utility.yul\":2868:2905   */\n      tag_152\n      jump\t// in\n    tag_213:\n        /* \"#utility.yul\":2855:2905   */\n      swap1\n      pop\n        /* \"#utility.yul\":2785:2911   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2917:3057   */\n    tag_154:\n        /* \"#utility.yul\":2981:2990   */\n      0x00\n        /* \"#utility.yul\":3014:3051   */\n      tag_215\n        /* \"#utility.yul\":3045:3050   */\n      dup3\n        /* \"#utility.yul\":3014:3051   */\n      tag_153\n      jump\t// in\n    tag_215:\n        /* \"#utility.yul\":3001:3051   */\n      swap1\n      pop\n        /* \"#utility.yul\":2917:3057   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3063:3222   */\n    tag_155:\n        /* \"#utility.yul\":3164:3215   */\n      tag_217\n        /* \"#utility.yul\":3209:3214   */\n      dup2\n        /* \"#utility.yul\":3164:3215   */\n      tag_154\n      jump\t// in\n    tag_217:\n        /* \"#utility.yul\":3159:3162   */\n      dup3\n        /* \"#utility.yul\":3152:3216   */\n      mstore\n        /* \"#utility.yul\":3063:3222   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3228:3478   */\n    tag_49:\n        /* \"#utility.yul\":3335:3339   */\n      0x00\n        /* \"#utility.yul\":3373:3375   */\n      0x20\n        /* \"#utility.yul\":3362:3371   */\n      dup3\n        /* \"#utility.yul\":3358:3376   */\n      add\n        /* \"#utility.yul\":3350:3376   */\n      swap1\n      pop\n        /* \"#utility.yul\":3386:3471   */\n      tag_219\n        /* \"#utility.yul\":3468:3469   */\n      0x00\n        /* \"#utility.yul\":3457:3466   */\n      dup4\n        /* \"#utility.yul\":3453:3470   */\n      add\n        /* \"#utility.yul\":3444:3450   */\n      dup5\n        /* \"#utility.yul\":3386:3471   */\n      tag_155\n      jump\t// in\n    tag_219:\n        /* \"#utility.yul\":3228:3478   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3484:3816   */\n    tag_63:\n        /* \"#utility.yul\":3605:3609   */\n      0x00\n        /* \"#utility.yul\":3643:3645   */\n      0x40\n        /* \"#utility.yul\":3632:3641   */\n      dup3\n        /* \"#utility.yul\":3628:3646   */\n      add\n        /* \"#utility.yul\":3620:3646   */\n      swap1\n      pop\n        /* \"#utility.yul\":3656:3727   */\n      tag_221\n        /* \"#utility.yul\":3724:3725   */\n      0x00\n        /* \"#utility.yul\":3713:3722   */\n      dup4\n        /* \"#utility.yul\":3709:3726   */\n      add\n        /* \"#utility.yul\":3700:3706   */\n      dup6\n        /* \"#utility.yul\":3656:3727   */\n      tag_140\n      jump\t// in\n    tag_221:\n        /* \"#utility.yul\":3737:3809   */\n      tag_222\n        /* \"#utility.yul\":3805:3807   */\n      0x20\n        /* \"#utility.yul\":3794:3803   */\n      dup4\n        /* \"#utility.yul\":3790:3808   */\n      add\n        /* \"#utility.yul\":3781:3787   */\n      dup5\n        /* \"#utility.yul\":3737:3809   */\n      tag_140\n      jump\t// in\n    tag_222:\n        /* \"#utility.yul\":3484:3816   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3822:3991   */\n    tag_156:\n        /* \"#utility.yul\":3906:3917   */\n      0x00\n        /* \"#utility.yul\":3940:3946   */\n      dup3\n        /* \"#utility.yul\":3935:3938   */\n      dup3\n        /* \"#utility.yul\":3928:3947   */\n      mstore\n        /* \"#utility.yul\":3980:3984   */\n      0x20\n        /* \"#utility.yul\":3975:3978   */\n      dup3\n        /* \"#utility.yul\":3971:3985   */\n      add\n        /* \"#utility.yul\":3956:3985   */\n      swap1\n      pop\n        /* \"#utility.yul\":3822:3991   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3997:4179   */\n    tag_157:\n        /* \"#utility.yul\":4137:4171   */\n      0x436861645065706543726f776473616c653a206e657720726174652069732030\n        /* \"#utility.yul\":4133:4134   */\n      0x00\n        /* \"#utility.yul\":4125:4131   */\n      dup3\n        /* \"#utility.yul\":4121:4135   */\n      add\n        /* \"#utility.yul\":4114:4172   */\n      mstore\n        /* \"#utility.yul\":3997:4179   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4185:4551   */\n    tag_158:\n        /* \"#utility.yul\":4327:4330   */\n      0x00\n        /* \"#utility.yul\":4348:4415   */\n      tag_226\n        /* \"#utility.yul\":4412:4414   */\n      0x20\n        /* \"#utility.yul\":4407:4410   */\n      dup4\n        /* \"#utility.yul\":4348:4415   */\n      tag_156\n      jump\t// in\n    tag_226:\n        /* \"#utility.yul\":4341:4415   */\n      swap2\n      pop\n        /* \"#utility.yul\":4424:4517   */\n      tag_227\n        /* \"#utility.yul\":4513:4516   */\n      dup3\n        /* \"#utility.yul\":4424:4517   */\n      tag_157\n      jump\t// in\n    tag_227:\n        /* \"#utility.yul\":4542:4544   */\n      0x20\n        /* \"#utility.yul\":4537:4540   */\n      dup3\n        /* \"#utility.yul\":4533:4545   */\n      add\n        /* \"#utility.yul\":4526:4545   */\n      swap1\n      pop\n        /* \"#utility.yul\":4185:4551   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4557:4976   */\n    tag_78:\n        /* \"#utility.yul\":4723:4727   */\n      0x00\n        /* \"#utility.yul\":4761:4763   */\n      0x20\n        /* \"#utility.yul\":4750:4759   */\n      dup3\n        /* \"#utility.yul\":4746:4764   */\n      add\n        /* \"#utility.yul\":4738:4764   */\n      swap1\n      pop\n        /* \"#utility.yul\":4810:4819   */\n      dup2\n        /* \"#utility.yul\":4804:4808   */\n      dup2\n        /* \"#utility.yul\":4800:4820   */\n      sub\n        /* \"#utility.yul\":4796:4797   */\n      0x00\n        /* \"#utility.yul\":4785:4794   */\n      dup4\n        /* \"#utility.yul\":4781:4798   */\n      add\n        /* \"#utility.yul\":4774:4821   */\n      mstore\n        /* \"#utility.yul\":4838:4969   */\n      tag_229\n        /* \"#utility.yul\":4964:4968   */\n      dup2\n        /* \"#utility.yul\":4838:4969   */\n      tag_158\n      jump\t// in\n    tag_229:\n        /* \"#utility.yul\":4830:4969   */\n      swap1\n      pop\n        /* \"#utility.yul\":4557:4976   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4982:5207   */\n    tag_159:\n        /* \"#utility.yul\":5122:5156   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":5118:5119   */\n      0x00\n        /* \"#utility.yul\":5110:5116   */\n      dup3\n        /* \"#utility.yul\":5106:5120   */\n      add\n        /* \"#utility.yul\":5099:5157   */\n      mstore\n        /* \"#utility.yul\":5191:5199   */\n      0x6464726573730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5186:5188   */\n      0x20\n        /* \"#utility.yul\":5178:5184   */\n      dup3\n        /* \"#utility.yul\":5174:5189   */\n      add\n        /* \"#utility.yul\":5167:5200   */\n      mstore\n        /* \"#utility.yul\":4982:5207   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5213:5579   */\n    tag_160:\n        /* \"#utility.yul\":5355:5358   */\n      0x00\n        /* \"#utility.yul\":5376:5443   */\n      tag_232\n        /* \"#utility.yul\":5440:5442   */\n      0x26\n        /* \"#utility.yul\":5435:5438   */\n      dup4\n        /* \"#utility.yul\":5376:5443   */\n      tag_156\n      jump\t// in\n    tag_232:\n        /* \"#utility.yul\":5369:5443   */\n      swap2\n      pop\n        /* \"#utility.yul\":5452:5545   */\n      tag_233\n        /* \"#utility.yul\":5541:5544   */\n      dup3\n        /* \"#utility.yul\":5452:5545   */\n      tag_159\n      jump\t// in\n    tag_233:\n        /* \"#utility.yul\":5570:5572   */\n      0x40\n        /* \"#utility.yul\":5565:5568   */\n      dup3\n        /* \"#utility.yul\":5561:5573   */\n      add\n        /* \"#utility.yul\":5554:5573   */\n      swap1\n      pop\n        /* \"#utility.yul\":5213:5579   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5585:6004   */\n    tag_90:\n        /* \"#utility.yul\":5751:5755   */\n      0x00\n        /* \"#utility.yul\":5789:5791   */\n      0x20\n        /* \"#utility.yul\":5778:5787   */\n      dup3\n        /* \"#utility.yul\":5774:5792   */\n      add\n        /* \"#utility.yul\":5766:5792   */\n      swap1\n      pop\n        /* \"#utility.yul\":5838:5847   */\n      dup2\n        /* \"#utility.yul\":5832:5836   */\n      dup2\n        /* \"#utility.yul\":5828:5848   */\n      sub\n        /* \"#utility.yul\":5824:5825   */\n      0x00\n        /* \"#utility.yul\":5813:5822   */\n      dup4\n        /* \"#utility.yul\":5809:5826   */\n      add\n        /* \"#utility.yul\":5802:5849   */\n      mstore\n        /* \"#utility.yul\":5866:5997   */\n      tag_235\n        /* \"#utility.yul\":5992:5996   */\n      dup2\n        /* \"#utility.yul\":5866:5997   */\n      tag_160\n      jump\t// in\n    tag_235:\n        /* \"#utility.yul\":5858:5997   */\n      swap1\n      pop\n        /* \"#utility.yul\":5585:6004   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6010:6191   */\n    tag_161:\n        /* \"#utility.yul\":6150:6183   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":6146:6147   */\n      0x00\n        /* \"#utility.yul\":6138:6144   */\n      dup3\n        /* \"#utility.yul\":6134:6148   */\n      add\n        /* \"#utility.yul\":6127:6184   */\n      mstore\n        /* \"#utility.yul\":6010:6191   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6197:6563   */\n    tag_162:\n        /* \"#utility.yul\":6339:6342   */\n      0x00\n        /* \"#utility.yul\":6360:6427   */\n      tag_238\n        /* \"#utility.yul\":6424:6426   */\n      0x1f\n        /* \"#utility.yul\":6419:6422   */\n      dup4\n        /* \"#utility.yul\":6360:6427   */\n      tag_156\n      jump\t// in\n    tag_238:\n        /* \"#utility.yul\":6353:6427   */\n      swap2\n      pop\n        /* \"#utility.yul\":6436:6529   */\n      tag_239\n        /* \"#utility.yul\":6525:6528   */\n      dup3\n        /* \"#utility.yul\":6436:6529   */\n      tag_161\n      jump\t// in\n    tag_239:\n        /* \"#utility.yul\":6554:6556   */\n      0x20\n        /* \"#utility.yul\":6549:6552   */\n      dup3\n        /* \"#utility.yul\":6545:6557   */\n      add\n        /* \"#utility.yul\":6538:6557   */\n      swap1\n      pop\n        /* \"#utility.yul\":6197:6563   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6569:6988   */\n    tag_95:\n        /* \"#utility.yul\":6735:6739   */\n      0x00\n        /* \"#utility.yul\":6773:6775   */\n      0x20\n        /* \"#utility.yul\":6762:6771   */\n      dup3\n        /* \"#utility.yul\":6758:6776   */\n      add\n        /* \"#utility.yul\":6750:6776   */\n      swap1\n      pop\n        /* \"#utility.yul\":6822:6831   */\n      dup2\n        /* \"#utility.yul\":6816:6820   */\n      dup2\n        /* \"#utility.yul\":6812:6832   */\n      sub\n        /* \"#utility.yul\":6808:6809   */\n      0x00\n        /* \"#utility.yul\":6797:6806   */\n      dup4\n        /* \"#utility.yul\":6793:6810   */\n      add\n        /* \"#utility.yul\":6786:6833   */\n      mstore\n        /* \"#utility.yul\":6850:6981   */\n      tag_241\n        /* \"#utility.yul\":6976:6980   */\n      dup2\n        /* \"#utility.yul\":6850:6981   */\n      tag_162\n      jump\t// in\n    tag_241:\n        /* \"#utility.yul\":6842:6981   */\n      swap1\n      pop\n        /* \"#utility.yul\":6569:6988   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6994:7231   */\n    tag_163:\n        /* \"#utility.yul\":7134:7168   */\n      0x436861645065706543726f776473616c653a2062656e65666963696172792069\n        /* \"#utility.yul\":7130:7131   */\n      0x00\n        /* \"#utility.yul\":7122:7128   */\n      dup3\n        /* \"#utility.yul\":7118:7132   */\n      add\n        /* \"#utility.yul\":7111:7169   */\n      mstore\n        /* \"#utility.yul\":7203:7223   */\n      0x7320746865207a65726f20616464726573730000000000000000000000000000\n        /* \"#utility.yul\":7198:7200   */\n      0x20\n        /* \"#utility.yul\":7190:7196   */\n      dup3\n        /* \"#utility.yul\":7186:7201   */\n      add\n        /* \"#utility.yul\":7179:7224   */\n      mstore\n        /* \"#utility.yul\":6994:7231   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7237:7603   */\n    tag_164:\n        /* \"#utility.yul\":7379:7382   */\n      0x00\n        /* \"#utility.yul\":7400:7467   */\n      tag_244\n        /* \"#utility.yul\":7464:7466   */\n      0x32\n        /* \"#utility.yul\":7459:7462   */\n      dup4\n        /* \"#utility.yul\":7400:7467   */\n      tag_156\n      jump\t// in\n    tag_244:\n        /* \"#utility.yul\":7393:7467   */\n      swap2\n      pop\n        /* \"#utility.yul\":7476:7569   */\n      tag_245\n        /* \"#utility.yul\":7565:7568   */\n      dup3\n        /* \"#utility.yul\":7476:7569   */\n      tag_163\n      jump\t// in\n    tag_245:\n        /* \"#utility.yul\":7594:7596   */\n      0x40\n        /* \"#utility.yul\":7589:7592   */\n      dup3\n        /* \"#utility.yul\":7585:7597   */\n      add\n        /* \"#utility.yul\":7578:7597   */\n      swap1\n      pop\n        /* \"#utility.yul\":7237:7603   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7609:8028   */\n    tag_99:\n        /* \"#utility.yul\":7775:7779   */\n      0x00\n        /* \"#utility.yul\":7813:7815   */\n      0x20\n        /* \"#utility.yul\":7802:7811   */\n      dup3\n        /* \"#utility.yul\":7798:7816   */\n      add\n        /* \"#utility.yul\":7790:7816   */\n      swap1\n      pop\n        /* \"#utility.yul\":7862:7871   */\n      dup2\n        /* \"#utility.yul\":7856:7860   */\n      dup2\n        /* \"#utility.yul\":7852:7872   */\n      sub\n        /* \"#utility.yul\":7848:7849   */\n      0x00\n        /* \"#utility.yul\":7837:7846   */\n      dup4\n        /* \"#utility.yul\":7833:7850   */\n      add\n        /* \"#utility.yul\":7826:7873   */\n      mstore\n        /* \"#utility.yul\":7890:8021   */\n      tag_247\n        /* \"#utility.yul\":8016:8020   */\n      dup2\n        /* \"#utility.yul\":7890:8021   */\n      tag_164\n      jump\t// in\n    tag_247:\n        /* \"#utility.yul\":7882:8021   */\n      swap1\n      pop\n        /* \"#utility.yul\":7609:8028   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8034:8254   */\n    tag_165:\n        /* \"#utility.yul\":8174:8208   */\n      0x436861645065706543726f776473616c653a20776569416d6f756e7420697320\n        /* \"#utility.yul\":8170:8171   */\n      0x00\n        /* \"#utility.yul\":8162:8168   */\n      dup3\n        /* \"#utility.yul\":8158:8172   */\n      add\n        /* \"#utility.yul\":8151:8209   */\n      mstore\n        /* \"#utility.yul\":8243:8246   */\n      0x3000000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8238:8240   */\n      0x20\n        /* \"#utility.yul\":8230:8236   */\n      dup3\n        /* \"#utility.yul\":8226:8241   */\n      add\n        /* \"#utility.yul\":8219:8247   */\n      mstore\n        /* \"#utility.yul\":8034:8254   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8260:8626   */\n    tag_166:\n        /* \"#utility.yul\":8402:8405   */\n      0x00\n        /* \"#utility.yul\":8423:8490   */\n      tag_250\n        /* \"#utility.yul\":8487:8489   */\n      0x21\n        /* \"#utility.yul\":8482:8485   */\n      dup4\n        /* \"#utility.yul\":8423:8490   */\n      tag_156\n      jump\t// in\n    tag_250:\n        /* \"#utility.yul\":8416:8490   */\n      swap2\n      pop\n        /* \"#utility.yul\":8499:8592   */\n      tag_251\n        /* \"#utility.yul\":8588:8591   */\n      dup3\n        /* \"#utility.yul\":8499:8592   */\n      tag_165\n      jump\t// in\n    tag_251:\n        /* \"#utility.yul\":8617:8619   */\n      0x40\n        /* \"#utility.yul\":8612:8615   */\n      dup3\n        /* \"#utility.yul\":8608:8620   */\n      add\n        /* \"#utility.yul\":8601:8620   */\n      swap1\n      pop\n        /* \"#utility.yul\":8260:8626   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8632:9051   */\n    tag_102:\n        /* \"#utility.yul\":8798:8802   */\n      0x00\n        /* \"#utility.yul\":8836:8838   */\n      0x20\n        /* \"#utility.yul\":8825:8834   */\n      dup3\n        /* \"#utility.yul\":8821:8839   */\n      add\n        /* \"#utility.yul\":8813:8839   */\n      swap1\n      pop\n        /* \"#utility.yul\":8885:8894   */\n      dup2\n        /* \"#utility.yul\":8879:8883   */\n      dup2\n        /* \"#utility.yul\":8875:8895   */\n      sub\n        /* \"#utility.yul\":8871:8872   */\n      0x00\n        /* \"#utility.yul\":8860:8869   */\n      dup4\n        /* \"#utility.yul\":8856:8873   */\n      add\n        /* \"#utility.yul\":8849:8896   */\n      mstore\n        /* \"#utility.yul\":8913:9044   */\n      tag_253\n        /* \"#utility.yul\":9039:9043   */\n      dup2\n        /* \"#utility.yul\":8913:9044   */\n      tag_166\n      jump\t// in\n    tag_253:\n        /* \"#utility.yul\":8905:9044   */\n      swap1\n      pop\n        /* \"#utility.yul\":8632:9051   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9057:9237   */\n    tag_167:\n        /* \"#utility.yul\":9105:9182   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9102:9103   */\n      0x00\n        /* \"#utility.yul\":9095:9183   */\n      mstore\n        /* \"#utility.yul\":9202:9206   */\n      0x11\n        /* \"#utility.yul\":9199:9200   */\n      0x04\n        /* \"#utility.yul\":9192:9207   */\n      mstore\n        /* \"#utility.yul\":9226:9230   */\n      0x24\n        /* \"#utility.yul\":9223:9224   */\n      0x00\n        /* \"#utility.yul\":9216:9231   */\n      revert\n        /* \"#utility.yul\":9243:9434   */\n    tag_108:\n        /* \"#utility.yul\":9283:9286   */\n      0x00\n        /* \"#utility.yul\":9302:9322   */\n      tag_256\n        /* \"#utility.yul\":9320:9321   */\n      dup3\n        /* \"#utility.yul\":9302:9322   */\n      tag_139\n      jump\t// in\n    tag_256:\n        /* \"#utility.yul\":9297:9322   */\n      swap2\n      pop\n        /* \"#utility.yul\":9336:9356   */\n      tag_257\n        /* \"#utility.yul\":9354:9355   */\n      dup4\n        /* \"#utility.yul\":9336:9356   */\n      tag_139\n      jump\t// in\n    tag_257:\n        /* \"#utility.yul\":9331:9356   */\n      swap3\n      pop\n        /* \"#utility.yul\":9379:9380   */\n      dup3\n        /* \"#utility.yul\":9376:9377   */\n      dup3\n        /* \"#utility.yul\":9372:9381   */\n      add\n        /* \"#utility.yul\":9365:9381   */\n      swap1\n      pop\n        /* \"#utility.yul\":9400:9403   */\n      dup1\n        /* \"#utility.yul\":9397:9398   */\n      dup3\n        /* \"#utility.yul\":9394:9404   */\n      gt\n        /* \"#utility.yul\":9391:9427   */\n      iszero\n      tag_258\n      jumpi\n        /* \"#utility.yul\":9407:9425   */\n      tag_259\n      tag_167\n      jump\t// in\n    tag_259:\n        /* \"#utility.yul\":9391:9427   */\n    tag_258:\n        /* \"#utility.yul\":9243:9434   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9440:9622   */\n    tag_168:\n        /* \"#utility.yul\":9580:9614   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":9576:9577   */\n      0x00\n        /* \"#utility.yul\":9568:9574   */\n      dup3\n        /* \"#utility.yul\":9564:9578   */\n      add\n        /* \"#utility.yul\":9557:9615   */\n      mstore\n        /* \"#utility.yul\":9440:9622   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9628:9994   */\n    tag_169:\n        /* \"#utility.yul\":9770:9773   */\n      0x00\n        /* \"#utility.yul\":9791:9858   */\n      tag_262\n        /* \"#utility.yul\":9855:9857   */\n      0x20\n        /* \"#utility.yul\":9850:9853   */\n      dup4\n        /* \"#utility.yul\":9791:9858   */\n      tag_156\n      jump\t// in\n    tag_262:\n        /* \"#utility.yul\":9784:9858   */\n      swap2\n      pop\n        /* \"#utility.yul\":9867:9960   */\n      tag_263\n        /* \"#utility.yul\":9956:9959   */\n      dup3\n        /* \"#utility.yul\":9867:9960   */\n      tag_168\n      jump\t// in\n    tag_263:\n        /* \"#utility.yul\":9985:9987   */\n      0x20\n        /* \"#utility.yul\":9980:9983   */\n      dup3\n        /* \"#utility.yul\":9976:9988   */\n      add\n        /* \"#utility.yul\":9969:9988   */\n      swap1\n      pop\n        /* \"#utility.yul\":9628:9994   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10000:10419   */\n    tag_125:\n        /* \"#utility.yul\":10166:10170   */\n      0x00\n        /* \"#utility.yul\":10204:10206   */\n      0x20\n        /* \"#utility.yul\":10193:10202   */\n      dup3\n        /* \"#utility.yul\":10189:10207   */\n      add\n        /* \"#utility.yul\":10181:10207   */\n      swap1\n      pop\n        /* \"#utility.yul\":10253:10262   */\n      dup2\n        /* \"#utility.yul\":10247:10251   */\n      dup2\n        /* \"#utility.yul\":10243:10263   */\n      sub\n        /* \"#utility.yul\":10239:10240   */\n      0x00\n        /* \"#utility.yul\":10228:10237   */\n      dup4\n        /* \"#utility.yul\":10224:10241   */\n      add\n        /* \"#utility.yul\":10217:10264   */\n      mstore\n        /* \"#utility.yul\":10281:10412   */\n      tag_265\n        /* \"#utility.yul\":10407:10411   */\n      dup2\n        /* \"#utility.yul\":10281:10412   */\n      tag_169\n      jump\t// in\n    tag_265:\n        /* \"#utility.yul\":10273:10412   */\n      swap1\n      pop\n        /* \"#utility.yul\":10000:10419   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10425:10835   */\n    tag_129:\n        /* \"#utility.yul\":10465:10472   */\n      0x00\n        /* \"#utility.yul\":10488:10508   */\n      tag_267\n        /* \"#utility.yul\":10506:10507   */\n      dup3\n        /* \"#utility.yul\":10488:10508   */\n      tag_139\n      jump\t// in\n    tag_267:\n        /* \"#utility.yul\":10483:10508   */\n      swap2\n      pop\n        /* \"#utility.yul\":10522:10542   */\n      tag_268\n        /* \"#utility.yul\":10540:10541   */\n      dup4\n        /* \"#utility.yul\":10522:10542   */\n      tag_139\n      jump\t// in\n    tag_268:\n        /* \"#utility.yul\":10517:10542   */\n      swap3\n      pop\n        /* \"#utility.yul\":10577:10578   */\n      dup3\n        /* \"#utility.yul\":10574:10575   */\n      dup3\n        /* \"#utility.yul\":10570:10579   */\n      mul\n        /* \"#utility.yul\":10599:10629   */\n      tag_269\n        /* \"#utility.yul\":10617:10628   */\n      dup2\n        /* \"#utility.yul\":10599:10629   */\n      tag_139\n      jump\t// in\n    tag_269:\n        /* \"#utility.yul\":10588:10629   */\n      swap2\n      pop\n        /* \"#utility.yul\":10778:10779   */\n      dup3\n        /* \"#utility.yul\":10769:10776   */\n      dup3\n        /* \"#utility.yul\":10765:10780   */\n      div\n        /* \"#utility.yul\":10762:10763   */\n      dup5\n        /* \"#utility.yul\":10759:10781   */\n      eq\n        /* \"#utility.yul\":10739:10740   */\n      dup4\n        /* \"#utility.yul\":10732:10741   */\n      iszero\n        /* \"#utility.yul\":10712:10795   */\n      or\n        /* \"#utility.yul\":10689:10828   */\n      tag_270\n      jumpi\n        /* \"#utility.yul\":10808:10826   */\n      tag_271\n      tag_167\n      jump\t// in\n    tag_271:\n        /* \"#utility.yul\":10689:10828   */\n    tag_270:\n        /* \"#utility.yul\":10473:10835   */\n      pop\n        /* \"#utility.yul\":10425:10835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10841:11283   */\n    tag_133:\n        /* \"#utility.yul\":10990:10994   */\n      0x00\n        /* \"#utility.yul\":11028:11030   */\n      0x60\n        /* \"#utility.yul\":11017:11026   */\n      dup3\n        /* \"#utility.yul\":11013:11031   */\n      add\n        /* \"#utility.yul\":11005:11031   */\n      swap1\n      pop\n        /* \"#utility.yul\":11041:11112   */\n      tag_273\n        /* \"#utility.yul\":11109:11110   */\n      0x00\n        /* \"#utility.yul\":11098:11107   */\n      dup4\n        /* \"#utility.yul\":11094:11111   */\n      add\n        /* \"#utility.yul\":11085:11091   */\n      dup7\n        /* \"#utility.yul\":11041:11112   */\n      tag_148\n      jump\t// in\n    tag_273:\n        /* \"#utility.yul\":11122:11194   */\n      tag_274\n        /* \"#utility.yul\":11190:11192   */\n      0x20\n        /* \"#utility.yul\":11179:11188   */\n      dup4\n        /* \"#utility.yul\":11175:11193   */\n      add\n        /* \"#utility.yul\":11166:11172   */\n      dup6\n        /* \"#utility.yul\":11122:11194   */\n      tag_148\n      jump\t// in\n    tag_274:\n        /* \"#utility.yul\":11204:11276   */\n      tag_275\n        /* \"#utility.yul\":11272:11274   */\n      0x40\n        /* \"#utility.yul\":11261:11270   */\n      dup4\n        /* \"#utility.yul\":11257:11275   */\n      add\n        /* \"#utility.yul\":11248:11254   */\n      dup5\n        /* \"#utility.yul\":11204:11276   */\n      tag_140\n      jump\t// in\n    tag_275:\n        /* \"#utility.yul\":10841:11283   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11289:11379   */\n    tag_170:\n        /* \"#utility.yul\":11323:11330   */\n      0x00\n        /* \"#utility.yul\":11366:11371   */\n      dup2\n        /* \"#utility.yul\":11359:11372   */\n      iszero\n        /* \"#utility.yul\":11352:11373   */\n      iszero\n        /* \"#utility.yul\":11341:11373   */\n      swap1\n      pop\n        /* \"#utility.yul\":11289:11379   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11385:11501   */\n    tag_171:\n        /* \"#utility.yul\":11455:11476   */\n      tag_278\n        /* \"#utility.yul\":11470:11475   */\n      dup2\n        /* \"#utility.yul\":11455:11476   */\n      tag_170\n      jump\t// in\n    tag_278:\n        /* \"#utility.yul\":11448:11453   */\n      dup2\n        /* \"#utility.yul\":11445:11477   */\n      eq\n        /* \"#utility.yul\":11435:11495   */\n      tag_279\n      jumpi\n        /* \"#utility.yul\":11491:11492   */\n      0x00\n        /* \"#utility.yul\":11488:11489   */\n      dup1\n        /* \"#utility.yul\":11481:11493   */\n      revert\n        /* \"#utility.yul\":11435:11495   */\n    tag_279:\n        /* \"#utility.yul\":11385:11501   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11507:11644   */\n    tag_172:\n        /* \"#utility.yul\":11561:11566   */\n      0x00\n        /* \"#utility.yul\":11592:11598   */\n      dup2\n        /* \"#utility.yul\":11586:11599   */\n      mload\n        /* \"#utility.yul\":11577:11599   */\n      swap1\n      pop\n        /* \"#utility.yul\":11608:11638   */\n      tag_281\n        /* \"#utility.yul\":11632:11637   */\n      dup2\n        /* \"#utility.yul\":11608:11638   */\n      tag_171\n      jump\t// in\n    tag_281:\n        /* \"#utility.yul\":11507:11644   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11650:11995   */\n    tag_137:\n        /* \"#utility.yul\":11717:11723   */\n      0x00\n        /* \"#utility.yul\":11766:11768   */\n      0x20\n        /* \"#utility.yul\":11754:11763   */\n      dup3\n        /* \"#utility.yul\":11745:11752   */\n      dup5\n        /* \"#utility.yul\":11741:11764   */\n      sub\n        /* \"#utility.yul\":11737:11769   */\n      slt\n        /* \"#utility.yul\":11734:11853   */\n      iszero\n      tag_283\n      jumpi\n        /* \"#utility.yul\":11772:11851   */\n      tag_284\n      tag_142\n      jump\t// in\n    tag_284:\n        /* \"#utility.yul\":11734:11853   */\n    tag_283:\n        /* \"#utility.yul\":11892:11893   */\n      0x00\n        /* \"#utility.yul\":11917:11978   */\n      tag_285\n        /* \"#utility.yul\":11970:11977   */\n      dup5\n        /* \"#utility.yul\":11961:11967   */\n      dup3\n        /* \"#utility.yul\":11950:11959   */\n      dup6\n        /* \"#utility.yul\":11946:11968   */\n      add\n        /* \"#utility.yul\":11917:11978   */\n      tag_172\n      jump\t// in\n    tag_285:\n        /* \"#utility.yul\":11907:11978   */\n      swap2\n      pop\n        /* \"#utility.yul\":11863:11988   */\n      pop\n        /* \"#utility.yul\":11650:11995   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220994dc450424dd8e7a7a7079bd3916a079079dc382997286ea236db947e02704864736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_131": {
									"entryPoint": null,
									"id": 131,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_643": {
									"entryPoint": null,
									"id": 643,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_256": {
									"entryPoint": 358,
									"id": 256,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_111": {
									"entryPoint": 366,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 704,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 603,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_address_fromMemory": {
									"entryPoint": 727,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_stringliteral_2be6f75e4646a2c7ee6be5c8713e255f7d760756589c534eabd7b36ecd01b082_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 856,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_87b493e67a349900d043c7f8b3f8dcbac41d09c10dbc42be25d2eaa8cd8696a2_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1008,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2be6f75e4646a2c7ee6be5c8713e255f7d760756589c534eabd7b36ecd01b082__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 895,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_87b493e67a349900d043c7f8b3f8dcbac41d09c10dbc42be25d2eaa8cd8696a2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1047,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 798,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 658,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 626,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 567,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 562,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_2be6f75e4646a2c7ee6be5c8713e255f7d760756589c534eabd7b36ecd01b082": {
									"entryPoint": 815,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_87b493e67a349900d043c7f8b3f8dcbac41d09c10dbc42be25d2eaa8cd8696a2": {
									"entryPoint": 929,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 678,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 577,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:3905:6",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:6"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:6",
														"type": ""
													}
												],
												"src": "7:75:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:6"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:6"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:32:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:16:6",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "400:5:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:6",
														"type": ""
													}
												],
												"src": "334:77:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "460:79:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "517:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "526:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "529:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "473:43:6"
															},
															"nodeType": "YulIf",
															"src": "470:63:6"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "453:5:6",
														"type": ""
													}
												],
												"src": "417:122:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "608:80:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "618:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "633:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "627:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "627:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "618:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "676:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "649:26:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "649:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "649:33:6"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "586:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "594:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "602:5:6",
														"type": ""
													}
												],
												"src": "545:143:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "739:81:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "749:65:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "764:5:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "771:42:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "760:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "760:54:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "749:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "721:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "731:7:6",
														"type": ""
													}
												],
												"src": "694:126:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "871:51:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "881:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "910:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "892:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "892:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "881:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "853:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "863:7:6",
														"type": ""
													}
												],
												"src": "826:96:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "971:79:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1028:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1037:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1040:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1030:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1030:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1030:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "994:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1019:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "1001:17:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1001:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "991:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "991:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "984:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "984:43:6"
															},
															"nodeType": "YulIf",
															"src": "981:63:6"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "964:5:6",
														"type": ""
													}
												],
												"src": "928:122:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1119:80:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1129:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1144:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1138:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1138:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1129:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1187:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1160:26:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1160:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1160:33:6"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1097:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1105:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1113:5:6",
														"type": ""
													}
												],
												"src": "1056:143:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1299:413:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1345:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1347:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1347:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1347:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1320:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1329:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1316:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1316:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1341:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1312:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1312:32:6"
															},
															"nodeType": "YulIf",
															"src": "1309:119:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "1438:128:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1453:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1467:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1457:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1482:74:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1528:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1539:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1524:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1524:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1548:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1492:31:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1492:64:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1482:6:6"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1576:129:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1591:16:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1605:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1595:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1621:74:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1667:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1678:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1663:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1663:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1687:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1631:31:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1631:64:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1621:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1261:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1272:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1284:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1292:6:6",
														"type": ""
													}
												],
												"src": "1205:507:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1814:73:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1831:3:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1836:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1824:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1824:19:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1824:19:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1852:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1871:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1876:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1867:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1867:14:6"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "1852:11:6"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1786:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1791:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "1802:11:6",
														"type": ""
													}
												],
												"src": "1718:169:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1999:72:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2021:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2029:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2017:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2017:14:6"
																	},
																	{
																		"hexValue": "436861645065706543726f776473616c653a20726174652069732030",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2033:30:6",
																		"type": "",
																		"value": "ChadPepeCrowdsale: rate is 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2010:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2010:54:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2010:54:6"
														}
													]
												},
												"name": "store_literal_in_memory_2be6f75e4646a2c7ee6be5c8713e255f7d760756589c534eabd7b36ecd01b082",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1991:6:6",
														"type": ""
													}
												],
												"src": "1893:178:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2223:220:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2233:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2299:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2304:2:6",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2240:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2240:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2233:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2405:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_2be6f75e4646a2c7ee6be5c8713e255f7d760756589c534eabd7b36ecd01b082",
																	"nodeType": "YulIdentifier",
																	"src": "2316:88:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2316:93:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2316:93:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2418:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2429:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2434:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2425:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2425:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2418:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_2be6f75e4646a2c7ee6be5c8713e255f7d760756589c534eabd7b36ecd01b082_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2211:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2219:3:6",
														"type": ""
													}
												],
												"src": "2077:366:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2620:248:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2630:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2642:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2653:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2638:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2638:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2630:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2677:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2688:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2673:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2673:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "2696:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2702:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2692:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2692:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2666:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2666:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2666:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2722:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "2856:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_2be6f75e4646a2c7ee6be5c8713e255f7d760756589c534eabd7b36ecd01b082_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2730:124:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2730:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2722:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2be6f75e4646a2c7ee6be5c8713e255f7d760756589c534eabd7b36ecd01b082__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2600:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2615:4:6",
														"type": ""
													}
												],
												"src": "2449:419:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2980:125:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3002:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3010:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2998:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2998:14:6"
																	},
																	{
																		"hexValue": "436861645065706543726f776473616c653a20746f6b656e2069732074686520",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3014:34:6",
																		"type": "",
																		"value": "ChadPepeCrowdsale: token is the "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2991:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2991:58:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2991:58:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3070:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3078:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3066:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3066:15:6"
																	},
																	{
																		"hexValue": "7a65726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3083:14:6",
																		"type": "",
																		"value": "zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3059:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3059:39:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3059:39:6"
														}
													]
												},
												"name": "store_literal_in_memory_87b493e67a349900d043c7f8b3f8dcbac41d09c10dbc42be25d2eaa8cd8696a2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2972:6:6",
														"type": ""
													}
												],
												"src": "2874:231:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3257:220:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3267:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3333:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3338:2:6",
																		"type": "",
																		"value": "44"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3274:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3274:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3267:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3439:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_87b493e67a349900d043c7f8b3f8dcbac41d09c10dbc42be25d2eaa8cd8696a2",
																	"nodeType": "YulIdentifier",
																	"src": "3350:88:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3350:93:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3350:93:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3452:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3463:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3468:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3459:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3459:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3452:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_87b493e67a349900d043c7f8b3f8dcbac41d09c10dbc42be25d2eaa8cd8696a2_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3245:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3253:3:6",
														"type": ""
													}
												],
												"src": "3111:366:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3654:248:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3664:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3676:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3687:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3672:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3672:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3664:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3711:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3722:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3707:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3707:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "3730:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3736:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3726:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3726:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3700:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3700:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3700:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3756:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "3890:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_87b493e67a349900d043c7f8b3f8dcbac41d09c10dbc42be25d2eaa8cd8696a2_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3764:124:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3764:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3756:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_87b493e67a349900d043c7f8b3f8dcbac41d09c10dbc42be25d2eaa8cd8696a2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3634:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3649:4:6",
														"type": ""
													}
												],
												"src": "3483:419:6"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_address_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_2be6f75e4646a2c7ee6be5c8713e255f7d760756589c534eabd7b36ecd01b082(memPtr) {\n\n        mstore(add(memPtr, 0), \"ChadPepeCrowdsale: rate is 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_2be6f75e4646a2c7ee6be5c8713e255f7d760756589c534eabd7b36ecd01b082_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_2be6f75e4646a2c7ee6be5c8713e255f7d760756589c534eabd7b36ecd01b082(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_2be6f75e4646a2c7ee6be5c8713e255f7d760756589c534eabd7b36ecd01b082__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2be6f75e4646a2c7ee6be5c8713e255f7d760756589c534eabd7b36ecd01b082_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_87b493e67a349900d043c7f8b3f8dcbac41d09c10dbc42be25d2eaa8cd8696a2(memPtr) {\n\n        mstore(add(memPtr, 0), \"ChadPepeCrowdsale: token is the \")\n\n        mstore(add(memPtr, 32), \"zero address\")\n\n    }\n\n    function abi_encode_t_stringliteral_87b493e67a349900d043c7f8b3f8dcbac41d09c10dbc42be25d2eaa8cd8696a2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 44)\n        store_literal_in_memory_87b493e67a349900d043c7f8b3f8dcbac41d09c10dbc42be25d2eaa8cd8696a2(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_87b493e67a349900d043c7f8b3f8dcbac41d09c10dbc42be25d2eaa8cd8696a2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_87b493e67a349900d043c7f8b3f8dcbac41d09c10dbc42be25d2eaa8cd8696a2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b5060405162001250380380620012508339818101604052810190620000379190620002d7565b620000576200004b6200016660201b60201c565b6200016e60201b60201c565b6001808190555060008211620000a4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200009b906200037f565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160362000116576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200010d9062000417565b60405180910390fd5b8160038190555080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505062000439565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b6000819050919050565b6200024c8162000237565b81146200025857600080fd5b50565b6000815190506200026c8162000241565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200029f8262000272565b9050919050565b620002b18162000292565b8114620002bd57600080fd5b50565b600081519050620002d181620002a6565b92915050565b60008060408385031215620002f157620002f062000232565b5b600062000301858286016200025b565b92505060206200031485828601620002c0565b9150509250929050565b600082825260208201905092915050565b7f436861645065706543726f776473616c653a2072617465206973203000000000600082015250565b600062000367601c836200031e565b915062000374826200032f565b602082019050919050565b600060208201905081810360008301526200039a8162000358565b9050919050565b7f436861645065706543726f776473616c653a20746f6b656e206973207468652060008201527f7a65726f20616464726573730000000000000000000000000000000000000000602082015250565b6000620003ff602c836200031e565b91506200040c82620003a1565b604082019050919050565b600060208201905081810360008301526200043281620003f0565b9050919050565b610e0780620004496000396000f3fe60806040526004361061007f5760003560e01c80638da5cb5b1161004e5780638da5cb5b1461012a578063ec8ac4d814610155578063f2fde38b14610171578063fc0c546a1461019a5761008f565b80632c4e722e1461009457806334fcf437146100bf5780634042b66f146100e8578063715018a6146101135761008f565b3661008f5761008d336101c5565b005b600080fd5b3480156100a057600080fd5b506100a961029e565b6040516100b691906107b4565b60405180910390f35b3480156100cb57600080fd5b506100e660048036038101906100e19190610800565b6102a4565b005b3480156100f457600080fd5b506100fd6102f9565b60405161010a91906107b4565b60405180910390f35b34801561011f57600080fd5b506101286102ff565b005b34801561013657600080fd5b5061013f610313565b60405161014c919061086e565b60405180910390f35b61016f600480360381019061016a91906108b5565b6101c5565b005b34801561017d57600080fd5b50610198600480360381019061019391906108b5565b61033c565b005b3480156101a657600080fd5b506101af6103bf565b6040516101bc9190610941565b60405180910390f35b6101cd6103e5565b60003490506101dc8282610434565b60006101e7826104ea565b90506101fe8260045461050890919063ffffffff16565b60048190555061020e838261051e565b8273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f6faf93231a456e552dbc9961f58d9713ee4f2e69d15f1975b050ef0911053a7b848460405161026d92919061095c565b60405180910390a361027f838361052c565b610287610530565b6102918383610580565b505061029b610584565b50565b60035481565b6102ac61058d565b600081116102ef576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102e6906109e2565b60405180910390fd5b8060038190555050565b60045481565b61030761058d565b610311600061060b565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61034461058d565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036103b3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103aa90610a74565b60405180910390fd5b6103bc8161060b565b50565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60026001540361042a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161042190610ae0565b60405180910390fd5b6002600181905550565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036104a3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161049a90610b72565b60405180910390fd5b600081036104e6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104dd90610c04565b60405180910390fd5b5050565b6000610501600354836106cf90919063ffffffff16565b9050919050565b600081836105169190610c53565b905092915050565b61052882826106e5565b5050565b5050565b610538610313565b73ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f1935050505015801561057d573d6000803e3d6000fd5b50565b5050565b60018081905550565b610595610793565b73ffffffffffffffffffffffffffffffffffffffff166105b3610313565b73ffffffffffffffffffffffffffffffffffffffff1614610609576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060090610cd3565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600081836106dd9190610cf3565b905092915050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd61072b610313565b84846040518463ffffffff1660e01b815260040161074b93929190610d35565b6020604051808303816000875af115801561076a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061078e9190610da4565b505050565b600033905090565b6000819050919050565b6107ae8161079b565b82525050565b60006020820190506107c960008301846107a5565b92915050565b600080fd5b6107dd8161079b565b81146107e857600080fd5b50565b6000813590506107fa816107d4565b92915050565b600060208284031215610816576108156107cf565b5b6000610824848285016107eb565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006108588261082d565b9050919050565b6108688161084d565b82525050565b6000602082019050610883600083018461085f565b92915050565b6108928161084d565b811461089d57600080fd5b50565b6000813590506108af81610889565b92915050565b6000602082840312156108cb576108ca6107cf565b5b60006108d9848285016108a0565b91505092915050565b6000819050919050565b60006109076109026108fd8461082d565b6108e2565b61082d565b9050919050565b6000610919826108ec565b9050919050565b600061092b8261090e565b9050919050565b61093b81610920565b82525050565b60006020820190506109566000830184610932565b92915050565b600060408201905061097160008301856107a5565b61097e60208301846107a5565b9392505050565b600082825260208201905092915050565b7f436861645065706543726f776473616c653a206e657720726174652069732030600082015250565b60006109cc602083610985565b91506109d782610996565b602082019050919050565b600060208201905081810360008301526109fb816109bf565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000610a5e602683610985565b9150610a6982610a02565b604082019050919050565b60006020820190508181036000830152610a8d81610a51565b9050919050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b6000610aca601f83610985565b9150610ad582610a94565b602082019050919050565b60006020820190508181036000830152610af981610abd565b9050919050565b7f436861645065706543726f776473616c653a2062656e6566696369617279206960008201527f7320746865207a65726f20616464726573730000000000000000000000000000602082015250565b6000610b5c603283610985565b9150610b6782610b00565b604082019050919050565b60006020820190508181036000830152610b8b81610b4f565b9050919050565b7f436861645065706543726f776473616c653a20776569416d6f756e742069732060008201527f3000000000000000000000000000000000000000000000000000000000000000602082015250565b6000610bee602183610985565b9150610bf982610b92565b604082019050919050565b60006020820190508181036000830152610c1d81610be1565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610c5e8261079b565b9150610c698361079b565b9250828201905080821115610c8157610c80610c24565b5b92915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000610cbd602083610985565b9150610cc882610c87565b602082019050919050565b60006020820190508181036000830152610cec81610cb0565b9050919050565b6000610cfe8261079b565b9150610d098361079b565b9250828202610d178161079b565b91508282048414831517610d2e57610d2d610c24565b5b5092915050565b6000606082019050610d4a600083018661085f565b610d57602083018561085f565b610d6460408301846107a5565b949350505050565b60008115159050919050565b610d8181610d6c565b8114610d8c57600080fd5b50565b600081519050610d9e81610d78565b92915050565b600060208284031215610dba57610db96107cf565b5b6000610dc884828501610d8f565b9150509291505056fea2646970667358221220994dc450424dd8e7a7a7079bd3916a079079dc382997286ea236db947e02704864736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1250 CODESIZE SUB DUP1 PUSH3 0x1250 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x2D7 JUMP JUMPDEST PUSH3 0x57 PUSH3 0x4B PUSH3 0x166 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x16E PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP3 GT PUSH3 0xA4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x9B SWAP1 PUSH3 0x37F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x116 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x10D SWAP1 PUSH3 0x417 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x3 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP PUSH3 0x439 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x24C DUP2 PUSH3 0x237 JUMP JUMPDEST DUP2 EQ PUSH3 0x258 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x26C DUP2 PUSH3 0x241 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x29F DUP3 PUSH3 0x272 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x2B1 DUP2 PUSH3 0x292 JUMP JUMPDEST DUP2 EQ PUSH3 0x2BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x2D1 DUP2 PUSH3 0x2A6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x2F1 JUMPI PUSH3 0x2F0 PUSH3 0x232 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x301 DUP6 DUP3 DUP7 ADD PUSH3 0x25B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH3 0x314 DUP6 DUP3 DUP7 ADD PUSH3 0x2C0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x436861645065706543726F776473616C653A2072617465206973203000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x367 PUSH1 0x1C DUP4 PUSH3 0x31E JUMP JUMPDEST SWAP2 POP PUSH3 0x374 DUP3 PUSH3 0x32F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x39A DUP2 PUSH3 0x358 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x436861645065706543726F776473616C653A20746F6B656E2069732074686520 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7A65726F20616464726573730000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x3FF PUSH1 0x2C DUP4 PUSH3 0x31E JUMP JUMPDEST SWAP2 POP PUSH3 0x40C DUP3 PUSH3 0x3A1 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x432 DUP2 PUSH3 0x3F0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE07 DUP1 PUSH3 0x449 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7F JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x4E JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0xEC8AC4D8 EQ PUSH2 0x155 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x171 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x19A JUMPI PUSH2 0x8F JUMP JUMPDEST DUP1 PUSH4 0x2C4E722E EQ PUSH2 0x94 JUMPI DUP1 PUSH4 0x34FCF437 EQ PUSH2 0xBF JUMPI DUP1 PUSH4 0x4042B66F EQ PUSH2 0xE8 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x113 JUMPI PUSH2 0x8F JUMP JUMPDEST CALLDATASIZE PUSH2 0x8F JUMPI PUSH2 0x8D CALLER PUSH2 0x1C5 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA9 PUSH2 0x29E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB6 SWAP2 SWAP1 PUSH2 0x7B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xCB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE1 SWAP2 SWAP1 PUSH2 0x800 JUMP JUMPDEST PUSH2 0x2A4 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xFD PUSH2 0x2F9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10A SWAP2 SWAP1 PUSH2 0x7B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x11F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x128 PUSH2 0x2FF JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x136 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13F PUSH2 0x313 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14C SWAP2 SWAP1 PUSH2 0x86E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x16A SWAP2 SWAP1 PUSH2 0x8B5 JUMP JUMPDEST PUSH2 0x1C5 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x17D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x198 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x193 SWAP2 SWAP1 PUSH2 0x8B5 JUMP JUMPDEST PUSH2 0x33C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1AF PUSH2 0x3BF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BC SWAP2 SWAP1 PUSH2 0x941 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CD PUSH2 0x3E5 JUMP JUMPDEST PUSH1 0x0 CALLVALUE SWAP1 POP PUSH2 0x1DC DUP3 DUP3 PUSH2 0x434 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E7 DUP3 PUSH2 0x4EA JUMP JUMPDEST SWAP1 POP PUSH2 0x1FE DUP3 PUSH1 0x4 SLOAD PUSH2 0x508 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH2 0x20E DUP4 DUP3 PUSH2 0x51E JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x6FAF93231A456E552DBC9961F58D9713EE4F2E69D15F1975B050EF0911053A7B DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x26D SWAP3 SWAP2 SWAP1 PUSH2 0x95C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x27F DUP4 DUP4 PUSH2 0x52C JUMP JUMPDEST PUSH2 0x287 PUSH2 0x530 JUMP JUMPDEST PUSH2 0x291 DUP4 DUP4 PUSH2 0x580 JUMP JUMPDEST POP POP PUSH2 0x29B PUSH2 0x584 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2AC PUSH2 0x58D JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x2EF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E6 SWAP1 PUSH2 0x9E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x307 PUSH2 0x58D JUMP JUMPDEST PUSH2 0x311 PUSH1 0x0 PUSH2 0x60B JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x344 PUSH2 0x58D JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x3B3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3AA SWAP1 PUSH2 0xA74 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3BC DUP2 PUSH2 0x60B JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0x42A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x421 SWAP1 PUSH2 0xAE0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x4A3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x49A SWAP1 PUSH2 0xB72 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SUB PUSH2 0x4E6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4DD SWAP1 PUSH2 0xC04 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x501 PUSH1 0x3 SLOAD DUP4 PUSH2 0x6CF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x516 SWAP2 SWAP1 PUSH2 0xC53 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x528 DUP3 DUP3 PUSH2 0x6E5 JUMP JUMPDEST POP POP JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x538 PUSH2 0x313 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC CALLVALUE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x57D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x595 PUSH2 0x793 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x5B3 PUSH2 0x313 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x609 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x600 SWAP1 PUSH2 0xCD3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x6DD SWAP2 SWAP1 PUSH2 0xCF3 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD PUSH2 0x72B PUSH2 0x313 JUMP JUMPDEST DUP5 DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x74B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xD35 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x76A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x78E SWAP2 SWAP1 PUSH2 0xDA4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7AE DUP2 PUSH2 0x79B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x7C9 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x7A5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7DD DUP2 PUSH2 0x79B JUMP JUMPDEST DUP2 EQ PUSH2 0x7E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x7FA DUP2 PUSH2 0x7D4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x816 JUMPI PUSH2 0x815 PUSH2 0x7CF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x824 DUP5 DUP3 DUP6 ADD PUSH2 0x7EB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x858 DUP3 PUSH2 0x82D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x868 DUP2 PUSH2 0x84D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x883 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x85F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x892 DUP2 PUSH2 0x84D JUMP JUMPDEST DUP2 EQ PUSH2 0x89D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x8AF DUP2 PUSH2 0x889 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x8CB JUMPI PUSH2 0x8CA PUSH2 0x7CF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x8D9 DUP5 DUP3 DUP6 ADD PUSH2 0x8A0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x907 PUSH2 0x902 PUSH2 0x8FD DUP5 PUSH2 0x82D JUMP JUMPDEST PUSH2 0x8E2 JUMP JUMPDEST PUSH2 0x82D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x919 DUP3 PUSH2 0x8EC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x92B DUP3 PUSH2 0x90E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x93B DUP2 PUSH2 0x920 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x956 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x932 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x971 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x7A5 JUMP JUMPDEST PUSH2 0x97E PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x7A5 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x436861645065706543726F776473616C653A206E657720726174652069732030 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9CC PUSH1 0x20 DUP4 PUSH2 0x985 JUMP JUMPDEST SWAP2 POP PUSH2 0x9D7 DUP3 PUSH2 0x996 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x9FB DUP2 PUSH2 0x9BF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA5E PUSH1 0x26 DUP4 PUSH2 0x985 JUMP JUMPDEST SWAP2 POP PUSH2 0xA69 DUP3 PUSH2 0xA02 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xA8D DUP2 PUSH2 0xA51 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xACA PUSH1 0x1F DUP4 PUSH2 0x985 JUMP JUMPDEST SWAP2 POP PUSH2 0xAD5 DUP3 PUSH2 0xA94 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xAF9 DUP2 PUSH2 0xABD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x436861645065706543726F776473616C653A2062656E65666963696172792069 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7320746865207A65726F20616464726573730000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB5C PUSH1 0x32 DUP4 PUSH2 0x985 JUMP JUMPDEST SWAP2 POP PUSH2 0xB67 DUP3 PUSH2 0xB00 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xB8B DUP2 PUSH2 0xB4F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x436861645065706543726F776473616C653A20776569416D6F756E7420697320 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBEE PUSH1 0x21 DUP4 PUSH2 0x985 JUMP JUMPDEST SWAP2 POP PUSH2 0xBF9 DUP3 PUSH2 0xB92 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xC1D DUP2 PUSH2 0xBE1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xC5E DUP3 PUSH2 0x79B JUMP JUMPDEST SWAP2 POP PUSH2 0xC69 DUP4 PUSH2 0x79B JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xC81 JUMPI PUSH2 0xC80 PUSH2 0xC24 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCBD PUSH1 0x20 DUP4 PUSH2 0x985 JUMP JUMPDEST SWAP2 POP PUSH2 0xCC8 DUP3 PUSH2 0xC87 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xCEC DUP2 PUSH2 0xCB0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCFE DUP3 PUSH2 0x79B JUMP JUMPDEST SWAP2 POP PUSH2 0xD09 DUP4 PUSH2 0x79B JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0xD17 DUP2 PUSH2 0x79B JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0xD2E JUMPI PUSH2 0xD2D PUSH2 0xC24 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xD4A PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x85F JUMP JUMPDEST PUSH2 0xD57 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x85F JUMP JUMPDEST PUSH2 0xD64 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x7A5 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD81 DUP2 PUSH2 0xD6C JUMP JUMPDEST DUP2 EQ PUSH2 0xD8C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xD9E DUP2 PUSH2 0xD78 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDBA JUMPI PUSH2 0xDB9 PUSH2 0x7CF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xDC8 DUP5 DUP3 DUP6 ADD PUSH2 0xD8F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP10 0x4D 0xC4 POP TIMESTAMP 0x4D 0xD8 0xE7 0xA7 0xA7 SMOD SWAP12 0xD3 SWAP2 PUSH11 0x79079DC382997286EA236 0xDB SWAP5 PUSH31 0x2704864736F6C634300081200330000000000000000000000000000000000 ",
							"sourceMap": "289:2431:5:-:0;;;579:273;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;936:32:0;955:12;:10;;;:12;;:::i;:::-;936:18;;;:32;;:::i;:::-;1716:1:1;1821:7;:22;;;;655:1:5;647:5;:9;639:50;;;;;;;;;;;;:::i;:::-;;;;;;;;;732:1;707:27;;:13;:27;;;699:84;;;;;;;;;;;;:::i;:::-;;;;;;;;;801:5;794:4;:12;;;;831:13;816:5;;:29;;;;;;;;;;;;;;;;;;579:273;;289:2431;;640:96:3;693:7;719:10;712:17;;640:96;:::o;2433:187:0:-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;88:117:6:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:143::-;602:5;633:6;627:13;618:22;;649:33;676:5;649:33;:::i;:::-;545:143;;;;:::o;694:126::-;731:7;771:42;764:5;760:54;749:65;;694:126;;;:::o;826:96::-;863:7;892:24;910:5;892:24;:::i;:::-;881:35;;826:96;;;:::o;928:122::-;1001:24;1019:5;1001:24;:::i;:::-;994:5;991:35;981:63;;1040:1;1037;1030:12;981:63;928:122;:::o;1056:143::-;1113:5;1144:6;1138:13;1129:22;;1160:33;1187:5;1160:33;:::i;:::-;1056:143;;;;:::o;1205:507::-;1284:6;1292;1341:2;1329:9;1320:7;1316:23;1312:32;1309:119;;;1347:79;;:::i;:::-;1309:119;1467:1;1492:64;1548:7;1539:6;1528:9;1524:22;1492:64;:::i;:::-;1482:74;;1438:128;1605:2;1631:64;1687:7;1678:6;1667:9;1663:22;1631:64;:::i;:::-;1621:74;;1576:129;1205:507;;;;;:::o;1718:169::-;1802:11;1836:6;1831:3;1824:19;1876:4;1871:3;1867:14;1852:29;;1718:169;;;;:::o;1893:178::-;2033:30;2029:1;2021:6;2017:14;2010:54;1893:178;:::o;2077:366::-;2219:3;2240:67;2304:2;2299:3;2240:67;:::i;:::-;2233:74;;2316:93;2405:3;2316:93;:::i;:::-;2434:2;2429:3;2425:12;2418:19;;2077:366;;;:::o;2449:419::-;2615:4;2653:2;2642:9;2638:18;2630:26;;2702:9;2696:4;2692:20;2688:1;2677:9;2673:17;2666:47;2730:131;2856:4;2730:131;:::i;:::-;2722:139;;2449:419;;;:::o;2874:231::-;3014:34;3010:1;3002:6;2998:14;2991:58;3083:14;3078:2;3070:6;3066:15;3059:39;2874:231;:::o;3111:366::-;3253:3;3274:67;3338:2;3333:3;3274:67;:::i;:::-;3267:74;;3350:93;3439:3;3350:93;:::i;:::-;3468:2;3463:3;3459:12;3452:19;;3111:366;;;:::o;3483:419::-;3649:4;3687:2;3676:9;3672:18;3664:26;;3736:9;3730:4;3726:20;3722:1;3711:9;3707:17;3700:47;3764:131;3890:4;3764:131;:::i;:::-;3756:139;;3483:419;;;:::o;289:2431:5:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_652": {
									"entryPoint": null,
									"id": 652,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkOwner_54": {
									"entryPoint": 1421,
									"id": 54,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_deliverTokens_759": {
									"entryPoint": 1765,
									"id": 759,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_forwardFunds_807": {
									"entryPoint": 1328,
									"id": 807,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_getTokenAmount_793": {
									"entryPoint": 1258,
									"id": 793,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_msgSender_256": {
									"entryPoint": 1939,
									"id": 256,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nonReentrantAfter_165": {
									"entryPoint": 1412,
									"id": 165,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_157": {
									"entryPoint": 997,
									"id": 157,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_postValidatePurchase_742": {
									"entryPoint": 1408,
									"id": 742,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_preValidatePurchase_734": {
									"entryPoint": 1076,
									"id": 734,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_processPurchase_772": {
									"entryPoint": 1310,
									"id": 772,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_111": {
									"entryPoint": 1547,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_updatePurchasingState_780": {
									"entryPoint": 1324,
									"id": 780,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@add_442": {
									"entryPoint": 1288,
									"id": 442,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@buyTokens_709": {
									"entryPoint": 453,
									"id": 709,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@mul_472": {
									"entryPoint": 1743,
									"id": 472,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@owner_40": {
									"entryPoint": 787,
									"id": 40,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@rate_596": {
									"entryPoint": 670,
									"id": 596,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@renounceOwnership_68": {
									"entryPoint": 767,
									"id": 68,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setRate_826": {
									"entryPoint": 676,
									"id": 826,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@token_594": {
									"entryPoint": 959,
									"id": 594,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_91": {
									"entryPoint": 828,
									"id": 91,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@weiRaised_598": {
									"entryPoint": 761,
									"id": 598,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 2208,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 3471,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 2027,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2229,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 3492,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 2048,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2143,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC20_$244_to_t_address_fromStack": {
									"entryPoint": 2354,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_241e7a82e03c73826b4256830b3d1b02f02001e4c4c03703bc75f6405b4f0020_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2895,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2641,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_770494544f017deff4c9d8a643e67b2233d772d8786aa0753b1fffc1a310e4f8_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2495,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3248,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_cbc5bcd0a6eeeb659c2556d3a16dbceb96ed81ea33899af30347f3e87b400c61_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3041,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2749,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 1957,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2158,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 3381,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$244__to_t_address__fromStack_reversed": {
									"entryPoint": 2369,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_241e7a82e03c73826b4256830b3d1b02f02001e4c4c03703bc75f6405b4f0020__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2930,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2676,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_770494544f017deff4c9d8a643e67b2233d772d8786aa0753b1fffc1a310e4f8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2530,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3283,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_cbc5bcd0a6eeeb659c2556d3a16dbceb96ed81ea33899af30347f3e87b400c61__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3076,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2784,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 1972,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 2396,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 2437,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3155,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 3315,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 2125,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 3436,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2093,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1947,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$244_to_t_address": {
									"entryPoint": 2336,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 2318,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 2284,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 2274,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 3108,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1999,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_241e7a82e03c73826b4256830b3d1b02f02001e4c4c03703bc75f6405b4f0020": {
									"entryPoint": 2816,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe": {
									"entryPoint": 2562,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_770494544f017deff4c9d8a643e67b2233d772d8786aa0753b1fffc1a310e4f8": {
									"entryPoint": 2454,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe": {
									"entryPoint": 3207,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_cbc5bcd0a6eeeb659c2556d3a16dbceb96ed81ea33899af30347f3e87b400c61": {
									"entryPoint": 2962,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619": {
									"entryPoint": 2708,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 2185,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 3448,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 2004,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:11998:6",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "52:32:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "62:16:6",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "73:5:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "34:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "44:7:6",
														"type": ""
													}
												],
												"src": "7:77:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "155:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "172:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "195:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "177:17:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "177:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "165:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "165:37:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "165:37:6"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "143:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "150:3:6",
														"type": ""
													}
												],
												"src": "90:118:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "312:124:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "322:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "334:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "345:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "330:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "330:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "322:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "402:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "415:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "426:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "411:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "411:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "358:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "358:71:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "358:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "284:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "296:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "307:4:6",
														"type": ""
													}
												],
												"src": "214:222:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "482:35:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "492:19:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "508:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "502:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "502:9:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "492:6:6"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "475:6:6",
														"type": ""
													}
												],
												"src": "442:75:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "612:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "629:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "632:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "622:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "622:12:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "622:12:6"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "523:117:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "735:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "752:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "755:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "745:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "745:12:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "745:12:6"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "646:117:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "812:79:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "869:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "878:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "881:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "871:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "871:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "871:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "835:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "860:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "842:17:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "842:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "832:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "832:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "825:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "825:43:6"
															},
															"nodeType": "YulIf",
															"src": "822:63:6"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "805:5:6",
														"type": ""
													}
												],
												"src": "769:122:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "949:87:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "959:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "981:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "968:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "968:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "959:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1024:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "997:26:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "997:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "997:33:6"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "927:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "935:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "943:5:6",
														"type": ""
													}
												],
												"src": "897:139:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1108:263:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1154:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1156:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1156:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1156:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1129:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1138:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1125:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1125:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1150:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1121:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1121:32:6"
															},
															"nodeType": "YulIf",
															"src": "1118:119:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "1247:117:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1262:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1276:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1266:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1291:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1326:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1337:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1322:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1322:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1346:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1301:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1301:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1291:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1078:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1089:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1101:6:6",
														"type": ""
													}
												],
												"src": "1042:329:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1422:81:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1432:65:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1447:5:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1454:42:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1443:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1443:54:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1432:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1404:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1414:7:6",
														"type": ""
													}
												],
												"src": "1377:126:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1554:51:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1564:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1593:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1575:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1575:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1564:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1536:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1546:7:6",
														"type": ""
													}
												],
												"src": "1509:96:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1676:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1693:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1716:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1698:17:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1698:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1686:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1686:37:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1686:37:6"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1664:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1671:3:6",
														"type": ""
													}
												],
												"src": "1611:118:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1833:124:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1843:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1855:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1866:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1851:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1851:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1843:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1923:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1936:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1947:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1932:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1932:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1879:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1879:71:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1879:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1805:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1817:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1828:4:6",
														"type": ""
													}
												],
												"src": "1735:222:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2006:79:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2063:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2072:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2075:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2065:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2065:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2065:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2029:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2054:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "2036:17:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2036:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2026:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2026:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2019:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2019:43:6"
															},
															"nodeType": "YulIf",
															"src": "2016:63:6"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1999:5:6",
														"type": ""
													}
												],
												"src": "1963:122:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2143:87:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2153:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2175:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2162:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2162:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2153:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2218:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "2191:26:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2191:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2191:33:6"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2121:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2129:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2137:5:6",
														"type": ""
													}
												],
												"src": "2091:139:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2302:263:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2348:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2350:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2350:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2350:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2323:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2332:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2319:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2319:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2344:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2315:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2315:32:6"
															},
															"nodeType": "YulIf",
															"src": "2312:119:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "2441:117:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2456:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2470:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2460:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2485:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2520:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2531:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2516:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2516:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2540:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2495:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2495:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2485:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2272:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2283:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2295:6:6",
														"type": ""
													}
												],
												"src": "2236:329:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2603:28:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2613:12:6",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2620:5:6"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "2613:3:6"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2589:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "2599:3:6",
														"type": ""
													}
												],
												"src": "2571:60:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2697:82:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2707:66:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2765:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nodeType": "YulIdentifier",
																					"src": "2747:17:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2747:24:6"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "2738:8:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2738:34:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "2720:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2720:53:6"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "2707:9:6"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2677:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "2687:9:6",
														"type": ""
													}
												],
												"src": "2637:142:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2845:66:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2855:50:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2899:5:6"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "2868:30:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2868:37:6"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "2855:9:6"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2825:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "2835:9:6",
														"type": ""
													}
												],
												"src": "2785:126:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2991:66:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3001:50:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3045:5:6"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "3014:30:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3014:37:6"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "3001:9:6"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$244_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2971:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "2981:9:6",
														"type": ""
													}
												],
												"src": "2917:140:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3142:80:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3159:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3209:5:6"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$244_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3164:44:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3164:51:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3152:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3152:64:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3152:64:6"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$244_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3130:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3137:3:6",
														"type": ""
													}
												],
												"src": "3063:159:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3340:138:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3350:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3362:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3373:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3358:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3358:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3350:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3444:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3457:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3468:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3453:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3453:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$244_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3386:57:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3386:85:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3386:85:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$244__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3312:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3324:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3335:4:6",
														"type": ""
													}
												],
												"src": "3228:250:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3610:206:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3620:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3632:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3643:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3628:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3628:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3620:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3700:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3713:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3724:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3709:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3709:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3656:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3656:71:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3656:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "3781:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3794:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3805:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3790:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3790:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3737:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3737:72:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3737:72:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3574:9:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3586:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3594:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3605:4:6",
														"type": ""
													}
												],
												"src": "3484:332:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3918:73:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3935:3:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3940:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3928:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3928:19:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3928:19:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3956:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3975:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3980:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3971:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3971:14:6"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "3956:11:6"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3890:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3895:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "3906:11:6",
														"type": ""
													}
												],
												"src": "3822:169:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4103:76:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4125:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4133:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4121:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4121:14:6"
																	},
																	{
																		"hexValue": "436861645065706543726f776473616c653a206e657720726174652069732030",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4137:34:6",
																		"type": "",
																		"value": "ChadPepeCrowdsale: new rate is 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4114:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4114:58:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4114:58:6"
														}
													]
												},
												"name": "store_literal_in_memory_770494544f017deff4c9d8a643e67b2233d772d8786aa0753b1fffc1a310e4f8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "4095:6:6",
														"type": ""
													}
												],
												"src": "3997:182:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4331:220:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4341:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4407:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4412:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4348:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4348:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4341:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4513:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_770494544f017deff4c9d8a643e67b2233d772d8786aa0753b1fffc1a310e4f8",
																	"nodeType": "YulIdentifier",
																	"src": "4424:88:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4424:93:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4424:93:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4526:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4537:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4542:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4533:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4533:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4526:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_770494544f017deff4c9d8a643e67b2233d772d8786aa0753b1fffc1a310e4f8_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4319:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4327:3:6",
														"type": ""
													}
												],
												"src": "4185:366:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4728:248:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4738:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4750:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4761:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4746:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4746:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4738:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4785:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4796:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4781:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4781:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "4804:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4810:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4800:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4800:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4774:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4774:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4774:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4830:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "4964:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_770494544f017deff4c9d8a643e67b2233d772d8786aa0753b1fffc1a310e4f8_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4838:124:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4838:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4830:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_770494544f017deff4c9d8a643e67b2233d772d8786aa0753b1fffc1a310e4f8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4708:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4723:4:6",
														"type": ""
													}
												],
												"src": "4557:419:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5088:119:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "5110:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5118:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5106:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5106:14:6"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5122:34:6",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5099:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5099:58:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5099:58:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "5178:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5186:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5174:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5174:15:6"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5191:8:6",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5167:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5167:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5167:33:6"
														}
													]
												},
												"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "5080:6:6",
														"type": ""
													}
												],
												"src": "4982:225:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5359:220:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5369:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5435:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5440:2:6",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5376:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5376:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5369:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5541:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																	"nodeType": "YulIdentifier",
																	"src": "5452:88:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5452:93:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5452:93:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5554:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5565:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5570:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5561:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5561:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5554:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5347:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5355:3:6",
														"type": ""
													}
												],
												"src": "5213:366:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5756:248:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5766:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5778:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5789:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5774:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5774:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5766:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5813:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5824:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5809:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5809:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "5832:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5838:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5828:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5828:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5802:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5802:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5802:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5858:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "5992:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5866:124:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5866:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5858:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5736:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5751:4:6",
														"type": ""
													}
												],
												"src": "5585:419:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6116:75:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6138:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6146:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6134:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6134:14:6"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6150:33:6",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6127:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6127:57:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6127:57:6"
														}
													]
												},
												"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "6108:6:6",
														"type": ""
													}
												],
												"src": "6010:181:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6343:220:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6353:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6419:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6424:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6360:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6360:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6353:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6525:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																	"nodeType": "YulIdentifier",
																	"src": "6436:88:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6436:93:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6436:93:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6538:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6549:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6554:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6545:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6545:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6538:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6331:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6339:3:6",
														"type": ""
													}
												],
												"src": "6197:366:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6740:248:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6750:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6762:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6773:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6758:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6758:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6750:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6797:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6808:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6793:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6793:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "6816:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6822:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6812:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6812:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6786:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6786:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6786:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6842:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "6976:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6850:124:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6850:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6842:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6720:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6735:4:6",
														"type": ""
													}
												],
												"src": "6569:419:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7100:131:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7122:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7130:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7118:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7118:14:6"
																	},
																	{
																		"hexValue": "436861645065706543726f776473616c653a2062656e65666963696172792069",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7134:34:6",
																		"type": "",
																		"value": "ChadPepeCrowdsale: beneficiary i"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7111:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7111:58:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7111:58:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7190:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7198:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7186:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7186:15:6"
																	},
																	{
																		"hexValue": "7320746865207a65726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7203:20:6",
																		"type": "",
																		"value": "s the zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7179:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7179:45:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7179:45:6"
														}
													]
												},
												"name": "store_literal_in_memory_241e7a82e03c73826b4256830b3d1b02f02001e4c4c03703bc75f6405b4f0020",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7092:6:6",
														"type": ""
													}
												],
												"src": "6994:237:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7383:220:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7393:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7459:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7464:2:6",
																		"type": "",
																		"value": "50"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7400:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7400:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7393:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7565:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_241e7a82e03c73826b4256830b3d1b02f02001e4c4c03703bc75f6405b4f0020",
																	"nodeType": "YulIdentifier",
																	"src": "7476:88:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7476:93:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7476:93:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7578:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7589:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7594:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7585:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7585:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7578:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_241e7a82e03c73826b4256830b3d1b02f02001e4c4c03703bc75f6405b4f0020_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7371:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7379:3:6",
														"type": ""
													}
												],
												"src": "7237:366:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7780:248:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7790:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7802:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7813:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7798:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7798:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7790:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7837:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7848:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7833:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7833:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "7856:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7862:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7852:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7852:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7826:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7826:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7826:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7882:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8016:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_241e7a82e03c73826b4256830b3d1b02f02001e4c4c03703bc75f6405b4f0020_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7890:124:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7890:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7882:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_241e7a82e03c73826b4256830b3d1b02f02001e4c4c03703bc75f6405b4f0020__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7760:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7775:4:6",
														"type": ""
													}
												],
												"src": "7609:419:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8140:114:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8162:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8170:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8158:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8158:14:6"
																	},
																	{
																		"hexValue": "436861645065706543726f776473616c653a20776569416d6f756e7420697320",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8174:34:6",
																		"type": "",
																		"value": "ChadPepeCrowdsale: weiAmount is "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8151:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8151:58:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8151:58:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8230:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8238:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8226:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8226:15:6"
																	},
																	{
																		"hexValue": "30",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8243:3:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8219:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8219:28:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8219:28:6"
														}
													]
												},
												"name": "store_literal_in_memory_cbc5bcd0a6eeeb659c2556d3a16dbceb96ed81ea33899af30347f3e87b400c61",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "8132:6:6",
														"type": ""
													}
												],
												"src": "8034:220:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8406:220:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8416:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8482:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8487:2:6",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8423:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8423:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "8416:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8588:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_cbc5bcd0a6eeeb659c2556d3a16dbceb96ed81ea33899af30347f3e87b400c61",
																	"nodeType": "YulIdentifier",
																	"src": "8499:88:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8499:93:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8499:93:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8601:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8612:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8617:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8608:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8608:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8601:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_cbc5bcd0a6eeeb659c2556d3a16dbceb96ed81ea33899af30347f3e87b400c61_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8394:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8402:3:6",
														"type": ""
													}
												],
												"src": "8260:366:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8803:248:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8813:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8825:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8836:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8821:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8821:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8813:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8860:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8871:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8856:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8856:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8879:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8885:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8875:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8875:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8849:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8849:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8849:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8905:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "9039:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_cbc5bcd0a6eeeb659c2556d3a16dbceb96ed81ea33899af30347f3e87b400c61_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8913:124:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8913:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8905:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cbc5bcd0a6eeeb659c2556d3a16dbceb96ed81ea33899af30347f3e87b400c61__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8783:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8798:4:6",
														"type": ""
													}
												],
												"src": "8632:419:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9085:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9102:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9105:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9095:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9095:88:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9095:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9199:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9202:4:6",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9192:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9192:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9192:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9223:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9226:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "9216:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9216:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9216:15:6"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "9057:180:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9287:147:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9297:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9320:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "9302:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9302:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "9297:1:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9331:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9354:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "9336:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9336:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "9331:1:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9365:16:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9376:1:6"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9379:1:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9372:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9372:9:6"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "9365:3:6"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9405:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "9407:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9407:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9407:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9397:1:6"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "9400:3:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "9394:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9394:10:6"
															},
															"nodeType": "YulIf",
															"src": "9391:36:6"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "9274:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "9277:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "9283:3:6",
														"type": ""
													}
												],
												"src": "9243:191:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9546:76:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "9568:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9576:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9564:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9564:14:6"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9580:34:6",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9557:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9557:58:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9557:58:6"
														}
													]
												},
												"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "9538:6:6",
														"type": ""
													}
												],
												"src": "9440:182:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9774:220:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9784:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9850:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9855:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9791:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9791:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "9784:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9956:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																	"nodeType": "YulIdentifier",
																	"src": "9867:88:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9867:93:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9867:93:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9969:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9980:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9985:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9976:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9976:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "9969:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9762:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9770:3:6",
														"type": ""
													}
												],
												"src": "9628:366:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10171:248:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10181:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10193:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10204:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10189:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10189:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10181:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10228:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10239:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10224:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10224:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "10247:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10253:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10243:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10243:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10217:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10217:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10217:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10273:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "10407:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10281:124:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10281:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10273:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10151:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10166:4:6",
														"type": ""
													}
												],
												"src": "10000:419:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10473:362:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10483:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10506:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10488:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10488:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "10483:1:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10517:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10540:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10522:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10522:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "10517:1:6"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10551:28:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10574:1:6"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10577:1:6"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "10570:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10570:9:6"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nodeType": "YulTypedName",
																	"src": "10555:11:6",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10588:41:6",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nodeType": "YulIdentifier",
																		"src": "10617:11:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10599:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10599:30:6"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "10588:7:6"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10806:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "10808:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10808:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10808:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "10739:1:6"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "10732:6:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10732:9:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "10762:1:6"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "10769:7:6"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "10778:1:6"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "10765:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "10765:15:6"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "10759:2:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10759:22:6"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "10712:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10712:83:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "10692:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10692:113:6"
															},
															"nodeType": "YulIf",
															"src": "10689:139:6"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "10456:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "10459:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "10465:7:6",
														"type": ""
													}
												],
												"src": "10425:410:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10995:288:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11005:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11017:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11028:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11013:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11013:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11005:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "11085:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11098:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11109:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11094:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11094:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11041:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11041:71:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11041:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "11166:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11179:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11190:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11175:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11175:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11122:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11122:72:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11122:72:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "11248:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11261:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11272:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11257:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11257:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11204:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11204:72:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11204:72:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10951:9:6",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "10963:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "10971:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10979:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10990:4:6",
														"type": ""
													}
												],
												"src": "10841:442:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11331:48:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11341:32:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "11366:5:6"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "11359:6:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11359:13:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "11352:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11352:21:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "11341:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11313:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "11323:7:6",
														"type": ""
													}
												],
												"src": "11289:90:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11425:76:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11479:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11488:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11491:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "11481:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11481:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11481:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "11448:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "11470:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "11455:14:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11455:21:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "11445:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11445:32:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "11438:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11438:40:6"
															},
															"nodeType": "YulIf",
															"src": "11435:60:6"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11418:5:6",
														"type": ""
													}
												],
												"src": "11385:116:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11567:77:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11577:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "11592:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "11586:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11586:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "11577:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11632:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "11608:23:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11608:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11608:30:6"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "11545:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11553:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11561:5:6",
														"type": ""
													}
												],
												"src": "11507:137:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11724:271:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11770:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "11772:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11772:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11772:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "11745:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11754:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11741:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11741:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11766:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "11737:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11737:32:6"
															},
															"nodeType": "YulIf",
															"src": "11734:119:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "11863:125:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "11878:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11892:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "11882:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "11907:71:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "11950:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "11961:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "11946:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11946:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "11970:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "11917:28:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11917:61:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "11907:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11694:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "11705:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11717:6:6",
														"type": ""
													}
												],
												"src": "11650:345:6"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$244_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$244_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$244_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$244__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$244_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_770494544f017deff4c9d8a643e67b2233d772d8786aa0753b1fffc1a310e4f8(memPtr) {\n\n        mstore(add(memPtr, 0), \"ChadPepeCrowdsale: new rate is 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_770494544f017deff4c9d8a643e67b2233d772d8786aa0753b1fffc1a310e4f8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_770494544f017deff4c9d8a643e67b2233d772d8786aa0753b1fffc1a310e4f8(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_770494544f017deff4c9d8a643e67b2233d772d8786aa0753b1fffc1a310e4f8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_770494544f017deff4c9d8a643e67b2233d772d8786aa0753b1fffc1a310e4f8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(memPtr) {\n\n        mstore(add(memPtr, 0), \"ReentrancyGuard: reentrant call\")\n\n    }\n\n    function abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_241e7a82e03c73826b4256830b3d1b02f02001e4c4c03703bc75f6405b4f0020(memPtr) {\n\n        mstore(add(memPtr, 0), \"ChadPepeCrowdsale: beneficiary i\")\n\n        mstore(add(memPtr, 32), \"s the zero address\")\n\n    }\n\n    function abi_encode_t_stringliteral_241e7a82e03c73826b4256830b3d1b02f02001e4c4c03703bc75f6405b4f0020_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 50)\n        store_literal_in_memory_241e7a82e03c73826b4256830b3d1b02f02001e4c4c03703bc75f6405b4f0020(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_241e7a82e03c73826b4256830b3d1b02f02001e4c4c03703bc75f6405b4f0020__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_241e7a82e03c73826b4256830b3d1b02f02001e4c4c03703bc75f6405b4f0020_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_cbc5bcd0a6eeeb659c2556d3a16dbceb96ed81ea33899af30347f3e87b400c61(memPtr) {\n\n        mstore(add(memPtr, 0), \"ChadPepeCrowdsale: weiAmount is \")\n\n        mstore(add(memPtr, 32), \"0\")\n\n    }\n\n    function abi_encode_t_stringliteral_cbc5bcd0a6eeeb659c2556d3a16dbceb96ed81ea33899af30347f3e87b400c61_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_cbc5bcd0a6eeeb659c2556d3a16dbceb96ed81ea33899af30347f3e87b400c61(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_cbc5bcd0a6eeeb659c2556d3a16dbceb96ed81ea33899af30347f3e87b400c61__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_cbc5bcd0a6eeeb659c2556d3a16dbceb96ed81ea33899af30347f3e87b400c61_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040526004361061007f5760003560e01c80638da5cb5b1161004e5780638da5cb5b1461012a578063ec8ac4d814610155578063f2fde38b14610171578063fc0c546a1461019a5761008f565b80632c4e722e1461009457806334fcf437146100bf5780634042b66f146100e8578063715018a6146101135761008f565b3661008f5761008d336101c5565b005b600080fd5b3480156100a057600080fd5b506100a961029e565b6040516100b691906107b4565b60405180910390f35b3480156100cb57600080fd5b506100e660048036038101906100e19190610800565b6102a4565b005b3480156100f457600080fd5b506100fd6102f9565b60405161010a91906107b4565b60405180910390f35b34801561011f57600080fd5b506101286102ff565b005b34801561013657600080fd5b5061013f610313565b60405161014c919061086e565b60405180910390f35b61016f600480360381019061016a91906108b5565b6101c5565b005b34801561017d57600080fd5b50610198600480360381019061019391906108b5565b61033c565b005b3480156101a657600080fd5b506101af6103bf565b6040516101bc9190610941565b60405180910390f35b6101cd6103e5565b60003490506101dc8282610434565b60006101e7826104ea565b90506101fe8260045461050890919063ffffffff16565b60048190555061020e838261051e565b8273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f6faf93231a456e552dbc9961f58d9713ee4f2e69d15f1975b050ef0911053a7b848460405161026d92919061095c565b60405180910390a361027f838361052c565b610287610530565b6102918383610580565b505061029b610584565b50565b60035481565b6102ac61058d565b600081116102ef576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102e6906109e2565b60405180910390fd5b8060038190555050565b60045481565b61030761058d565b610311600061060b565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61034461058d565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036103b3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103aa90610a74565b60405180910390fd5b6103bc8161060b565b50565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60026001540361042a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161042190610ae0565b60405180910390fd5b6002600181905550565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036104a3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161049a90610b72565b60405180910390fd5b600081036104e6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104dd90610c04565b60405180910390fd5b5050565b6000610501600354836106cf90919063ffffffff16565b9050919050565b600081836105169190610c53565b905092915050565b61052882826106e5565b5050565b5050565b610538610313565b73ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f1935050505015801561057d573d6000803e3d6000fd5b50565b5050565b60018081905550565b610595610793565b73ffffffffffffffffffffffffffffffffffffffff166105b3610313565b73ffffffffffffffffffffffffffffffffffffffff1614610609576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060090610cd3565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600081836106dd9190610cf3565b905092915050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd61072b610313565b84846040518463ffffffff1660e01b815260040161074b93929190610d35565b6020604051808303816000875af115801561076a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061078e9190610da4565b505050565b600033905090565b6000819050919050565b6107ae8161079b565b82525050565b60006020820190506107c960008301846107a5565b92915050565b600080fd5b6107dd8161079b565b81146107e857600080fd5b50565b6000813590506107fa816107d4565b92915050565b600060208284031215610816576108156107cf565b5b6000610824848285016107eb565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006108588261082d565b9050919050565b6108688161084d565b82525050565b6000602082019050610883600083018461085f565b92915050565b6108928161084d565b811461089d57600080fd5b50565b6000813590506108af81610889565b92915050565b6000602082840312156108cb576108ca6107cf565b5b60006108d9848285016108a0565b91505092915050565b6000819050919050565b60006109076109026108fd8461082d565b6108e2565b61082d565b9050919050565b6000610919826108ec565b9050919050565b600061092b8261090e565b9050919050565b61093b81610920565b82525050565b60006020820190506109566000830184610932565b92915050565b600060408201905061097160008301856107a5565b61097e60208301846107a5565b9392505050565b600082825260208201905092915050565b7f436861645065706543726f776473616c653a206e657720726174652069732030600082015250565b60006109cc602083610985565b91506109d782610996565b602082019050919050565b600060208201905081810360008301526109fb816109bf565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000610a5e602683610985565b9150610a6982610a02565b604082019050919050565b60006020820190508181036000830152610a8d81610a51565b9050919050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b6000610aca601f83610985565b9150610ad582610a94565b602082019050919050565b60006020820190508181036000830152610af981610abd565b9050919050565b7f436861645065706543726f776473616c653a2062656e6566696369617279206960008201527f7320746865207a65726f20616464726573730000000000000000000000000000602082015250565b6000610b5c603283610985565b9150610b6782610b00565b604082019050919050565b60006020820190508181036000830152610b8b81610b4f565b9050919050565b7f436861645065706543726f776473616c653a20776569416d6f756e742069732060008201527f3000000000000000000000000000000000000000000000000000000000000000602082015250565b6000610bee602183610985565b9150610bf982610b92565b604082019050919050565b60006020820190508181036000830152610c1d81610be1565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610c5e8261079b565b9150610c698361079b565b9250828201905080821115610c8157610c80610c24565b5b92915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000610cbd602083610985565b9150610cc882610c87565b602082019050919050565b60006020820190508181036000830152610cec81610cb0565b9050919050565b6000610cfe8261079b565b9150610d098361079b565b9250828202610d178161079b565b91508282048414831517610d2e57610d2d610c24565b5b5092915050565b6000606082019050610d4a600083018661085f565b610d57602083018561085f565b610d6460408301846107a5565b949350505050565b60008115159050919050565b610d8181610d6c565b8114610d8c57600080fd5b50565b600081519050610d9e81610d78565b92915050565b600060208284031215610dba57610db96107cf565b5b6000610dc884828501610d8f565b9150509291505056fea2646970667358221220994dc450424dd8e7a7a7079bd3916a079079dc382997286ea236db947e02704864736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7F JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x4E JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0xEC8AC4D8 EQ PUSH2 0x155 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x171 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x19A JUMPI PUSH2 0x8F JUMP JUMPDEST DUP1 PUSH4 0x2C4E722E EQ PUSH2 0x94 JUMPI DUP1 PUSH4 0x34FCF437 EQ PUSH2 0xBF JUMPI DUP1 PUSH4 0x4042B66F EQ PUSH2 0xE8 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x113 JUMPI PUSH2 0x8F JUMP JUMPDEST CALLDATASIZE PUSH2 0x8F JUMPI PUSH2 0x8D CALLER PUSH2 0x1C5 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA9 PUSH2 0x29E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB6 SWAP2 SWAP1 PUSH2 0x7B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xCB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE1 SWAP2 SWAP1 PUSH2 0x800 JUMP JUMPDEST PUSH2 0x2A4 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xFD PUSH2 0x2F9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10A SWAP2 SWAP1 PUSH2 0x7B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x11F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x128 PUSH2 0x2FF JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x136 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13F PUSH2 0x313 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14C SWAP2 SWAP1 PUSH2 0x86E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x16A SWAP2 SWAP1 PUSH2 0x8B5 JUMP JUMPDEST PUSH2 0x1C5 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x17D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x198 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x193 SWAP2 SWAP1 PUSH2 0x8B5 JUMP JUMPDEST PUSH2 0x33C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1AF PUSH2 0x3BF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BC SWAP2 SWAP1 PUSH2 0x941 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CD PUSH2 0x3E5 JUMP JUMPDEST PUSH1 0x0 CALLVALUE SWAP1 POP PUSH2 0x1DC DUP3 DUP3 PUSH2 0x434 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E7 DUP3 PUSH2 0x4EA JUMP JUMPDEST SWAP1 POP PUSH2 0x1FE DUP3 PUSH1 0x4 SLOAD PUSH2 0x508 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH2 0x20E DUP4 DUP3 PUSH2 0x51E JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x6FAF93231A456E552DBC9961F58D9713EE4F2E69D15F1975B050EF0911053A7B DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x26D SWAP3 SWAP2 SWAP1 PUSH2 0x95C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x27F DUP4 DUP4 PUSH2 0x52C JUMP JUMPDEST PUSH2 0x287 PUSH2 0x530 JUMP JUMPDEST PUSH2 0x291 DUP4 DUP4 PUSH2 0x580 JUMP JUMPDEST POP POP PUSH2 0x29B PUSH2 0x584 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2AC PUSH2 0x58D JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x2EF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E6 SWAP1 PUSH2 0x9E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x307 PUSH2 0x58D JUMP JUMPDEST PUSH2 0x311 PUSH1 0x0 PUSH2 0x60B JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x344 PUSH2 0x58D JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x3B3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3AA SWAP1 PUSH2 0xA74 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3BC DUP2 PUSH2 0x60B JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0x42A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x421 SWAP1 PUSH2 0xAE0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x4A3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x49A SWAP1 PUSH2 0xB72 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SUB PUSH2 0x4E6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4DD SWAP1 PUSH2 0xC04 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x501 PUSH1 0x3 SLOAD DUP4 PUSH2 0x6CF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x516 SWAP2 SWAP1 PUSH2 0xC53 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x528 DUP3 DUP3 PUSH2 0x6E5 JUMP JUMPDEST POP POP JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x538 PUSH2 0x313 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC CALLVALUE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x57D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x595 PUSH2 0x793 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x5B3 PUSH2 0x313 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x609 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x600 SWAP1 PUSH2 0xCD3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x6DD SWAP2 SWAP1 PUSH2 0xCF3 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD PUSH2 0x72B PUSH2 0x313 JUMP JUMPDEST DUP5 DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x74B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xD35 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x76A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x78E SWAP2 SWAP1 PUSH2 0xDA4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7AE DUP2 PUSH2 0x79B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x7C9 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x7A5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7DD DUP2 PUSH2 0x79B JUMP JUMPDEST DUP2 EQ PUSH2 0x7E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x7FA DUP2 PUSH2 0x7D4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x816 JUMPI PUSH2 0x815 PUSH2 0x7CF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x824 DUP5 DUP3 DUP6 ADD PUSH2 0x7EB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x858 DUP3 PUSH2 0x82D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x868 DUP2 PUSH2 0x84D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x883 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x85F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x892 DUP2 PUSH2 0x84D JUMP JUMPDEST DUP2 EQ PUSH2 0x89D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x8AF DUP2 PUSH2 0x889 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x8CB JUMPI PUSH2 0x8CA PUSH2 0x7CF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x8D9 DUP5 DUP3 DUP6 ADD PUSH2 0x8A0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x907 PUSH2 0x902 PUSH2 0x8FD DUP5 PUSH2 0x82D JUMP JUMPDEST PUSH2 0x8E2 JUMP JUMPDEST PUSH2 0x82D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x919 DUP3 PUSH2 0x8EC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x92B DUP3 PUSH2 0x90E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x93B DUP2 PUSH2 0x920 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x956 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x932 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x971 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x7A5 JUMP JUMPDEST PUSH2 0x97E PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x7A5 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x436861645065706543726F776473616C653A206E657720726174652069732030 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9CC PUSH1 0x20 DUP4 PUSH2 0x985 JUMP JUMPDEST SWAP2 POP PUSH2 0x9D7 DUP3 PUSH2 0x996 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x9FB DUP2 PUSH2 0x9BF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA5E PUSH1 0x26 DUP4 PUSH2 0x985 JUMP JUMPDEST SWAP2 POP PUSH2 0xA69 DUP3 PUSH2 0xA02 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xA8D DUP2 PUSH2 0xA51 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xACA PUSH1 0x1F DUP4 PUSH2 0x985 JUMP JUMPDEST SWAP2 POP PUSH2 0xAD5 DUP3 PUSH2 0xA94 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xAF9 DUP2 PUSH2 0xABD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x436861645065706543726F776473616C653A2062656E65666963696172792069 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7320746865207A65726F20616464726573730000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB5C PUSH1 0x32 DUP4 PUSH2 0x985 JUMP JUMPDEST SWAP2 POP PUSH2 0xB67 DUP3 PUSH2 0xB00 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xB8B DUP2 PUSH2 0xB4F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x436861645065706543726F776473616C653A20776569416D6F756E7420697320 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBEE PUSH1 0x21 DUP4 PUSH2 0x985 JUMP JUMPDEST SWAP2 POP PUSH2 0xBF9 DUP3 PUSH2 0xB92 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xC1D DUP2 PUSH2 0xBE1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xC5E DUP3 PUSH2 0x79B JUMP JUMPDEST SWAP2 POP PUSH2 0xC69 DUP4 PUSH2 0x79B JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xC81 JUMPI PUSH2 0xC80 PUSH2 0xC24 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCBD PUSH1 0x20 DUP4 PUSH2 0x985 JUMP JUMPDEST SWAP2 POP PUSH2 0xCC8 DUP3 PUSH2 0xC87 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xCEC DUP2 PUSH2 0xCB0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCFE DUP3 PUSH2 0x79B JUMP JUMPDEST SWAP2 POP PUSH2 0xD09 DUP4 PUSH2 0x79B JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0xD17 DUP2 PUSH2 0x79B JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0xD2E JUMPI PUSH2 0xD2D PUSH2 0xC24 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xD4A PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x85F JUMP JUMPDEST PUSH2 0xD57 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x85F JUMP JUMPDEST PUSH2 0xD64 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x7A5 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD81 DUP2 PUSH2 0xD6C JUMP JUMPDEST DUP2 EQ PUSH2 0xD8C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xD9E DUP2 PUSH2 0xD78 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDBA JUMPI PUSH2 0xDB9 PUSH2 0x7CF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xDC8 DUP5 DUP3 DUP6 ADD PUSH2 0xD8F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP10 0x4D 0xC4 POP TIMESTAMP 0x4D 0xD8 0xE7 0xA7 0xA7 SMOD SWAP12 0xD3 SWAP2 PUSH11 0x79079DC382997286EA236 0xDB SWAP5 PUSH31 0x2704864736F6C634300081200330000000000000000000000000000000000 ",
							"sourceMap": "289:2431:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;895:21;905:10;895:9;:21::i;:::-;289:2431;;;;;408:19;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2568:150;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;433:24;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1831:101:0;;;;;;;;;;;;;:::i;:::-;;1201:85;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;929:529:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2081:198:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;383:19:5;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;929:529;2261:21:1;:19;:21::i;:::-;1007:17:5::1;1027:9;1007:29;;1046:44;1067:11;1080:9;1046:20;:44::i;:::-;1101:14;1118:26;1134:9;1118:15;:26::i;:::-;1101:43;;1167:24;1181:9;1167;;:13;;:24;;;;:::i;:::-;1155:9;:36;;;;1202:37;1219:11;1232:6;1202:16;:37::i;:::-;1282:11;1254:59;;1270:10;1254:59;;;1295:9;1306:6;1254:59;;;;;;;:::i;:::-;;;;;;;;1324:46;1347:11;1360:9;1324:22;:46::i;:::-;1381:15;:13;:15::i;:::-;1406:45;1428:11;1441:9;1406:21;:45::i;:::-;997:461;;2303:20:1::0;:18;:20::i;:::-;929:529:5;:::o;408:19::-;;;;:::o;2568:150::-;1094:13:0;:11;:13::i;:::-;2649:1:5::1;2639:7;:11;2631:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;2704:7;2697:4;:14;;;;2568:150:::0;:::o;433:24::-;;;;:::o;1831:101:0:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;1201:85::-;1247:7;1273:6;;;;;;;;;;;1266:13;;1201:85;:::o;2081:198::-;1094:13;:11;:13::i;:::-;2189:1:::1;2169:22;;:8;:22;;::::0;2161:73:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;383:19:5:-;;;;;;;;;;;;;:::o;2336:287:1:-;1759:1;2468:7;;:19;2460:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1759:1;2598:7;:18;;;;2336:287::o;1464:259:5:-;1589:1;1566:25;;:11;:25;;;1558:88;;;;;;;;;;;;:::i;:::-;;;;;;;;;1677:1;1664:9;:14;1656:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;1464:259;;:::o;2350:119::-;2417:7;2443:19;2457:4;;2443:9;:13;;:19;;;;:::i;:::-;2436:26;;2350:119;;;:::o;2755:96:4:-;2813:7;2843:1;2839;:5;;;;:::i;:::-;2832:12;;2755:96;;;;:::o;2043:134:5:-;2130:40;2145:11;2158;2130:14;:40::i;:::-;2043:134;;:::o;2183:161::-;;;:::o;2475:87::-;2527:7;:5;:7::i;:::-;2519:25;;:36;2545:9;2519:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2475:87::o;1729:157::-;;;:::o;2629:209:1:-;1716:1;2809:7;:22;;;;2629:209::o;1359:130:0:-;1433:12;:10;:12::i;:::-;1422:23;;:7;:5;:7::i;:::-;:23;;;1414:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1359:130::o;2433:187::-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;3465:96:4:-;3523:7;3553:1;3549;:5;;;;:::i;:::-;3542:12;;3465:96;;;;:::o;1892:145:5:-;1977:5;;;;;;;;;;;:18;;;1996:7;:5;:7::i;:::-;2005:11;2018;1977:53;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1892:145;;:::o;640:96:3:-;693:7;719:10;712:17;;640:96;:::o;7:77:6:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;523:117::-;632:1;629;622:12;769:122;842:24;860:5;842:24;:::i;:::-;835:5;832:35;822:63;;881:1;878;871:12;822:63;769:122;:::o;897:139::-;943:5;981:6;968:20;959:29;;997:33;1024:5;997:33;:::i;:::-;897:139;;;;:::o;1042:329::-;1101:6;1150:2;1138:9;1129:7;1125:23;1121:32;1118:119;;;1156:79;;:::i;:::-;1118:119;1276:1;1301:53;1346:7;1337:6;1326:9;1322:22;1301:53;:::i;:::-;1291:63;;1247:117;1042:329;;;;:::o;1377:126::-;1414:7;1454:42;1447:5;1443:54;1432:65;;1377:126;;;:::o;1509:96::-;1546:7;1575:24;1593:5;1575:24;:::i;:::-;1564:35;;1509:96;;;:::o;1611:118::-;1698:24;1716:5;1698:24;:::i;:::-;1693:3;1686:37;1611:118;;:::o;1735:222::-;1828:4;1866:2;1855:9;1851:18;1843:26;;1879:71;1947:1;1936:9;1932:17;1923:6;1879:71;:::i;:::-;1735:222;;;;:::o;1963:122::-;2036:24;2054:5;2036:24;:::i;:::-;2029:5;2026:35;2016:63;;2075:1;2072;2065:12;2016:63;1963:122;:::o;2091:139::-;2137:5;2175:6;2162:20;2153:29;;2191:33;2218:5;2191:33;:::i;:::-;2091:139;;;;:::o;2236:329::-;2295:6;2344:2;2332:9;2323:7;2319:23;2315:32;2312:119;;;2350:79;;:::i;:::-;2312:119;2470:1;2495:53;2540:7;2531:6;2520:9;2516:22;2495:53;:::i;:::-;2485:63;;2441:117;2236:329;;;;:::o;2571:60::-;2599:3;2620:5;2613:12;;2571:60;;;:::o;2637:142::-;2687:9;2720:53;2738:34;2747:24;2765:5;2747:24;:::i;:::-;2738:34;:::i;:::-;2720:53;:::i;:::-;2707:66;;2637:142;;;:::o;2785:126::-;2835:9;2868:37;2899:5;2868:37;:::i;:::-;2855:50;;2785:126;;;:::o;2917:140::-;2981:9;3014:37;3045:5;3014:37;:::i;:::-;3001:50;;2917:140;;;:::o;3063:159::-;3164:51;3209:5;3164:51;:::i;:::-;3159:3;3152:64;3063:159;;:::o;3228:250::-;3335:4;3373:2;3362:9;3358:18;3350:26;;3386:85;3468:1;3457:9;3453:17;3444:6;3386:85;:::i;:::-;3228:250;;;;:::o;3484:332::-;3605:4;3643:2;3632:9;3628:18;3620:26;;3656:71;3724:1;3713:9;3709:17;3700:6;3656:71;:::i;:::-;3737:72;3805:2;3794:9;3790:18;3781:6;3737:72;:::i;:::-;3484:332;;;;;:::o;3822:169::-;3906:11;3940:6;3935:3;3928:19;3980:4;3975:3;3971:14;3956:29;;3822:169;;;;:::o;3997:182::-;4137:34;4133:1;4125:6;4121:14;4114:58;3997:182;:::o;4185:366::-;4327:3;4348:67;4412:2;4407:3;4348:67;:::i;:::-;4341:74;;4424:93;4513:3;4424:93;:::i;:::-;4542:2;4537:3;4533:12;4526:19;;4185:366;;;:::o;4557:419::-;4723:4;4761:2;4750:9;4746:18;4738:26;;4810:9;4804:4;4800:20;4796:1;4785:9;4781:17;4774:47;4838:131;4964:4;4838:131;:::i;:::-;4830:139;;4557:419;;;:::o;4982:225::-;5122:34;5118:1;5110:6;5106:14;5099:58;5191:8;5186:2;5178:6;5174:15;5167:33;4982:225;:::o;5213:366::-;5355:3;5376:67;5440:2;5435:3;5376:67;:::i;:::-;5369:74;;5452:93;5541:3;5452:93;:::i;:::-;5570:2;5565:3;5561:12;5554:19;;5213:366;;;:::o;5585:419::-;5751:4;5789:2;5778:9;5774:18;5766:26;;5838:9;5832:4;5828:20;5824:1;5813:9;5809:17;5802:47;5866:131;5992:4;5866:131;:::i;:::-;5858:139;;5585:419;;;:::o;6010:181::-;6150:33;6146:1;6138:6;6134:14;6127:57;6010:181;:::o;6197:366::-;6339:3;6360:67;6424:2;6419:3;6360:67;:::i;:::-;6353:74;;6436:93;6525:3;6436:93;:::i;:::-;6554:2;6549:3;6545:12;6538:19;;6197:366;;;:::o;6569:419::-;6735:4;6773:2;6762:9;6758:18;6750:26;;6822:9;6816:4;6812:20;6808:1;6797:9;6793:17;6786:47;6850:131;6976:4;6850:131;:::i;:::-;6842:139;;6569:419;;;:::o;6994:237::-;7134:34;7130:1;7122:6;7118:14;7111:58;7203:20;7198:2;7190:6;7186:15;7179:45;6994:237;:::o;7237:366::-;7379:3;7400:67;7464:2;7459:3;7400:67;:::i;:::-;7393:74;;7476:93;7565:3;7476:93;:::i;:::-;7594:2;7589:3;7585:12;7578:19;;7237:366;;;:::o;7609:419::-;7775:4;7813:2;7802:9;7798:18;7790:26;;7862:9;7856:4;7852:20;7848:1;7837:9;7833:17;7826:47;7890:131;8016:4;7890:131;:::i;:::-;7882:139;;7609:419;;;:::o;8034:220::-;8174:34;8170:1;8162:6;8158:14;8151:58;8243:3;8238:2;8230:6;8226:15;8219:28;8034:220;:::o;8260:366::-;8402:3;8423:67;8487:2;8482:3;8423:67;:::i;:::-;8416:74;;8499:93;8588:3;8499:93;:::i;:::-;8617:2;8612:3;8608:12;8601:19;;8260:366;;;:::o;8632:419::-;8798:4;8836:2;8825:9;8821:18;8813:26;;8885:9;8879:4;8875:20;8871:1;8860:9;8856:17;8849:47;8913:131;9039:4;8913:131;:::i;:::-;8905:139;;8632:419;;;:::o;9057:180::-;9105:77;9102:1;9095:88;9202:4;9199:1;9192:15;9226:4;9223:1;9216:15;9243:191;9283:3;9302:20;9320:1;9302:20;:::i;:::-;9297:25;;9336:20;9354:1;9336:20;:::i;:::-;9331:25;;9379:1;9376;9372:9;9365:16;;9400:3;9397:1;9394:10;9391:36;;;9407:18;;:::i;:::-;9391:36;9243:191;;;;:::o;9440:182::-;9580:34;9576:1;9568:6;9564:14;9557:58;9440:182;:::o;9628:366::-;9770:3;9791:67;9855:2;9850:3;9791:67;:::i;:::-;9784:74;;9867:93;9956:3;9867:93;:::i;:::-;9985:2;9980:3;9976:12;9969:19;;9628:366;;;:::o;10000:419::-;10166:4;10204:2;10193:9;10189:18;10181:26;;10253:9;10247:4;10243:20;10239:1;10228:9;10224:17;10217:47;10281:131;10407:4;10281:131;:::i;:::-;10273:139;;10000:419;;;:::o;10425:410::-;10465:7;10488:20;10506:1;10488:20;:::i;:::-;10483:25;;10522:20;10540:1;10522:20;:::i;:::-;10517:25;;10577:1;10574;10570:9;10599:30;10617:11;10599:30;:::i;:::-;10588:41;;10778:1;10769:7;10765:15;10762:1;10759:22;10739:1;10732:9;10712:83;10689:139;;10808:18;;:::i;:::-;10689:139;10473:362;10425:410;;;;:::o;10841:442::-;10990:4;11028:2;11017:9;11013:18;11005:26;;11041:71;11109:1;11098:9;11094:17;11085:6;11041:71;:::i;:::-;11122:72;11190:2;11179:9;11175:18;11166:6;11122:72;:::i;:::-;11204;11272:2;11261:9;11257:18;11248:6;11204:72;:::i;:::-;10841:442;;;;;;:::o;11289:90::-;11323:7;11366:5;11359:13;11352:21;11341:32;;11289:90;;;:::o;11385:116::-;11455:21;11470:5;11455:21;:::i;:::-;11448:5;11445:32;11435:60;;11491:1;11488;11481:12;11435:60;11385:116;:::o;11507:137::-;11561:5;11592:6;11586:13;11577:22;;11608:30;11632:5;11608:30;:::i;:::-;11507:137;;;;:::o;11650:345::-;11717:6;11766:2;11754:9;11745:7;11741:23;11737:32;11734:119;;;11772:79;;:::i;:::-;11734:119;11892:1;11917:61;11970:7;11961:6;11950:9;11946:22;11917:61;:::i;:::-;11907:71;;11863:125;11650:345;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "718200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"buyTokens(address)": "infinite",
								"owner()": "2522",
								"rate()": "2430",
								"renounceOwnership()": "30465",
								"setRate(uint256)": "24830",
								"token()": "infinite",
								"transferOwnership(address)": "30788",
								"weiRaised()": "2474"
							},
							"internal": {
								"_deliverTokens(address,uint256)": "infinite",
								"_forwardFunds()": "infinite",
								"_getTokenAmount(uint256)": "infinite",
								"_postValidatePurchase(address,uint256)": "13",
								"_preValidatePurchase(address,uint256)": "infinite",
								"_processPurchase(address,uint256)": "infinite",
								"_updatePurchasingState(address,uint256)": "13"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 289,
									"end": 2720,
									"name": "PUSH",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 289,
									"end": 2720,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 289,
									"end": 2720,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 579,
									"end": 852,
									"name": "CALLVALUE",
									"source": 5
								},
								{
									"begin": 579,
									"end": 852,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 579,
									"end": 852,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 579,
									"end": 852,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 579,
									"end": 852,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 579,
									"end": 852,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 579,
									"end": 852,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 579,
									"end": 852,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 579,
									"end": 852,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 579,
									"end": 852,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 579,
									"end": 852,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 579,
									"end": 852,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 579,
									"end": 852,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 579,
									"end": 852,
									"name": "PUSHSIZE",
									"source": 5
								},
								{
									"begin": 579,
									"end": 852,
									"name": "CODESIZE",
									"source": 5
								},
								{
									"begin": 579,
									"end": 852,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 579,
									"end": 852,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 579,
									"end": 852,
									"name": "PUSHSIZE",
									"source": 5
								},
								{
									"begin": 579,
									"end": 852,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 579,
									"end": 852,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 579,
									"end": 852,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 579,
									"end": 852,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 579,
									"end": 852,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 579,
									"end": 852,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 579,
									"end": 852,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 579,
									"end": 852,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 579,
									"end": 852,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 579,
									"end": 852,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 579,
									"end": 852,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 579,
									"end": 852,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 579,
									"end": 852,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 579,
									"end": 852,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 579,
									"end": 852,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 579,
									"end": 852,
									"name": "tag",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 579,
									"end": 852,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 955,
									"end": 967,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 955,
									"end": 967,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 955,
									"end": 967,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 954,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1821,
									"end": 1828,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 655,
									"end": 656,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 647,
									"end": 652,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 647,
									"end": 656,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 639,
									"end": 689,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "14"
								},
								{
									"begin": 639,
									"end": 689,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 639,
									"end": 689,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 639,
									"end": 689,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 639,
									"end": 689,
									"name": "PUSH",
									"source": 5,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 639,
									"end": 689,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 639,
									"end": 689,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 639,
									"end": 689,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 639,
									"end": 689,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 639,
									"end": 689,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "15"
								},
								{
									"begin": 639,
									"end": 689,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 639,
									"end": 689,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "16"
								},
								{
									"begin": 639,
									"end": 689,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 639,
									"end": 689,
									"name": "tag",
									"source": 5,
									"value": "15"
								},
								{
									"begin": 639,
									"end": 689,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 639,
									"end": 689,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 639,
									"end": 689,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 639,
									"end": 689,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 639,
									"end": 689,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 639,
									"end": 689,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 639,
									"end": 689,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 639,
									"end": 689,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 639,
									"end": 689,
									"name": "tag",
									"source": 5,
									"value": "14"
								},
								{
									"begin": 639,
									"end": 689,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 732,
									"end": 733,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 707,
									"end": 734,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 707,
									"end": 734,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 707,
									"end": 720,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 707,
									"end": 734,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 707,
									"end": 734,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 707,
									"end": 734,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 699,
									"end": 783,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "17"
								},
								{
									"begin": 699,
									"end": 783,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 699,
									"end": 783,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 699,
									"end": 783,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 699,
									"end": 783,
									"name": "PUSH",
									"source": 5,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 699,
									"end": 783,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 699,
									"end": 783,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 699,
									"end": 783,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 699,
									"end": 783,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 699,
									"end": 783,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "18"
								},
								{
									"begin": 699,
									"end": 783,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 699,
									"end": 783,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "19"
								},
								{
									"begin": 699,
									"end": 783,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 699,
									"end": 783,
									"name": "tag",
									"source": 5,
									"value": "18"
								},
								{
									"begin": 699,
									"end": 783,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 699,
									"end": 783,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 699,
									"end": 783,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 699,
									"end": 783,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 699,
									"end": 783,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 699,
									"end": 783,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 699,
									"end": 783,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 699,
									"end": 783,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 699,
									"end": 783,
									"name": "tag",
									"source": 5,
									"value": "17"
								},
								{
									"begin": 699,
									"end": 783,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 801,
									"end": 806,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 794,
									"end": 798,
									"name": "PUSH",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 794,
									"end": 806,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 794,
									"end": 806,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 794,
									"end": 806,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 794,
									"end": 806,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 831,
									"end": 844,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 816,
									"end": 821,
									"name": "PUSH",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 816,
									"end": 821,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 816,
									"end": 845,
									"name": "PUSH",
									"source": 5,
									"value": "100"
								},
								{
									"begin": 816,
									"end": 845,
									"name": "EXP",
									"source": 5
								},
								{
									"begin": 816,
									"end": 845,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 816,
									"end": 845,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 816,
									"end": 845,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 816,
									"end": 845,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 816,
									"end": 845,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 816,
									"end": 845,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 816,
									"end": 845,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 816,
									"end": 845,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 816,
									"end": 845,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 816,
									"end": 845,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 816,
									"end": 845,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 816,
									"end": 845,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 816,
									"end": 845,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 816,
									"end": 845,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 816,
									"end": 845,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 816,
									"end": 845,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 579,
									"end": 852,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 579,
									"end": 852,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 289,
									"end": 2720,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 289,
									"end": 2720,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 640,
									"end": 736,
									"name": "tag",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 693,
									"end": 700,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 3
								},
								{
									"begin": 712,
									"end": 729,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 712,
									"end": 729,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 640,
									"end": 736,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 640,
									"end": 736,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2522,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2531,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2550,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2547,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2541,
									"end": 2547,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2604,
									"end": 2612,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2594,
									"end": 2602,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2496,
									"end": 2620,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2433,
									"end": 2620,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 334,
									"end": 411,
									"name": "tag",
									"source": 6,
									"value": "26"
								},
								{
									"begin": 334,
									"end": 411,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 400,
									"end": 405,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 389,
									"end": 405,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 389,
									"end": 405,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 334,
									"end": 411,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 334,
									"end": 411,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 334,
									"end": 411,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 334,
									"end": 411,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 417,
									"end": 539,
									"name": "tag",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 417,
									"end": 539,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 490,
									"end": 514,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "44"
								},
								{
									"begin": 508,
									"end": 513,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 490,
									"end": 514,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "26"
								},
								{
									"begin": 490,
									"end": 514,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 490,
									"end": 514,
									"name": "tag",
									"source": 6,
									"value": "44"
								},
								{
									"begin": 490,
									"end": 514,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 483,
									"end": 488,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 480,
									"end": 515,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 470,
									"end": 533,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "45"
								},
								{
									"begin": 470,
									"end": 533,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 529,
									"end": 530,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 526,
									"end": 527,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 519,
									"end": 531,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 470,
									"end": 533,
									"name": "tag",
									"source": 6,
									"value": "45"
								},
								{
									"begin": 470,
									"end": 533,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 417,
									"end": 539,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 417,
									"end": 539,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 545,
									"end": 688,
									"name": "tag",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 545,
									"end": 688,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 602,
									"end": 607,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 633,
									"end": 639,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 627,
									"end": 640,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 618,
									"end": 640,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 618,
									"end": 640,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 649,
									"end": 682,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "47"
								},
								{
									"begin": 676,
									"end": 681,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 649,
									"end": 682,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 649,
									"end": 682,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 649,
									"end": 682,
									"name": "tag",
									"source": 6,
									"value": "47"
								},
								{
									"begin": 649,
									"end": 682,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 545,
									"end": 688,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 545,
									"end": 688,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 545,
									"end": 688,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 545,
									"end": 688,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 545,
									"end": 688,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 694,
									"end": 820,
									"name": "tag",
									"source": 6,
									"value": "29"
								},
								{
									"begin": 694,
									"end": 820,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 731,
									"end": 738,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 771,
									"end": 813,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 764,
									"end": 769,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 760,
									"end": 814,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 749,
									"end": 814,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 749,
									"end": 814,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 694,
									"end": 820,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 694,
									"end": 820,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 694,
									"end": 820,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 694,
									"end": 820,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 826,
									"end": 922,
									"name": "tag",
									"source": 6,
									"value": "30"
								},
								{
									"begin": 826,
									"end": 922,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 863,
									"end": 870,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 892,
									"end": 916,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "50"
								},
								{
									"begin": 910,
									"end": 915,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 892,
									"end": 916,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "29"
								},
								{
									"begin": 892,
									"end": 916,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 892,
									"end": 916,
									"name": "tag",
									"source": 6,
									"value": "50"
								},
								{
									"begin": 892,
									"end": 916,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 881,
									"end": 916,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 881,
									"end": 916,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 826,
									"end": 922,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 826,
									"end": 922,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 826,
									"end": 922,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 826,
									"end": 922,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "tag",
									"source": 6,
									"value": "31"
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "52"
								},
								{
									"begin": 1019,
									"end": 1024,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "30"
								},
								{
									"begin": 1001,
									"end": 1025,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "tag",
									"source": 6,
									"value": "52"
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 994,
									"end": 999,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 991,
									"end": 1026,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "53"
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1040,
									"end": 1041,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1037,
									"end": 1038,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1030,
									"end": 1042,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "tag",
									"source": 6,
									"value": "53"
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 928,
									"end": 1050,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "tag",
									"source": 6,
									"value": "32"
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1113,
									"end": 1118,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1144,
									"end": 1150,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1138,
									"end": 1151,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1129,
									"end": 1151,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1129,
									"end": 1151,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "55"
								},
								{
									"begin": 1187,
									"end": 1192,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "31"
								},
								{
									"begin": 1160,
									"end": 1193,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "tag",
									"source": 6,
									"value": "55"
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1056,
									"end": 1199,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1205,
									"end": 1712,
									"name": "tag",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 1205,
									"end": 1712,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1284,
									"end": 1290,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1292,
									"end": 1298,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1341,
									"end": 1343,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1329,
									"end": 1338,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1320,
									"end": 1327,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 1316,
									"end": 1339,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 1312,
									"end": 1344,
									"name": "SLT",
									"source": 6
								},
								{
									"begin": 1309,
									"end": 1428,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1309,
									"end": 1428,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "57"
								},
								{
									"begin": 1309,
									"end": 1428,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1347,
									"end": 1426,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "58"
								},
								{
									"begin": 1347,
									"end": 1426,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 1347,
									"end": 1426,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1347,
									"end": 1426,
									"name": "tag",
									"source": 6,
									"value": "58"
								},
								{
									"begin": 1347,
									"end": 1426,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1309,
									"end": 1428,
									"name": "tag",
									"source": 6,
									"value": "57"
								},
								{
									"begin": 1309,
									"end": 1428,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1467,
									"end": 1468,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1492,
									"end": 1556,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "59"
								},
								{
									"begin": 1548,
									"end": 1555,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 1539,
									"end": 1545,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1528,
									"end": 1537,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 1524,
									"end": 1546,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1492,
									"end": 1556,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 1492,
									"end": 1556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1492,
									"end": 1556,
									"name": "tag",
									"source": 6,
									"value": "59"
								},
								{
									"begin": 1492,
									"end": 1556,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1482,
									"end": 1556,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1482,
									"end": 1556,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1438,
									"end": 1566,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1605,
									"end": 1607,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1631,
									"end": 1695,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 1687,
									"end": 1694,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 1678,
									"end": 1684,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1667,
									"end": 1676,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 1663,
									"end": 1685,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1631,
									"end": 1695,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "32"
								},
								{
									"begin": 1631,
									"end": 1695,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1631,
									"end": 1695,
									"name": "tag",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 1631,
									"end": 1695,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1621,
									"end": 1695,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1621,
									"end": 1695,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1576,
									"end": 1705,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1205,
									"end": 1712,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1205,
									"end": 1712,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1205,
									"end": 1712,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1205,
									"end": 1712,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1205,
									"end": 1712,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1205,
									"end": 1712,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1718,
									"end": 1887,
									"name": "tag",
									"source": 6,
									"value": "33"
								},
								{
									"begin": 1718,
									"end": 1887,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1802,
									"end": 1813,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1836,
									"end": 1842,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1831,
									"end": 1834,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1824,
									"end": 1843,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1876,
									"end": 1880,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1871,
									"end": 1874,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1867,
									"end": 1881,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1852,
									"end": 1881,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1852,
									"end": 1881,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1718,
									"end": 1887,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1718,
									"end": 1887,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1718,
									"end": 1887,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1718,
									"end": 1887,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1718,
									"end": 1887,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1893,
									"end": 2071,
									"name": "tag",
									"source": 6,
									"value": "34"
								},
								{
									"begin": 1893,
									"end": 2071,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2033,
									"end": 2063,
									"name": "PUSH",
									"source": 6,
									"value": "436861645065706543726F776473616C653A2072617465206973203000000000"
								},
								{
									"begin": 2029,
									"end": 2030,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2021,
									"end": 2027,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2017,
									"end": 2031,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2010,
									"end": 2064,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1893,
									"end": 2071,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1893,
									"end": 2071,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2077,
									"end": 2443,
									"name": "tag",
									"source": 6,
									"value": "35"
								},
								{
									"begin": 2077,
									"end": 2443,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2219,
									"end": 2222,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2240,
									"end": 2307,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "64"
								},
								{
									"begin": 2304,
									"end": 2306,
									"name": "PUSH",
									"source": 6,
									"value": "1C"
								},
								{
									"begin": 2299,
									"end": 2302,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 2240,
									"end": 2307,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "33"
								},
								{
									"begin": 2240,
									"end": 2307,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2240,
									"end": 2307,
									"name": "tag",
									"source": 6,
									"value": "64"
								},
								{
									"begin": 2240,
									"end": 2307,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2233,
									"end": 2307,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2233,
									"end": 2307,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2316,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "65"
								},
								{
									"begin": 2405,
									"end": 2408,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2316,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "34"
								},
								{
									"begin": 2316,
									"end": 2409,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2316,
									"end": 2409,
									"name": "tag",
									"source": 6,
									"value": "65"
								},
								{
									"begin": 2316,
									"end": 2409,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2434,
									"end": 2436,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2429,
									"end": 2432,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2425,
									"end": 2437,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2418,
									"end": 2437,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2418,
									"end": 2437,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2077,
									"end": 2443,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2077,
									"end": 2443,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2077,
									"end": 2443,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2077,
									"end": 2443,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2449,
									"end": 2868,
									"name": "tag",
									"source": 6,
									"value": "16"
								},
								{
									"begin": 2449,
									"end": 2868,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2615,
									"end": 2619,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2653,
									"end": 2655,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2642,
									"end": 2651,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2638,
									"end": 2656,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2630,
									"end": 2656,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2630,
									"end": 2656,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2702,
									"end": 2711,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2696,
									"end": 2700,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2692,
									"end": 2712,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 2688,
									"end": 2689,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2677,
									"end": 2686,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 2673,
									"end": 2690,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2666,
									"end": 2713,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 2730,
									"end": 2861,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "67"
								},
								{
									"begin": 2856,
									"end": 2860,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2730,
									"end": 2861,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "35"
								},
								{
									"begin": 2730,
									"end": 2861,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2730,
									"end": 2861,
									"name": "tag",
									"source": 6,
									"value": "67"
								},
								{
									"begin": 2730,
									"end": 2861,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2722,
									"end": 2861,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2722,
									"end": 2861,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2449,
									"end": 2868,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2449,
									"end": 2868,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2449,
									"end": 2868,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2449,
									"end": 2868,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2874,
									"end": 3105,
									"name": "tag",
									"source": 6,
									"value": "36"
								},
								{
									"begin": 2874,
									"end": 3105,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3014,
									"end": 3048,
									"name": "PUSH",
									"source": 6,
									"value": "436861645065706543726F776473616C653A20746F6B656E2069732074686520"
								},
								{
									"begin": 3010,
									"end": 3011,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3002,
									"end": 3008,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2998,
									"end": 3012,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2991,
									"end": 3049,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 3083,
									"end": 3097,
									"name": "PUSH",
									"source": 6,
									"value": "7A65726F20616464726573730000000000000000000000000000000000000000"
								},
								{
									"begin": 3078,
									"end": 3080,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 3070,
									"end": 3076,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3066,
									"end": 3081,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3059,
									"end": 3098,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 2874,
									"end": 3105,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2874,
									"end": 3105,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3111,
									"end": 3477,
									"name": "tag",
									"source": 6,
									"value": "37"
								},
								{
									"begin": 3111,
									"end": 3477,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3253,
									"end": 3256,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3274,
									"end": 3341,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "70"
								},
								{
									"begin": 3338,
									"end": 3340,
									"name": "PUSH",
									"source": 6,
									"value": "2C"
								},
								{
									"begin": 3333,
									"end": 3336,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 3274,
									"end": 3341,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "33"
								},
								{
									"begin": 3274,
									"end": 3341,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3274,
									"end": 3341,
									"name": "tag",
									"source": 6,
									"value": "70"
								},
								{
									"begin": 3274,
									"end": 3341,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3267,
									"end": 3341,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3267,
									"end": 3341,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3350,
									"end": 3443,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "71"
								},
								{
									"begin": 3439,
									"end": 3442,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3350,
									"end": 3443,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "36"
								},
								{
									"begin": 3350,
									"end": 3443,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3350,
									"end": 3443,
									"name": "tag",
									"source": 6,
									"value": "71"
								},
								{
									"begin": 3350,
									"end": 3443,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3468,
									"end": 3470,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 3463,
									"end": 3466,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3459,
									"end": 3471,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3452,
									"end": 3471,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3452,
									"end": 3471,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3111,
									"end": 3477,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3111,
									"end": 3477,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3111,
									"end": 3477,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3111,
									"end": 3477,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3483,
									"end": 3902,
									"name": "tag",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 3483,
									"end": 3902,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3649,
									"end": 3653,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3687,
									"end": 3689,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 3676,
									"end": 3685,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3672,
									"end": 3690,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3664,
									"end": 3690,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3664,
									"end": 3690,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3736,
									"end": 3745,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3730,
									"end": 3734,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3726,
									"end": 3746,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 3722,
									"end": 3723,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3711,
									"end": 3720,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 3707,
									"end": 3724,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3700,
									"end": 3747,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 3764,
									"end": 3895,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 3890,
									"end": 3894,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3764,
									"end": 3895,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "37"
								},
								{
									"begin": 3764,
									"end": 3895,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3764,
									"end": 3895,
									"name": "tag",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 3764,
									"end": 3895,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3756,
									"end": 3895,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3756,
									"end": 3895,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3483,
									"end": 3902,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3483,
									"end": 3902,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3483,
									"end": 3902,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3483,
									"end": 3902,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 289,
									"end": 2720,
									"name": "tag",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 289,
									"end": 2720,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 289,
									"end": 2720,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 289,
									"end": 2720,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 289,
									"end": 2720,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 289,
									"end": 2720,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 289,
									"end": 2720,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 289,
									"end": 2720,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 289,
									"end": 2720,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220994dc450424dd8e7a7a7079bd3916a079079dc382997286ea236db947e02704864736f6c63430008120033",
									".code": [
										{
											"begin": 289,
											"end": 2720,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 289,
											"end": 2720,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 289,
											"end": 2720,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 289,
											"end": 2720,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 289,
											"end": 2720,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 289,
											"end": 2720,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 289,
											"end": 2720,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 289,
											"end": 2720,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 289,
											"end": 2720,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 289,
											"end": 2720,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 289,
											"end": 2720,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 289,
											"end": 2720,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 289,
											"end": 2720,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 289,
											"end": 2720,
											"name": "PUSH",
											"source": 5,
											"value": "8DA5CB5B"
										},
										{
											"begin": 289,
											"end": 2720,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 289,
											"end": 2720,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 289,
											"end": 2720,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 289,
											"end": 2720,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 289,
											"end": 2720,
											"name": "PUSH",
											"source": 5,
											"value": "8DA5CB5B"
										},
										{
											"begin": 289,
											"end": 2720,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 289,
											"end": 2720,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 289,
											"end": 2720,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 289,
											"end": 2720,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 289,
											"end": 2720,
											"name": "PUSH",
											"source": 5,
											"value": "EC8AC4D8"
										},
										{
											"begin": 289,
											"end": 2720,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 289,
											"end": 2720,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 289,
											"end": 2720,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 289,
											"end": 2720,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 289,
											"end": 2720,
											"name": "PUSH",
											"source": 5,
											"value": "F2FDE38B"
										},
										{
											"begin": 289,
											"end": 2720,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 289,
											"end": 2720,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 289,
											"end": 2720,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 289,
											"end": 2720,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 289,
											"end": 2720,
											"name": "PUSH",
											"source": 5,
											"value": "FC0C546A"
										},
										{
											"begin": 289,
											"end": 2720,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 289,
											"end": 2720,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 289,
											"end": 2720,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 289,
											"end": 2720,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 289,
											"end": 2720,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 289,
											"end": 2720,
											"name": "tag",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 289,
											"end": 2720,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 289,
											"end": 2720,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 289,
											"end": 2720,
											"name": "PUSH",
											"source": 5,
											"value": "2C4E722E"
										},
										{
											"begin": 289,
											"end": 2720,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 289,
											"end": 2720,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 289,
											"end": 2720,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 289,
											"end": 2720,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 289,
											"end": 2720,
											"name": "PUSH",
											"source": 5,
											"value": "34FCF437"
										},
										{
											"begin": 289,
											"end": 2720,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 289,
											"end": 2720,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 289,
											"end": 2720,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 289,
											"end": 2720,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 289,
											"end": 2720,
											"name": "PUSH",
											"source": 5,
											"value": "4042B66F"
										},
										{
											"begin": 289,
											"end": 2720,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 289,
											"end": 2720,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 289,
											"end": 2720,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 289,
											"end": 2720,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 289,
											"end": 2720,
											"name": "PUSH",
											"source": 5,
											"value": "715018A6"
										},
										{
											"begin": 289,
											"end": 2720,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 289,
											"end": 2720,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 289,
											"end": 2720,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 289,
											"end": 2720,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 289,
											"end": 2720,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 289,
											"end": 2720,
											"name": "tag",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 289,
											"end": 2720,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 289,
											"end": 2720,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 289,
											"end": 2720,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 289,
											"end": 2720,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 895,
											"end": 916,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 905,
											"end": 915,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 895,
											"end": 904,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 895,
											"end": 916,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 895,
											"end": 916,
											"name": "tag",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 895,
											"end": 916,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 289,
											"end": 2720,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 289,
											"end": 2720,
											"name": "tag",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 289,
											"end": 2720,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 289,
											"end": 2720,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 289,
											"end": 2720,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 289,
											"end": 2720,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 408,
											"end": 427,
											"name": "tag",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 408,
											"end": 427,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 408,
											"end": 427,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 408,
											"end": 427,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 408,
											"end": 427,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 408,
											"end": 427,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 408,
											"end": 427,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 408,
											"end": 427,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 408,
											"end": 427,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 408,
											"end": 427,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 408,
											"end": 427,
											"name": "tag",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 408,
											"end": 427,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 408,
											"end": 427,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 408,
											"end": 427,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 408,
											"end": 427,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 408,
											"end": 427,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 408,
											"end": 427,
											"name": "tag",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 408,
											"end": 427,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 408,
											"end": 427,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 408,
											"end": 427,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 408,
											"end": 427,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 408,
											"end": 427,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 408,
											"end": 427,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 408,
											"end": 427,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 408,
											"end": 427,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 408,
											"end": 427,
											"name": "tag",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 408,
											"end": 427,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 408,
											"end": 427,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 408,
											"end": 427,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 408,
											"end": 427,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 408,
											"end": 427,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 408,
											"end": 427,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 408,
											"end": 427,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 408,
											"end": 427,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 2568,
											"end": 2718,
											"name": "tag",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2568,
											"end": 2718,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2568,
											"end": 2718,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 2568,
											"end": 2718,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2568,
											"end": 2718,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2568,
											"end": 2718,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 2568,
											"end": 2718,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2568,
											"end": 2718,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2568,
											"end": 2718,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2568,
											"end": 2718,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2568,
											"end": 2718,
											"name": "tag",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 2568,
											"end": 2718,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2568,
											"end": 2718,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2568,
											"end": 2718,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 2568,
											"end": 2718,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2568,
											"end": 2718,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2568,
											"end": 2718,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 2568,
											"end": 2718,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2568,
											"end": 2718,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2568,
											"end": 2718,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2568,
											"end": 2718,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2568,
											"end": 2718,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 2568,
											"end": 2718,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2568,
											"end": 2718,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2568,
											"end": 2718,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 2568,
											"end": 2718,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2568,
											"end": 2718,
											"name": "tag",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 2568,
											"end": 2718,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2568,
											"end": 2718,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 2568,
											"end": 2718,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2568,
											"end": 2718,
											"name": "tag",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 2568,
											"end": 2718,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2568,
											"end": 2718,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 433,
											"end": 457,
											"name": "tag",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 433,
											"end": 457,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 433,
											"end": 457,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 433,
											"end": 457,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 433,
											"end": 457,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 433,
											"end": 457,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 433,
											"end": 457,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 433,
											"end": 457,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 433,
											"end": 457,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 433,
											"end": 457,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 433,
											"end": 457,
											"name": "tag",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 433,
											"end": 457,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 433,
											"end": 457,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 433,
											"end": 457,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 433,
											"end": 457,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 433,
											"end": 457,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 433,
											"end": 457,
											"name": "tag",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 433,
											"end": 457,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 433,
											"end": 457,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 433,
											"end": 457,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 433,
											"end": 457,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 433,
											"end": 457,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 433,
											"end": 457,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 433,
											"end": 457,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 433,
											"end": 457,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 433,
											"end": 457,
											"name": "tag",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 433,
											"end": 457,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 433,
											"end": 457,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 433,
											"end": 457,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 433,
											"end": 457,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 433,
											"end": 457,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 433,
											"end": 457,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 433,
											"end": 457,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 433,
											"end": 457,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1831,
											"end": 1932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1201,
											"end": 1286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1201,
											"end": 1286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 929,
											"end": 1458,
											"name": "tag",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 929,
											"end": 1458,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 929,
											"end": 1458,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 929,
											"end": 1458,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 929,
											"end": 1458,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 929,
											"end": 1458,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 929,
											"end": 1458,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 929,
											"end": 1458,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 929,
											"end": 1458,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 929,
											"end": 1458,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 929,
											"end": 1458,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 929,
											"end": 1458,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 929,
											"end": 1458,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 929,
											"end": 1458,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 929,
											"end": 1458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 929,
											"end": 1458,
											"name": "tag",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 929,
											"end": 1458,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 929,
											"end": 1458,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 929,
											"end": 1458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 929,
											"end": 1458,
											"name": "tag",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 929,
											"end": 1458,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 929,
											"end": 1458,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2081,
											"end": 2279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 2081,
											"end": 2279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 383,
											"end": 402,
											"name": "tag",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 383,
											"end": 402,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 383,
											"end": 402,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 383,
											"end": 402,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 383,
											"end": 402,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 383,
											"end": 402,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 383,
											"end": 402,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 383,
											"end": 402,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 383,
											"end": 402,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 383,
											"end": 402,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 383,
											"end": 402,
											"name": "tag",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 383,
											"end": 402,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 383,
											"end": 402,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 383,
											"end": 402,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 383,
											"end": 402,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 383,
											"end": 402,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 383,
											"end": 402,
											"name": "tag",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 383,
											"end": 402,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 383,
											"end": 402,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 383,
											"end": 402,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 383,
											"end": 402,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 383,
											"end": 402,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 383,
											"end": 402,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 383,
											"end": 402,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 383,
											"end": 402,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 383,
											"end": 402,
											"name": "tag",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 383,
											"end": 402,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 383,
											"end": 402,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 383,
											"end": 402,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 383,
											"end": 402,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 383,
											"end": 402,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 383,
											"end": 402,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 383,
											"end": 402,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 383,
											"end": 402,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 929,
											"end": 1458,
											"name": "tag",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 929,
											"end": 1458,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1007,
											"end": 1024,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1027,
											"end": 1036,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 1007,
											"end": 1036,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1007,
											"end": 1036,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1046,
											"end": 1090,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 1067,
											"end": 1078,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1080,
											"end": 1089,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1046,
											"end": 1066,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 1046,
											"end": 1090,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1046,
											"end": 1090,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 1046,
											"end": 1090,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1101,
											"end": 1115,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1118,
											"end": 1144,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 1134,
											"end": 1143,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1118,
											"end": 1133,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 1118,
											"end": 1144,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1118,
											"end": 1144,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 1118,
											"end": 1144,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1101,
											"end": 1144,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1101,
											"end": 1144,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1167,
											"end": 1191,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 1181,
											"end": 1190,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1167,
											"end": 1176,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1167,
											"end": 1176,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1167,
											"end": 1180,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 1167,
											"end": 1180,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1167,
											"end": 1191,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1167,
											"end": 1191,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1167,
											"end": 1191,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1167,
											"end": 1191,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1167,
											"end": 1191,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1167,
											"end": 1191,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 1167,
											"end": 1191,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1155,
											"end": 1164,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1155,
											"end": 1191,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1155,
											"end": 1191,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1155,
											"end": 1191,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 1155,
											"end": 1191,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1202,
											"end": 1239,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 1219,
											"end": 1230,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1232,
											"end": 1238,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1202,
											"end": 1218,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 1202,
											"end": 1239,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1202,
											"end": 1239,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 1202,
											"end": 1239,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1293,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1254,
											"end": 1313,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1254,
											"end": 1313,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1270,
											"end": 1280,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1254,
											"end": 1313,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1254,
											"end": 1313,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1254,
											"end": 1313,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "6FAF93231A456E552DBC9961F58D9713EE4F2E69D15F1975B050EF0911053A7B"
										},
										{
											"begin": 1295,
											"end": 1304,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1306,
											"end": 1312,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1254,
											"end": 1313,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1254,
											"end": 1313,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1254,
											"end": 1313,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 1254,
											"end": 1313,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1254,
											"end": 1313,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1254,
											"end": 1313,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1254,
											"end": 1313,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 1254,
											"end": 1313,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1254,
											"end": 1313,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 1254,
											"end": 1313,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1254,
											"end": 1313,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1254,
											"end": 1313,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1254,
											"end": 1313,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1254,
											"end": 1313,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1254,
											"end": 1313,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1254,
											"end": 1313,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1254,
											"end": 1313,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 5
										},
										{
											"begin": 1324,
											"end": 1370,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 1347,
											"end": 1358,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1360,
											"end": 1369,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1324,
											"end": 1346,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 1324,
											"end": 1370,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1324,
											"end": 1370,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 1324,
											"end": 1370,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1381,
											"end": 1396,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 1381,
											"end": 1394,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 1381,
											"end": 1396,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1381,
											"end": 1396,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 1381,
											"end": 1396,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1406,
											"end": 1451,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 1428,
											"end": 1439,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1441,
											"end": 1450,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1406,
											"end": 1427,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 1406,
											"end": 1451,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1406,
											"end": 1451,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 1406,
											"end": 1451,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 997,
											"end": 1458,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 997,
											"end": 1458,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 2303,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 929,
											"end": 1458,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 929,
											"end": 1458,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 408,
											"end": 427,
											"name": "tag",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 408,
											"end": 427,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 408,
											"end": 427,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 408,
											"end": 427,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 408,
											"end": 427,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 408,
											"end": 427,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2568,
											"end": 2718,
											"name": "tag",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 2568,
											"end": 2718,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2649,
											"end": 2650,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2639,
											"end": 2646,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2639,
											"end": 2650,
											"modifierDepth": 1,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 2631,
											"end": 2687,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 2631,
											"end": 2687,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2631,
											"end": 2687,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2631,
											"end": 2687,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2631,
											"end": 2687,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2631,
											"end": 2687,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2631,
											"end": 2687,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2631,
											"end": 2687,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2631,
											"end": 2687,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2631,
											"end": 2687,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "77"
										},
										{
											"begin": 2631,
											"end": 2687,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2631,
											"end": 2687,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 2631,
											"end": 2687,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2631,
											"end": 2687,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "77"
										},
										{
											"begin": 2631,
											"end": 2687,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2631,
											"end": 2687,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2631,
											"end": 2687,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2631,
											"end": 2687,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2631,
											"end": 2687,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2631,
											"end": 2687,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2631,
											"end": 2687,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2631,
											"end": 2687,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2631,
											"end": 2687,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 2631,
											"end": 2687,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2704,
											"end": 2711,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2697,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 2697,
											"end": 2711,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2697,
											"end": 2711,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2697,
											"end": 2711,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2697,
											"end": 2711,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2568,
											"end": 2718,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2568,
											"end": 2718,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 433,
											"end": 457,
											"name": "tag",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 433,
											"end": 457,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 433,
											"end": 457,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 433,
											"end": 457,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 433,
											"end": 457,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 433,
											"end": 457,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1895,
											"end": 1925,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 1922,
											"end": 1923,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1895,
											"end": 1913,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 1895,
											"end": 1925,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1895,
											"end": 1925,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 1895,
											"end": 1925,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1247,
											"end": 1254,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2189,
											"end": 2190,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2169,
											"end": 2191,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2169,
											"end": 2191,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2177,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2191,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2169,
											"end": 2191,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 2161,
											"end": 2234,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2272,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 2263,
											"end": 2271,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2262,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 2244,
											"end": 2272,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2272,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 2244,
											"end": 2272,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 383,
											"end": 402,
											"name": "tag",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 383,
											"end": 402,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 383,
											"end": 402,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 383,
											"end": 402,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 383,
											"end": 402,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 383,
											"end": 402,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 383,
											"end": 402,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 383,
											"end": 402,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 383,
											"end": 402,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 383,
											"end": 402,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 383,
											"end": 402,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 383,
											"end": 402,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 383,
											"end": 402,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 383,
											"end": 402,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 383,
											"end": 402,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2468,
											"end": 2487,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 2460,
											"end": 2523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2598,
											"end": 2605,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2336,
											"end": 2623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1464,
											"end": 1723,
											"name": "tag",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 1464,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1589,
											"end": 1590,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1566,
											"end": 1591,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1566,
											"end": 1591,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1566,
											"end": 1577,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1566,
											"end": 1591,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1566,
											"end": 1591,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1566,
											"end": 1591,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1558,
											"end": 1646,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 1558,
											"end": 1646,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1558,
											"end": 1646,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1558,
											"end": 1646,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1558,
											"end": 1646,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1558,
											"end": 1646,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1558,
											"end": 1646,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1558,
											"end": 1646,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1558,
											"end": 1646,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1558,
											"end": 1646,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 1558,
											"end": 1646,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1558,
											"end": 1646,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 1558,
											"end": 1646,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1558,
											"end": 1646,
											"name": "tag",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 1558,
											"end": 1646,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1558,
											"end": 1646,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1558,
											"end": 1646,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1558,
											"end": 1646,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1558,
											"end": 1646,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1558,
											"end": 1646,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1558,
											"end": 1646,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1558,
											"end": 1646,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1558,
											"end": 1646,
											"name": "tag",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 1558,
											"end": 1646,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1677,
											"end": 1678,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1664,
											"end": 1673,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1664,
											"end": 1678,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1656,
											"end": 1716,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 1656,
											"end": 1716,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1656,
											"end": 1716,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1656,
											"end": 1716,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1656,
											"end": 1716,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1656,
											"end": 1716,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1656,
											"end": 1716,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1656,
											"end": 1716,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1656,
											"end": 1716,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1656,
											"end": 1716,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 1656,
											"end": 1716,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1656,
											"end": 1716,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 1656,
											"end": 1716,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1656,
											"end": 1716,
											"name": "tag",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 1656,
											"end": 1716,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1656,
											"end": 1716,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1656,
											"end": 1716,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1656,
											"end": 1716,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1656,
											"end": 1716,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1656,
											"end": 1716,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1656,
											"end": 1716,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1656,
											"end": 1716,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1656,
											"end": 1716,
											"name": "tag",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 1656,
											"end": 1716,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1464,
											"end": 1723,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1464,
											"end": 1723,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1464,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2350,
											"end": 2469,
											"name": "tag",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 2350,
											"end": 2469,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2417,
											"end": 2424,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2443,
											"end": 2462,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 2457,
											"end": 2461,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 2457,
											"end": 2461,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2443,
											"end": 2452,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2443,
											"end": 2456,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 2443,
											"end": 2456,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2443,
											"end": 2462,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2443,
											"end": 2462,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2443,
											"end": 2462,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2443,
											"end": 2462,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2443,
											"end": 2462,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2443,
											"end": 2462,
											"name": "tag",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 2443,
											"end": 2462,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2436,
											"end": 2462,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2436,
											"end": 2462,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2350,
											"end": 2469,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2350,
											"end": 2469,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2350,
											"end": 2469,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2350,
											"end": 2469,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "tag",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2813,
											"end": 2820,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2843,
											"end": 2844,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2840,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 2839,
											"end": 2844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "tag",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2755,
											"end": 2851,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2043,
											"end": 2177,
											"name": "tag",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 2043,
											"end": 2177,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2130,
											"end": 2170,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 2145,
											"end": 2156,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2158,
											"end": 2169,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2130,
											"end": 2144,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 2130,
											"end": 2170,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2130,
											"end": 2170,
											"name": "tag",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 2130,
											"end": 2170,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2043,
											"end": 2177,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2043,
											"end": 2177,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2043,
											"end": 2177,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2183,
											"end": 2344,
											"name": "tag",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 2183,
											"end": 2344,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2183,
											"end": 2344,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2183,
											"end": 2344,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2183,
											"end": 2344,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2475,
											"end": 2562,
											"name": "tag",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 2475,
											"end": 2562,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2527,
											"end": 2534,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 2527,
											"end": 2532,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 2527,
											"end": 2534,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2527,
											"end": 2534,
											"name": "tag",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 2527,
											"end": 2534,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2519,
											"end": 2544,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2519,
											"end": 2544,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2519,
											"end": 2555,
											"name": "PUSH",
											"source": 5,
											"value": "8FC"
										},
										{
											"begin": 2545,
											"end": 2554,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 2519,
											"end": 2555,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2519,
											"end": 2555,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2519,
											"end": 2555,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2519,
											"end": 2555,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 2519,
											"end": 2555,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2519,
											"end": 2555,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2519,
											"end": 2555,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2519,
											"end": 2555,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2519,
											"end": 2555,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2519,
											"end": 2555,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2519,
											"end": 2555,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2519,
											"end": 2555,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2519,
											"end": 2555,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2519,
											"end": 2555,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2519,
											"end": 2555,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2519,
											"end": 2555,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 2519,
											"end": 2555,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 2519,
											"end": 2555,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 2519,
											"end": 2555,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 2519,
											"end": 2555,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2519,
											"end": 2555,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2519,
											"end": 2555,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2519,
											"end": 2555,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2519,
											"end": 2555,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2519,
											"end": 2555,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2519,
											"end": 2555,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2519,
											"end": 2555,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 2519,
											"end": 2555,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2519,
											"end": 2555,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2519,
											"end": 2555,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2519,
											"end": 2555,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2519,
											"end": 2555,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 2519,
											"end": 2555,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2519,
											"end": 2555,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2519,
											"end": 2555,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2519,
											"end": 2555,
											"name": "tag",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 2519,
											"end": 2555,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2519,
											"end": 2555,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2475,
											"end": 2562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1729,
											"end": 1886,
											"name": "tag",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 1729,
											"end": 1886,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1729,
											"end": 1886,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1729,
											"end": 1886,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1729,
											"end": 1886,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1716,
											"end": 1717,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2809,
											"end": 2816,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2629,
											"end": 2838,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 1433,
											"end": 1443,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 1433,
											"end": 1445,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 1422,
											"end": 1427,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1422,
											"end": 1429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 1414,
											"end": 1482,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1359,
											"end": 1489,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2522,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2531,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2547,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2541,
											"end": 2547,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2604,
											"end": 2612,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2594,
											"end": 2602,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2496,
											"end": 2620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "tag",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3523,
											"end": 3530,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3553,
											"end": 3554,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3549,
											"end": 3550,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 3549,
											"end": 3554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "tag",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3542,
											"end": 3554,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3542,
											"end": 3554,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3465,
											"end": 3561,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1892,
											"end": 2037,
											"name": "tag",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 1892,
											"end": 2037,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1977,
											"end": 1982,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 1977,
											"end": 1982,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1977,
											"end": 1982,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1977,
											"end": 1982,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1977,
											"end": 1982,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1977,
											"end": 1982,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 1977,
											"end": 1982,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 1977,
											"end": 1982,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1977,
											"end": 1982,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 1977,
											"end": 1982,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1977,
											"end": 1982,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1977,
											"end": 1995,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1977,
											"end": 1995,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1977,
											"end": 1995,
											"name": "PUSH",
											"source": 5,
											"value": "23B872DD"
										},
										{
											"begin": 1996,
											"end": 2003,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 1996,
											"end": 2001,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 1996,
											"end": 2003,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1996,
											"end": 2003,
											"name": "tag",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 1996,
											"end": 2003,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2005,
											"end": 2016,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2018,
											"end": 2029,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1977,
											"end": 2030,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1977,
											"end": 2030,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1977,
											"end": 2030,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1977,
											"end": 2030,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1977,
											"end": 2030,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1977,
											"end": 2030,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 1977,
											"end": 2030,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 1977,
											"end": 2030,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1977,
											"end": 2030,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1977,
											"end": 2030,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1977,
											"end": 2030,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1977,
											"end": 2030,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 1977,
											"end": 2030,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1977,
											"end": 2030,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1977,
											"end": 2030,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1977,
											"end": 2030,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1977,
											"end": 2030,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 1977,
											"end": 2030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1977,
											"end": 2030,
											"name": "tag",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 1977,
											"end": 2030,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1977,
											"end": 2030,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1977,
											"end": 2030,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1977,
											"end": 2030,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1977,
											"end": 2030,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1977,
											"end": 2030,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1977,
											"end": 2030,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1977,
											"end": 2030,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1977,
											"end": 2030,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1977,
											"end": 2030,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 1977,
											"end": 2030,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 1977,
											"end": 2030,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 1977,
											"end": 2030,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1977,
											"end": 2030,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1977,
											"end": 2030,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1977,
											"end": 2030,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 1977,
											"end": 2030,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1977,
											"end": 2030,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1977,
											"end": 2030,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1977,
											"end": 2030,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1977,
											"end": 2030,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 1977,
											"end": 2030,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1977,
											"end": 2030,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1977,
											"end": 2030,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1977,
											"end": 2030,
											"name": "tag",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 1977,
											"end": 2030,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1977,
											"end": 2030,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1977,
											"end": 2030,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1977,
											"end": 2030,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1977,
											"end": 2030,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1977,
											"end": 2030,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1977,
											"end": 2030,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1977,
											"end": 2030,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1977,
											"end": 2030,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1977,
											"end": 2030,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1977,
											"end": 2030,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1977,
											"end": 2030,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1977,
											"end": 2030,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1977,
											"end": 2030,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1977,
											"end": 2030,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1977,
											"end": 2030,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1977,
											"end": 2030,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1977,
											"end": 2030,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1977,
											"end": 2030,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1977,
											"end": 2030,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1977,
											"end": 2030,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1977,
											"end": 2030,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1977,
											"end": 2030,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1977,
											"end": 2030,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 1977,
											"end": 2030,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1977,
											"end": 2030,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1977,
											"end": 2030,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 1977,
											"end": 2030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1977,
											"end": 2030,
											"name": "tag",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 1977,
											"end": 2030,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1977,
											"end": 2030,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1892,
											"end": 2037,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1892,
											"end": 2037,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1892,
											"end": 2037,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 640,
											"end": 736,
											"name": "tag",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 693,
											"end": 700,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 712,
											"end": 729,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 712,
											"end": 729,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 640,
											"end": 736,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 640,
											"end": 736,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 84,
											"name": "tag",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 78,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 62,
											"end": 78,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 62,
											"end": 78,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7,
											"end": 84,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7,
											"end": 84,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 90,
											"end": 208,
											"name": "tag",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 90,
											"end": 208,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 195,
											"end": 200,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 177,
											"end": 201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 177,
											"end": 201,
											"name": "tag",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 172,
											"end": 175,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 165,
											"end": 202,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 90,
											"end": 208,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 214,
											"end": 436,
											"name": "tag",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 214,
											"end": 436,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 307,
											"end": 311,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 347,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 334,
											"end": 343,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 322,
											"end": 348,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 322,
											"end": 348,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 426,
											"end": 427,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 415,
											"end": 424,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 411,
											"end": 428,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 402,
											"end": 408,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 358,
											"end": 429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 358,
											"end": 429,
											"name": "tag",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 214,
											"end": 436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 523,
											"end": 640,
											"name": "tag",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 523,
											"end": 640,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 632,
											"end": 633,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 630,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 622,
											"end": 634,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 769,
											"end": 891,
											"name": "tag",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 769,
											"end": 891,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 842,
											"end": 866,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 860,
											"end": 865,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 842,
											"end": 866,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 842,
											"end": 866,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 842,
											"end": 866,
											"name": "tag",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 842,
											"end": 866,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 835,
											"end": 840,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 832,
											"end": 867,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 822,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 822,
											"end": 885,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 881,
											"end": 882,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 878,
											"end": 879,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 871,
											"end": 883,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 822,
											"end": 885,
											"name": "tag",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 822,
											"end": 885,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 769,
											"end": 891,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 769,
											"end": 891,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "tag",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 943,
											"end": 948,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 981,
											"end": 987,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 968,
											"end": 988,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 959,
											"end": 988,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 959,
											"end": 988,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 997,
											"end": 1030,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 1024,
											"end": 1029,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 997,
											"end": 1030,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 997,
											"end": 1030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 997,
											"end": 1030,
											"name": "tag",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 997,
											"end": 1030,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 897,
											"end": 1036,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1042,
											"end": 1371,
											"name": "tag",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 1042,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1101,
											"end": 1107,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1150,
											"end": 1152,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1138,
											"end": 1147,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1129,
											"end": 1136,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1125,
											"end": 1148,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1121,
											"end": 1153,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 1118,
											"end": 1237,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1118,
											"end": 1237,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 1118,
											"end": 1237,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1156,
											"end": 1235,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 1156,
											"end": 1235,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 1156,
											"end": 1235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1156,
											"end": 1235,
											"name": "tag",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 1156,
											"end": 1235,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1118,
											"end": 1237,
											"name": "tag",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 1118,
											"end": 1237,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1276,
											"end": 1277,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1301,
											"end": 1354,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 1346,
											"end": 1353,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1337,
											"end": 1343,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1326,
											"end": 1335,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1322,
											"end": 1344,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1354,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 1301,
											"end": 1354,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1354,
											"name": "tag",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 1301,
											"end": 1354,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1291,
											"end": 1354,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1291,
											"end": 1354,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1247,
											"end": 1364,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1042,
											"end": 1371,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1042,
											"end": 1371,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1042,
											"end": 1371,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1042,
											"end": 1371,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1042,
											"end": 1371,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "tag",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1414,
											"end": 1421,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1454,
											"end": 1496,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1447,
											"end": 1452,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1443,
											"end": 1497,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1432,
											"end": 1497,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1432,
											"end": 1497,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1377,
											"end": 1503,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1509,
											"end": 1605,
											"name": "tag",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 1509,
											"end": 1605,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1546,
											"end": 1553,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1575,
											"end": 1599,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 1593,
											"end": 1598,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1575,
											"end": 1599,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 1575,
											"end": 1599,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1575,
											"end": 1599,
											"name": "tag",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 1575,
											"end": 1599,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1564,
											"end": 1599,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1564,
											"end": 1599,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1509,
											"end": 1605,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1509,
											"end": 1605,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1509,
											"end": 1605,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1509,
											"end": 1605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1611,
											"end": 1729,
											"name": "tag",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 1611,
											"end": 1729,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1698,
											"end": 1722,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 1716,
											"end": 1721,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1698,
											"end": 1722,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 1698,
											"end": 1722,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1698,
											"end": 1722,
											"name": "tag",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 1698,
											"end": 1722,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1693,
											"end": 1696,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1686,
											"end": 1723,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1611,
											"end": 1729,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1611,
											"end": 1729,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1611,
											"end": 1729,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1735,
											"end": 1957,
											"name": "tag",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 1735,
											"end": 1957,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1828,
											"end": 1832,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1866,
											"end": 1868,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1855,
											"end": 1864,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1851,
											"end": 1869,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1843,
											"end": 1869,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1843,
											"end": 1869,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1879,
											"end": 1950,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 1947,
											"end": 1948,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1936,
											"end": 1945,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1932,
											"end": 1949,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1923,
											"end": 1929,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1879,
											"end": 1950,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 1879,
											"end": 1950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1879,
											"end": 1950,
											"name": "tag",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 1879,
											"end": 1950,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1735,
											"end": 1957,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1735,
											"end": 1957,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1735,
											"end": 1957,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1735,
											"end": 1957,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1735,
											"end": 1957,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1963,
											"end": 2085,
											"name": "tag",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 1963,
											"end": 2085,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2036,
											"end": 2060,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 2054,
											"end": 2059,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2036,
											"end": 2060,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 2036,
											"end": 2060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2036,
											"end": 2060,
											"name": "tag",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 2036,
											"end": 2060,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2029,
											"end": 2034,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2026,
											"end": 2061,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 2016,
											"end": 2079,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 2016,
											"end": 2079,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2075,
											"end": 2076,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2072,
											"end": 2073,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2065,
											"end": 2077,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2016,
											"end": 2079,
											"name": "tag",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 2016,
											"end": 2079,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1963,
											"end": 2085,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1963,
											"end": 2085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2091,
											"end": 2230,
											"name": "tag",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 2091,
											"end": 2230,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2137,
											"end": 2142,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2175,
											"end": 2181,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2162,
											"end": 2182,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 2153,
											"end": 2182,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2153,
											"end": 2182,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2191,
											"end": 2224,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 2218,
											"end": 2223,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2191,
											"end": 2224,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 2191,
											"end": 2224,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2191,
											"end": 2224,
											"name": "tag",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 2191,
											"end": 2224,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2091,
											"end": 2230,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2091,
											"end": 2230,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2091,
											"end": 2230,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2091,
											"end": 2230,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2091,
											"end": 2230,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2236,
											"end": 2565,
											"name": "tag",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2236,
											"end": 2565,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2295,
											"end": 2301,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2344,
											"end": 2346,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2332,
											"end": 2341,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2323,
											"end": 2330,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2319,
											"end": 2342,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2315,
											"end": 2347,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 2312,
											"end": 2431,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2312,
											"end": 2431,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 2312,
											"end": 2431,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2350,
											"end": 2429,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 2350,
											"end": 2429,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 2350,
											"end": 2429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2350,
											"end": 2429,
											"name": "tag",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 2350,
											"end": 2429,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2312,
											"end": 2431,
											"name": "tag",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 2312,
											"end": 2431,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2470,
											"end": 2471,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2495,
											"end": 2548,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 2540,
											"end": 2547,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2531,
											"end": 2537,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2520,
											"end": 2529,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2516,
											"end": 2538,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2495,
											"end": 2548,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 2495,
											"end": 2548,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2495,
											"end": 2548,
											"name": "tag",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 2495,
											"end": 2548,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2485,
											"end": 2548,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2485,
											"end": 2548,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2441,
											"end": 2558,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2236,
											"end": 2565,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2236,
											"end": 2565,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2236,
											"end": 2565,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2236,
											"end": 2565,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2236,
											"end": 2565,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2571,
											"end": 2631,
											"name": "tag",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 2571,
											"end": 2631,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2599,
											"end": 2602,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2620,
											"end": 2625,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2613,
											"end": 2625,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2613,
											"end": 2625,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2571,
											"end": 2631,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2571,
											"end": 2631,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2571,
											"end": 2631,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2571,
											"end": 2631,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2637,
											"end": 2779,
											"name": "tag",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 2637,
											"end": 2779,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2687,
											"end": 2696,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2720,
											"end": 2773,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 2738,
											"end": 2772,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 2747,
											"end": 2771,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 2765,
											"end": 2770,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2747,
											"end": 2771,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 2747,
											"end": 2771,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2747,
											"end": 2771,
											"name": "tag",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 2747,
											"end": 2771,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2738,
											"end": 2772,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 2738,
											"end": 2772,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2738,
											"end": 2772,
											"name": "tag",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 2738,
											"end": 2772,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2720,
											"end": 2773,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 2720,
											"end": 2773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2720,
											"end": 2773,
											"name": "tag",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 2720,
											"end": 2773,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2707,
											"end": 2773,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2707,
											"end": 2773,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2637,
											"end": 2779,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2637,
											"end": 2779,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2637,
											"end": 2779,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2637,
											"end": 2779,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2785,
											"end": 2911,
											"name": "tag",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 2785,
											"end": 2911,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2835,
											"end": 2844,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2868,
											"end": 2905,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 2899,
											"end": 2904,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2868,
											"end": 2905,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 2868,
											"end": 2905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2868,
											"end": 2905,
											"name": "tag",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 2868,
											"end": 2905,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2855,
											"end": 2905,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2855,
											"end": 2905,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2785,
											"end": 2911,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2785,
											"end": 2911,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2785,
											"end": 2911,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2785,
											"end": 2911,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2917,
											"end": 3057,
											"name": "tag",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 2917,
											"end": 3057,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2981,
											"end": 2990,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3014,
											"end": 3051,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 3045,
											"end": 3050,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3014,
											"end": 3051,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 3014,
											"end": 3051,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3014,
											"end": 3051,
											"name": "tag",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 3014,
											"end": 3051,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3001,
											"end": 3051,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3001,
											"end": 3051,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2917,
											"end": 3057,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2917,
											"end": 3057,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2917,
											"end": 3057,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2917,
											"end": 3057,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3063,
											"end": 3222,
											"name": "tag",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 3063,
											"end": 3222,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3164,
											"end": 3215,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 3209,
											"end": 3214,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3164,
											"end": 3215,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 3164,
											"end": 3215,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3164,
											"end": 3215,
											"name": "tag",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 3164,
											"end": 3215,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3159,
											"end": 3162,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3152,
											"end": 3216,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3063,
											"end": 3222,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3063,
											"end": 3222,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3063,
											"end": 3222,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3228,
											"end": 3478,
											"name": "tag",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 3228,
											"end": 3478,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3335,
											"end": 3339,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3373,
											"end": 3375,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3362,
											"end": 3371,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3358,
											"end": 3376,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3350,
											"end": 3376,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3350,
											"end": 3376,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3386,
											"end": 3471,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "219"
										},
										{
											"begin": 3468,
											"end": 3469,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3457,
											"end": 3466,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3453,
											"end": 3470,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3444,
											"end": 3450,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3386,
											"end": 3471,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 3386,
											"end": 3471,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3386,
											"end": 3471,
											"name": "tag",
											"source": 6,
											"value": "219"
										},
										{
											"begin": 3386,
											"end": 3471,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3228,
											"end": 3478,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3228,
											"end": 3478,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3228,
											"end": 3478,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3228,
											"end": 3478,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3228,
											"end": 3478,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3484,
											"end": 3816,
											"name": "tag",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 3484,
											"end": 3816,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3605,
											"end": 3609,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3643,
											"end": 3645,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3632,
											"end": 3641,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3628,
											"end": 3646,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3620,
											"end": 3646,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3620,
											"end": 3646,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3656,
											"end": 3727,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "221"
										},
										{
											"begin": 3724,
											"end": 3725,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3713,
											"end": 3722,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3709,
											"end": 3726,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3700,
											"end": 3706,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3656,
											"end": 3727,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 3656,
											"end": 3727,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3656,
											"end": 3727,
											"name": "tag",
											"source": 6,
											"value": "221"
										},
										{
											"begin": 3656,
											"end": 3727,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3737,
											"end": 3809,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "222"
										},
										{
											"begin": 3805,
											"end": 3807,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3794,
											"end": 3803,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3790,
											"end": 3808,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3781,
											"end": 3787,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3737,
											"end": 3809,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 3737,
											"end": 3809,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3737,
											"end": 3809,
											"name": "tag",
											"source": 6,
											"value": "222"
										},
										{
											"begin": 3737,
											"end": 3809,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3484,
											"end": 3816,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 3484,
											"end": 3816,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3484,
											"end": 3816,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3484,
											"end": 3816,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3484,
											"end": 3816,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3484,
											"end": 3816,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3822,
											"end": 3991,
											"name": "tag",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 3822,
											"end": 3991,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3906,
											"end": 3917,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3940,
											"end": 3946,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3935,
											"end": 3938,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3928,
											"end": 3947,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3980,
											"end": 3984,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3975,
											"end": 3978,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3971,
											"end": 3985,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3956,
											"end": 3985,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3956,
											"end": 3985,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3822,
											"end": 3991,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3822,
											"end": 3991,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3822,
											"end": 3991,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3822,
											"end": 3991,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3822,
											"end": 3991,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3997,
											"end": 4179,
											"name": "tag",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 3997,
											"end": 4179,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4137,
											"end": 4171,
											"name": "PUSH",
											"source": 6,
											"value": "436861645065706543726F776473616C653A206E657720726174652069732030"
										},
										{
											"begin": 4133,
											"end": 4134,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4125,
											"end": 4131,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4121,
											"end": 4135,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4114,
											"end": 4172,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3997,
											"end": 4179,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3997,
											"end": 4179,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4185,
											"end": 4551,
											"name": "tag",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 4185,
											"end": 4551,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4327,
											"end": 4330,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4348,
											"end": 4415,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "226"
										},
										{
											"begin": 4412,
											"end": 4414,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4407,
											"end": 4410,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4348,
											"end": 4415,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 4348,
											"end": 4415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4348,
											"end": 4415,
											"name": "tag",
											"source": 6,
											"value": "226"
										},
										{
											"begin": 4348,
											"end": 4415,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4341,
											"end": 4415,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4341,
											"end": 4415,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4424,
											"end": 4517,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "227"
										},
										{
											"begin": 4513,
											"end": 4516,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4424,
											"end": 4517,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 4424,
											"end": 4517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4424,
											"end": 4517,
											"name": "tag",
											"source": 6,
											"value": "227"
										},
										{
											"begin": 4424,
											"end": 4517,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4542,
											"end": 4544,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4537,
											"end": 4540,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4533,
											"end": 4545,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4526,
											"end": 4545,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4526,
											"end": 4545,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4185,
											"end": 4551,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4185,
											"end": 4551,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4185,
											"end": 4551,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4185,
											"end": 4551,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4557,
											"end": 4976,
											"name": "tag",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 4557,
											"end": 4976,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4723,
											"end": 4727,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4761,
											"end": 4763,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4750,
											"end": 4759,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4746,
											"end": 4764,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4738,
											"end": 4764,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4738,
											"end": 4764,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4810,
											"end": 4819,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4804,
											"end": 4808,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4800,
											"end": 4820,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4796,
											"end": 4797,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4785,
											"end": 4794,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4781,
											"end": 4798,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4774,
											"end": 4821,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4838,
											"end": 4969,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "229"
										},
										{
											"begin": 4964,
											"end": 4968,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4838,
											"end": 4969,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 4838,
											"end": 4969,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4838,
											"end": 4969,
											"name": "tag",
											"source": 6,
											"value": "229"
										},
										{
											"begin": 4838,
											"end": 4969,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4830,
											"end": 4969,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4830,
											"end": 4969,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4557,
											"end": 4976,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4557,
											"end": 4976,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4557,
											"end": 4976,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4557,
											"end": 4976,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4982,
											"end": 5207,
											"name": "tag",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 4982,
											"end": 5207,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5122,
											"end": 5156,
											"name": "PUSH",
											"source": 6,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 5118,
											"end": 5119,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5110,
											"end": 5116,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5106,
											"end": 5120,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5099,
											"end": 5157,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5191,
											"end": 5199,
											"name": "PUSH",
											"source": 6,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5186,
											"end": 5188,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5178,
											"end": 5184,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5174,
											"end": 5189,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5167,
											"end": 5200,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4982,
											"end": 5207,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4982,
											"end": 5207,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5213,
											"end": 5579,
											"name": "tag",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 5213,
											"end": 5579,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5355,
											"end": 5358,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5376,
											"end": 5443,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "232"
										},
										{
											"begin": 5440,
											"end": 5442,
											"name": "PUSH",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 5435,
											"end": 5438,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5376,
											"end": 5443,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 5376,
											"end": 5443,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5376,
											"end": 5443,
											"name": "tag",
											"source": 6,
											"value": "232"
										},
										{
											"begin": 5376,
											"end": 5443,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5369,
											"end": 5443,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5369,
											"end": 5443,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5452,
											"end": 5545,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "233"
										},
										{
											"begin": 5541,
											"end": 5544,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5452,
											"end": 5545,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 5452,
											"end": 5545,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5452,
											"end": 5545,
											"name": "tag",
											"source": 6,
											"value": "233"
										},
										{
											"begin": 5452,
											"end": 5545,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5570,
											"end": 5572,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5565,
											"end": 5568,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5561,
											"end": 5573,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5554,
											"end": 5573,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5554,
											"end": 5573,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5213,
											"end": 5579,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5213,
											"end": 5579,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5213,
											"end": 5579,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5213,
											"end": 5579,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5585,
											"end": 6004,
											"name": "tag",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 5585,
											"end": 6004,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5751,
											"end": 5755,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5789,
											"end": 5791,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5778,
											"end": 5787,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5774,
											"end": 5792,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5766,
											"end": 5792,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5766,
											"end": 5792,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5838,
											"end": 5847,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5832,
											"end": 5836,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5828,
											"end": 5848,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5824,
											"end": 5825,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5813,
											"end": 5822,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5809,
											"end": 5826,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5802,
											"end": 5849,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5866,
											"end": 5997,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "235"
										},
										{
											"begin": 5992,
											"end": 5996,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5866,
											"end": 5997,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 5866,
											"end": 5997,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5866,
											"end": 5997,
											"name": "tag",
											"source": 6,
											"value": "235"
										},
										{
											"begin": 5866,
											"end": 5997,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5858,
											"end": 5997,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5858,
											"end": 5997,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5585,
											"end": 6004,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5585,
											"end": 6004,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5585,
											"end": 6004,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5585,
											"end": 6004,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6010,
											"end": 6191,
											"name": "tag",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 6010,
											"end": 6191,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6150,
											"end": 6183,
											"name": "PUSH",
											"source": 6,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 6146,
											"end": 6147,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6138,
											"end": 6144,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6134,
											"end": 6148,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6127,
											"end": 6184,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6010,
											"end": 6191,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6010,
											"end": 6191,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6197,
											"end": 6563,
											"name": "tag",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 6197,
											"end": 6563,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6339,
											"end": 6342,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6360,
											"end": 6427,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "238"
										},
										{
											"begin": 6424,
											"end": 6426,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 6419,
											"end": 6422,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6360,
											"end": 6427,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 6360,
											"end": 6427,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6360,
											"end": 6427,
											"name": "tag",
											"source": 6,
											"value": "238"
										},
										{
											"begin": 6360,
											"end": 6427,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6353,
											"end": 6427,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6353,
											"end": 6427,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6436,
											"end": 6529,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "239"
										},
										{
											"begin": 6525,
											"end": 6528,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6436,
											"end": 6529,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 6436,
											"end": 6529,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6436,
											"end": 6529,
											"name": "tag",
											"source": 6,
											"value": "239"
										},
										{
											"begin": 6436,
											"end": 6529,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6554,
											"end": 6556,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6549,
											"end": 6552,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6545,
											"end": 6557,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6538,
											"end": 6557,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6538,
											"end": 6557,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6197,
											"end": 6563,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6197,
											"end": 6563,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6197,
											"end": 6563,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6197,
											"end": 6563,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6569,
											"end": 6988,
											"name": "tag",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 6569,
											"end": 6988,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6735,
											"end": 6739,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6773,
											"end": 6775,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6762,
											"end": 6771,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6758,
											"end": 6776,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6750,
											"end": 6776,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6750,
											"end": 6776,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6822,
											"end": 6831,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6816,
											"end": 6820,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6812,
											"end": 6832,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6808,
											"end": 6809,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6797,
											"end": 6806,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6793,
											"end": 6810,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6786,
											"end": 6833,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6850,
											"end": 6981,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "241"
										},
										{
											"begin": 6976,
											"end": 6980,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6850,
											"end": 6981,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 6850,
											"end": 6981,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6850,
											"end": 6981,
											"name": "tag",
											"source": 6,
											"value": "241"
										},
										{
											"begin": 6850,
											"end": 6981,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6842,
											"end": 6981,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6842,
											"end": 6981,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6569,
											"end": 6988,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6569,
											"end": 6988,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6569,
											"end": 6988,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6569,
											"end": 6988,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6994,
											"end": 7231,
											"name": "tag",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 6994,
											"end": 7231,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7134,
											"end": 7168,
											"name": "PUSH",
											"source": 6,
											"value": "436861645065706543726F776473616C653A2062656E65666963696172792069"
										},
										{
											"begin": 7130,
											"end": 7131,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7122,
											"end": 7128,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7118,
											"end": 7132,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7111,
											"end": 7169,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7203,
											"end": 7223,
											"name": "PUSH",
											"source": 6,
											"value": "7320746865207A65726F20616464726573730000000000000000000000000000"
										},
										{
											"begin": 7198,
											"end": 7200,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7190,
											"end": 7196,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7186,
											"end": 7201,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7179,
											"end": 7224,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6994,
											"end": 7231,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6994,
											"end": 7231,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7237,
											"end": 7603,
											"name": "tag",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 7237,
											"end": 7603,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7379,
											"end": 7382,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7400,
											"end": 7467,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "244"
										},
										{
											"begin": 7464,
											"end": 7466,
											"name": "PUSH",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 7459,
											"end": 7462,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7400,
											"end": 7467,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 7400,
											"end": 7467,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7400,
											"end": 7467,
											"name": "tag",
											"source": 6,
											"value": "244"
										},
										{
											"begin": 7400,
											"end": 7467,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7393,
											"end": 7467,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7393,
											"end": 7467,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7476,
											"end": 7569,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "245"
										},
										{
											"begin": 7565,
											"end": 7568,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7476,
											"end": 7569,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 7476,
											"end": 7569,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7476,
											"end": 7569,
											"name": "tag",
											"source": 6,
											"value": "245"
										},
										{
											"begin": 7476,
											"end": 7569,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7594,
											"end": 7596,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7589,
											"end": 7592,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7585,
											"end": 7597,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7578,
											"end": 7597,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7578,
											"end": 7597,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7237,
											"end": 7603,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7237,
											"end": 7603,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7237,
											"end": 7603,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7237,
											"end": 7603,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7609,
											"end": 8028,
											"name": "tag",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 7609,
											"end": 8028,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7775,
											"end": 7779,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7813,
											"end": 7815,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7802,
											"end": 7811,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7798,
											"end": 7816,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7790,
											"end": 7816,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7790,
											"end": 7816,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7862,
											"end": 7871,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7856,
											"end": 7860,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7852,
											"end": 7872,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7848,
											"end": 7849,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7837,
											"end": 7846,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7833,
											"end": 7850,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7826,
											"end": 7873,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7890,
											"end": 8021,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "247"
										},
										{
											"begin": 8016,
											"end": 8020,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7890,
											"end": 8021,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 7890,
											"end": 8021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7890,
											"end": 8021,
											"name": "tag",
											"source": 6,
											"value": "247"
										},
										{
											"begin": 7890,
											"end": 8021,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7882,
											"end": 8021,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7882,
											"end": 8021,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7609,
											"end": 8028,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7609,
											"end": 8028,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7609,
											"end": 8028,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7609,
											"end": 8028,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8034,
											"end": 8254,
											"name": "tag",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 8034,
											"end": 8254,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8174,
											"end": 8208,
											"name": "PUSH",
											"source": 6,
											"value": "436861645065706543726F776473616C653A20776569416D6F756E7420697320"
										},
										{
											"begin": 8170,
											"end": 8171,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8162,
											"end": 8168,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8158,
											"end": 8172,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8151,
											"end": 8209,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8243,
											"end": 8246,
											"name": "PUSH",
											"source": 6,
											"value": "3000000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8238,
											"end": 8240,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8230,
											"end": 8236,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8226,
											"end": 8241,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8219,
											"end": 8247,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8034,
											"end": 8254,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8034,
											"end": 8254,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8260,
											"end": 8626,
											"name": "tag",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 8260,
											"end": 8626,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8402,
											"end": 8405,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8423,
											"end": 8490,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "250"
										},
										{
											"begin": 8487,
											"end": 8489,
											"name": "PUSH",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 8482,
											"end": 8485,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8423,
											"end": 8490,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 8423,
											"end": 8490,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8423,
											"end": 8490,
											"name": "tag",
											"source": 6,
											"value": "250"
										},
										{
											"begin": 8423,
											"end": 8490,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8416,
											"end": 8490,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8416,
											"end": 8490,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8499,
											"end": 8592,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "251"
										},
										{
											"begin": 8588,
											"end": 8591,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8499,
											"end": 8592,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 8499,
											"end": 8592,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8499,
											"end": 8592,
											"name": "tag",
											"source": 6,
											"value": "251"
										},
										{
											"begin": 8499,
											"end": 8592,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8617,
											"end": 8619,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8612,
											"end": 8615,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8608,
											"end": 8620,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8601,
											"end": 8620,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8601,
											"end": 8620,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8260,
											"end": 8626,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8260,
											"end": 8626,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8260,
											"end": 8626,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8260,
											"end": 8626,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8632,
											"end": 9051,
											"name": "tag",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 8632,
											"end": 9051,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8798,
											"end": 8802,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8836,
											"end": 8838,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8825,
											"end": 8834,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8821,
											"end": 8839,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8813,
											"end": 8839,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8813,
											"end": 8839,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8885,
											"end": 8894,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8879,
											"end": 8883,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8875,
											"end": 8895,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 8871,
											"end": 8872,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8860,
											"end": 8869,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8856,
											"end": 8873,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8849,
											"end": 8896,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8913,
											"end": 9044,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "253"
										},
										{
											"begin": 9039,
											"end": 9043,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8913,
											"end": 9044,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 8913,
											"end": 9044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8913,
											"end": 9044,
											"name": "tag",
											"source": 6,
											"value": "253"
										},
										{
											"begin": 8913,
											"end": 9044,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8905,
											"end": 9044,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8905,
											"end": 9044,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8632,
											"end": 9051,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8632,
											"end": 9051,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8632,
											"end": 9051,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8632,
											"end": 9051,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9057,
											"end": 9237,
											"name": "tag",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 9057,
											"end": 9237,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9105,
											"end": 9182,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9102,
											"end": 9103,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9095,
											"end": 9183,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9202,
											"end": 9206,
											"name": "PUSH",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 9199,
											"end": 9200,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 9192,
											"end": 9207,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9226,
											"end": 9230,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 9223,
											"end": 9224,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9216,
											"end": 9231,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 9243,
											"end": 9434,
											"name": "tag",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 9243,
											"end": 9434,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9283,
											"end": 9286,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9302,
											"end": 9322,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "256"
										},
										{
											"begin": 9320,
											"end": 9321,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9302,
											"end": 9322,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 9302,
											"end": 9322,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9302,
											"end": 9322,
											"name": "tag",
											"source": 6,
											"value": "256"
										},
										{
											"begin": 9302,
											"end": 9322,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9297,
											"end": 9322,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9297,
											"end": 9322,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9336,
											"end": 9356,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "257"
										},
										{
											"begin": 9354,
											"end": 9355,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9336,
											"end": 9356,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 9336,
											"end": 9356,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9336,
											"end": 9356,
											"name": "tag",
											"source": 6,
											"value": "257"
										},
										{
											"begin": 9336,
											"end": 9356,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9331,
											"end": 9356,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 9331,
											"end": 9356,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9379,
											"end": 9380,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9376,
											"end": 9377,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9372,
											"end": 9381,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9365,
											"end": 9381,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9365,
											"end": 9381,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9400,
											"end": 9403,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9397,
											"end": 9398,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9394,
											"end": 9404,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 9391,
											"end": 9427,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 9391,
											"end": 9427,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "258"
										},
										{
											"begin": 9391,
											"end": 9427,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9407,
											"end": 9425,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "259"
										},
										{
											"begin": 9407,
											"end": 9425,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 9407,
											"end": 9425,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9407,
											"end": 9425,
											"name": "tag",
											"source": 6,
											"value": "259"
										},
										{
											"begin": 9407,
											"end": 9425,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9391,
											"end": 9427,
											"name": "tag",
											"source": 6,
											"value": "258"
										},
										{
											"begin": 9391,
											"end": 9427,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9243,
											"end": 9434,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 9243,
											"end": 9434,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9243,
											"end": 9434,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9243,
											"end": 9434,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9243,
											"end": 9434,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9440,
											"end": 9622,
											"name": "tag",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 9440,
											"end": 9622,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9580,
											"end": 9614,
											"name": "PUSH",
											"source": 6,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 9576,
											"end": 9577,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9568,
											"end": 9574,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9564,
											"end": 9578,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9557,
											"end": 9615,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9440,
											"end": 9622,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9440,
											"end": 9622,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9628,
											"end": 9994,
											"name": "tag",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 9628,
											"end": 9994,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9770,
											"end": 9773,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9791,
											"end": 9858,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "262"
										},
										{
											"begin": 9855,
											"end": 9857,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9850,
											"end": 9853,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9791,
											"end": 9858,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 9791,
											"end": 9858,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9791,
											"end": 9858,
											"name": "tag",
											"source": 6,
											"value": "262"
										},
										{
											"begin": 9791,
											"end": 9858,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9784,
											"end": 9858,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9784,
											"end": 9858,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9867,
											"end": 9960,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "263"
										},
										{
											"begin": 9956,
											"end": 9959,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9867,
											"end": 9960,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 9867,
											"end": 9960,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9867,
											"end": 9960,
											"name": "tag",
											"source": 6,
											"value": "263"
										},
										{
											"begin": 9867,
											"end": 9960,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9985,
											"end": 9987,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9980,
											"end": 9983,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9976,
											"end": 9988,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9969,
											"end": 9988,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9969,
											"end": 9988,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9628,
											"end": 9994,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9628,
											"end": 9994,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9628,
											"end": 9994,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9628,
											"end": 9994,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10000,
											"end": 10419,
											"name": "tag",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 10000,
											"end": 10419,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10166,
											"end": 10170,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10204,
											"end": 10206,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10193,
											"end": 10202,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10189,
											"end": 10207,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10181,
											"end": 10207,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10181,
											"end": 10207,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10253,
											"end": 10262,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10247,
											"end": 10251,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10243,
											"end": 10263,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 10239,
											"end": 10240,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10228,
											"end": 10237,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10224,
											"end": 10241,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10217,
											"end": 10264,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10281,
											"end": 10412,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "265"
										},
										{
											"begin": 10407,
											"end": 10411,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10281,
											"end": 10412,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 10281,
											"end": 10412,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10281,
											"end": 10412,
											"name": "tag",
											"source": 6,
											"value": "265"
										},
										{
											"begin": 10281,
											"end": 10412,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10273,
											"end": 10412,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10273,
											"end": 10412,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10000,
											"end": 10419,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10000,
											"end": 10419,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10000,
											"end": 10419,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10000,
											"end": 10419,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10425,
											"end": 10835,
											"name": "tag",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 10425,
											"end": 10835,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10465,
											"end": 10472,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10488,
											"end": 10508,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "267"
										},
										{
											"begin": 10506,
											"end": 10507,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10488,
											"end": 10508,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 10488,
											"end": 10508,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10488,
											"end": 10508,
											"name": "tag",
											"source": 6,
											"value": "267"
										},
										{
											"begin": 10488,
											"end": 10508,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10483,
											"end": 10508,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10483,
											"end": 10508,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10522,
											"end": 10542,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "268"
										},
										{
											"begin": 10540,
											"end": 10541,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10522,
											"end": 10542,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 10522,
											"end": 10542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10522,
											"end": 10542,
											"name": "tag",
											"source": 6,
											"value": "268"
										},
										{
											"begin": 10522,
											"end": 10542,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10517,
											"end": 10542,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10517,
											"end": 10542,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10577,
											"end": 10578,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10574,
											"end": 10575,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10570,
											"end": 10579,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 10599,
											"end": 10629,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "269"
										},
										{
											"begin": 10617,
											"end": 10628,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10599,
											"end": 10629,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 10599,
											"end": 10629,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10599,
											"end": 10629,
											"name": "tag",
											"source": 6,
											"value": "269"
										},
										{
											"begin": 10599,
											"end": 10629,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10588,
											"end": 10629,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10588,
											"end": 10629,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10778,
											"end": 10779,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10769,
											"end": 10776,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10765,
											"end": 10780,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 10762,
											"end": 10763,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 10759,
											"end": 10781,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 10739,
											"end": 10740,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10732,
											"end": 10741,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10712,
											"end": 10795,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 10689,
											"end": 10828,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "270"
										},
										{
											"begin": 10689,
											"end": 10828,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10808,
											"end": 10826,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "271"
										},
										{
											"begin": 10808,
											"end": 10826,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 10808,
											"end": 10826,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10808,
											"end": 10826,
											"name": "tag",
											"source": 6,
											"value": "271"
										},
										{
											"begin": 10808,
											"end": 10826,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10689,
											"end": 10828,
											"name": "tag",
											"source": 6,
											"value": "270"
										},
										{
											"begin": 10689,
											"end": 10828,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10473,
											"end": 10835,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10425,
											"end": 10835,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10425,
											"end": 10835,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10425,
											"end": 10835,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10425,
											"end": 10835,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10425,
											"end": 10835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10841,
											"end": 11283,
											"name": "tag",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 10841,
											"end": 11283,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10990,
											"end": 10994,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11028,
											"end": 11030,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 11017,
											"end": 11026,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11013,
											"end": 11031,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11005,
											"end": 11031,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11005,
											"end": 11031,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11041,
											"end": 11112,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "273"
										},
										{
											"begin": 11109,
											"end": 11110,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11098,
											"end": 11107,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11094,
											"end": 11111,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11085,
											"end": 11091,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 11041,
											"end": 11112,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 11041,
											"end": 11112,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11041,
											"end": 11112,
											"name": "tag",
											"source": 6,
											"value": "273"
										},
										{
											"begin": 11041,
											"end": 11112,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11122,
											"end": 11194,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "274"
										},
										{
											"begin": 11190,
											"end": 11192,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11179,
											"end": 11188,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11175,
											"end": 11193,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11166,
											"end": 11172,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 11122,
											"end": 11194,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 11122,
											"end": 11194,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11122,
											"end": 11194,
											"name": "tag",
											"source": 6,
											"value": "274"
										},
										{
											"begin": 11122,
											"end": 11194,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11204,
											"end": 11276,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "275"
										},
										{
											"begin": 11272,
											"end": 11274,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 11261,
											"end": 11270,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11257,
											"end": 11275,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11248,
											"end": 11254,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 11204,
											"end": 11276,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 11204,
											"end": 11276,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11204,
											"end": 11276,
											"name": "tag",
											"source": 6,
											"value": "275"
										},
										{
											"begin": 11204,
											"end": 11276,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10841,
											"end": 11283,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 10841,
											"end": 11283,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 10841,
											"end": 11283,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10841,
											"end": 11283,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10841,
											"end": 11283,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10841,
											"end": 11283,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10841,
											"end": 11283,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11289,
											"end": 11379,
											"name": "tag",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 11289,
											"end": 11379,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11323,
											"end": 11330,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11366,
											"end": 11371,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11359,
											"end": 11372,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 11352,
											"end": 11373,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 11341,
											"end": 11373,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11341,
											"end": 11373,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11289,
											"end": 11379,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11289,
											"end": 11379,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11289,
											"end": 11379,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11289,
											"end": 11379,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11385,
											"end": 11501,
											"name": "tag",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 11385,
											"end": 11501,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11455,
											"end": 11476,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "278"
										},
										{
											"begin": 11470,
											"end": 11475,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11455,
											"end": 11476,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 11455,
											"end": 11476,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11455,
											"end": 11476,
											"name": "tag",
											"source": 6,
											"value": "278"
										},
										{
											"begin": 11455,
											"end": 11476,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11448,
											"end": 11453,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11445,
											"end": 11477,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 11435,
											"end": 11495,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "279"
										},
										{
											"begin": 11435,
											"end": 11495,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 11491,
											"end": 11492,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11488,
											"end": 11489,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 11481,
											"end": 11493,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 11435,
											"end": 11495,
											"name": "tag",
											"source": 6,
											"value": "279"
										},
										{
											"begin": 11435,
											"end": 11495,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11385,
											"end": 11501,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11385,
											"end": 11501,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11507,
											"end": 11644,
											"name": "tag",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 11507,
											"end": 11644,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11561,
											"end": 11566,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11592,
											"end": 11598,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11586,
											"end": 11599,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 11577,
											"end": 11599,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11577,
											"end": 11599,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11608,
											"end": 11638,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "281"
										},
										{
											"begin": 11632,
											"end": 11637,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11608,
											"end": 11638,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 11608,
											"end": 11638,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11608,
											"end": 11638,
											"name": "tag",
											"source": 6,
											"value": "281"
										},
										{
											"begin": 11608,
											"end": 11638,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11507,
											"end": 11644,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 11507,
											"end": 11644,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11507,
											"end": 11644,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11507,
											"end": 11644,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11507,
											"end": 11644,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11650,
											"end": 11995,
											"name": "tag",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 11650,
											"end": 11995,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11717,
											"end": 11723,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11766,
											"end": 11768,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11754,
											"end": 11763,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11745,
											"end": 11752,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 11741,
											"end": 11764,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 11737,
											"end": 11769,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 11734,
											"end": 11853,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 11734,
											"end": 11853,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "283"
										},
										{
											"begin": 11734,
											"end": 11853,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 11772,
											"end": 11851,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "284"
										},
										{
											"begin": 11772,
											"end": 11851,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 11772,
											"end": 11851,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11772,
											"end": 11851,
											"name": "tag",
											"source": 6,
											"value": "284"
										},
										{
											"begin": 11772,
											"end": 11851,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11734,
											"end": 11853,
											"name": "tag",
											"source": 6,
											"value": "283"
										},
										{
											"begin": 11734,
											"end": 11853,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11892,
											"end": 11893,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11917,
											"end": 11978,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "285"
										},
										{
											"begin": 11970,
											"end": 11977,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 11961,
											"end": 11967,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11950,
											"end": 11959,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 11946,
											"end": 11968,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11917,
											"end": 11978,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 11917,
											"end": 11978,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11917,
											"end": 11978,
											"name": "tag",
											"source": 6,
											"value": "285"
										},
										{
											"begin": 11917,
											"end": 11978,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11907,
											"end": 11978,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11907,
											"end": 11978,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11863,
											"end": 11988,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11650,
											"end": 11995,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 11650,
											"end": 11995,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11650,
											"end": 11995,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11650,
											"end": 11995,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11650,
											"end": 11995,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"contracts/ChadPepeCrowdsale.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"buyTokens(address)": "ec8ac4d8",
							"owner()": "8da5cb5b",
							"rate()": "2c4e722e",
							"renounceOwnership()": "715018a6",
							"setRate(uint256)": "34fcf437",
							"token()": "fc0c546a",
							"transferOwnership(address)": "f2fde38b",
							"weiRaised()": "4042b66f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_rate\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"purchaser\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensPurchased\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"}],\"name\":\"buyTokens\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newRate\",\"type\":\"uint256\"}],\"name\":\"setRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"weiRaised\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ChadPepeCrowdsale.sol\":\"ChadPepeCrowdsale\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x190dd6f8d592b7e4e930feb7f4313aeb8e1c4ad3154c27ce1cf6a512fc30d8cc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ce8dfb62d0c4fa260d6eec8f1cd47f5f2a044e11bde5b31d18072fa6e7d9010\",\"dweb:/ipfs/QmTyFztU3tLEcEDnqqiaW4UJetqsU77LXc6pjc9oTXCK5u\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]},\"contracts/ChadPepeCrowdsale.sol\":{\"keccak256\":\"0xc1035ea57cf1b04b235aff35788f9398c5fa639099748277213aa15c580a4b7e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b9c3962c004ea95e6cb726826a2d21aa9c6564d287edafe5fdaee1ca379fbb55\",\"dweb:/ipfs/QmVtd641VPKL5PUmnWPVN5y9o3oXEw3p25mmK7ui5Gm3eU\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "contracts/ChadPepeCrowdsale.sol:ChadPepeCrowdsale",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 123,
								"contract": "contracts/ChadPepeCrowdsale.sol:ChadPepeCrowdsale",
								"label": "_status",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 594,
								"contract": "contracts/ChadPepeCrowdsale.sol:ChadPepeCrowdsale",
								"label": "token",
								"offset": 0,
								"slot": "2",
								"type": "t_contract(IERC20)244"
							},
							{
								"astId": 596,
								"contract": "contracts/ChadPepeCrowdsale.sol:ChadPepeCrowdsale",
								"label": "rate",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 598,
								"contract": "contracts/ChadPepeCrowdsale.sol:ChadPepeCrowdsale",
								"label": "weiRaised",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(IERC20)244": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							266
						],
						"Ownable": [
							112
						]
					},
					"id": 113,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "102:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 113,
							"sourceUnit": 267,
							"src": "127:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nameLocations": [
											"683:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 266,
										"src": "683:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "683:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "159:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 112,
							"linearizedBaseContracts": [
								112,
								266
							],
							"name": "Ownable",
							"nameLocation": "672:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "713:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 112,
									"src": "697:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "697:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 13,
									"name": "OwnershipTransferred",
									"nameLocation": "732:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "769:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "753:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "753:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "800:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "784:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "784:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "752:57:0"
									},
									"src": "726:84:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "926:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 18,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 256,
																"src": "955:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "955:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "936:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "936:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "936:32:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "816:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "923:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "926:0:0"
									},
									"scope": 112,
									"src": "912:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 30,
										"nodeType": "Block",
										"src": "1084:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 26,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "1094:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 27,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1094:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 28,
												"nodeType": "ExpressionStatement",
												"src": "1094:13:0"
											},
											{
												"id": 29,
												"nodeType": "PlaceholderStatement",
												"src": "1117:1:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "981:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 31,
									"name": "onlyOwner",
									"nameLocation": "1072:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1081:2:0"
									},
									"src": "1063:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "1256:30:0",
										"statements": [
											{
												"expression": {
													"id": 37,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1273:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 36,
												"id": 38,
												"nodeType": "Return",
												"src": "1266:13:0"
											}
										]
									},
									"documentation": {
										"id": 32,
										"nodeType": "StructuredDocumentation",
										"src": "1131:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 40,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1210:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1215:2:0"
									},
									"returnParameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "1247:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1247:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1246:9:0"
									},
									"scope": 112,
									"src": "1201:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "1404:85:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 49,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 45,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "1422:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 46,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1422:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 47,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 256,
																	"src": "1433:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 48,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1433:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1422:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 50,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1447:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 44,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1414:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1414:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "1414:68:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "1292:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1368:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1379:2:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1404:0:0"
									},
									"scope": 112,
									"src": "1359:130:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 67,
										"nodeType": "Block",
										"src": "1885:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 63,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1922:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 62,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1914:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 61,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1914:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1914:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 60,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "1895:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1895:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 66,
												"nodeType": "ExpressionStatement",
												"src": "1895:30:0"
											}
										]
									},
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1495:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 68,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 58,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 57,
												"name": "onlyOwner",
												"nameLocations": [
													"1875:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1875:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1875:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1840:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1857:2:0"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1885:0:0"
									},
									"scope": 112,
									"src": "1831:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 90,
										"nodeType": "Block",
										"src": "2151:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 82,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 77,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 71,
																"src": "2169:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 80,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2189:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 79,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2181:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 78,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2181:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 81,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2181:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2169:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 83,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2193:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 76,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2161:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2161:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 85,
												"nodeType": "ExpressionStatement",
												"src": "2161:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 87,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 71,
															"src": "2263:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 86,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "2244:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2244:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 89,
												"nodeType": "ExpressionStatement",
												"src": "2244:28:0"
											}
										]
									},
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "1938:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 91,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 74,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 73,
												"name": "onlyOwner",
												"nameLocations": [
													"2141:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2141:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2141:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2090:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2116:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "2108:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2108:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2107:18:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2151:0:0"
									},
									"scope": 112,
									"src": "2081:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "2496:124:0",
										"statements": [
											{
												"assignments": [
													98
												],
												"declarations": [
													{
														"constant": false,
														"id": 98,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2514:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 110,
														"src": "2506:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 97,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2506:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 100,
												"initialValue": {
													"id": 99,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "2525:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2506:25:0"
											},
											{
												"expression": {
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 101,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2541:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 102,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 94,
														"src": "2550:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2541:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 104,
												"nodeType": "ExpressionStatement",
												"src": "2541:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 106,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 98,
															"src": "2594:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 107,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "2604:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 105,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2573:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2573:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 109,
												"nodeType": "EmitStatement",
												"src": "2568:45:0"
											}
										]
									},
									"documentation": {
										"id": 92,
										"nodeType": "StructuredDocumentation",
										"src": "2285:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2442:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2469:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "2461:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 93,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2461:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2460:18:0"
									},
									"returnParameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2496:0:0"
									},
									"scope": 112,
									"src": "2433:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 113,
							"src": "654:1968:0",
							"usedErrors": []
						}
					],
					"src": "102:2521:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							166
						]
					},
					"id": 167,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 114,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 115,
								"nodeType": "StructuredDocumentation",
								"src": "137:750:1",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 166,
							"linearizedBaseContracts": [
								166
							],
							"name": "ReentrancyGuard",
							"nameLocation": "906:15:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 118,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1701:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 166,
									"src": "1676:41:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 116,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1676:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 117,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1716:1:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 121,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1748:8:1",
									"nodeType": "VariableDeclaration",
									"scope": 166,
									"src": "1723:37:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 119,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1723:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 120,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1759:1:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 123,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1783:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 166,
									"src": "1767:23:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 122,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1767:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 130,
										"nodeType": "Block",
										"src": "1811:39:1",
										"statements": [
											{
												"expression": {
													"id": 128,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 126,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 123,
														"src": "1821:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 127,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 118,
														"src": "1831:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1821:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 129,
												"nodeType": "ExpressionStatement",
												"src": "1821:22:1"
											}
										]
									},
									"id": 131,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 124,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1808:2:1"
									},
									"returnParameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1811:0:1"
									},
									"scope": 166,
									"src": "1797:53:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 141,
										"nodeType": "Block",
										"src": "2251:79:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 134,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 157,
														"src": "2261:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 135,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2261:21:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 136,
												"nodeType": "ExpressionStatement",
												"src": "2261:21:1"
											},
											{
												"id": 137,
												"nodeType": "PlaceholderStatement",
												"src": "2292:1:1"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 138,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 165,
														"src": "2303:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 139,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2303:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 140,
												"nodeType": "ExpressionStatement",
												"src": "2303:20:1"
											}
										]
									},
									"documentation": {
										"id": 132,
										"nodeType": "StructuredDocumentation",
										"src": "1856:366:1",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 142,
									"name": "nonReentrant",
									"nameLocation": "2236:12:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 133,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2248:2:1"
									},
									"src": "2227:103:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 156,
										"nodeType": "Block",
										"src": "2375:248:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 148,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 146,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 123,
																"src": "2468:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 147,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 121,
																"src": "2479:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2468:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 149,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2489:33:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 145,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2460:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 150,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:63:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 151,
												"nodeType": "ExpressionStatement",
												"src": "2460:63:1"
											},
											{
												"expression": {
													"id": 154,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 152,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 123,
														"src": "2598:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 153,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 121,
														"src": "2608:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2598:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 155,
												"nodeType": "ExpressionStatement",
												"src": "2598:18:1"
											}
										]
									},
									"id": 157,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2345:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2364:2:1"
									},
									"returnParameters": {
										"id": 144,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2375:0:1"
									},
									"scope": 166,
									"src": "2336:287:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 164,
										"nodeType": "Block",
										"src": "2667:171:1",
										"statements": [
											{
												"expression": {
													"id": 162,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 160,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 123,
														"src": "2809:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 161,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 118,
														"src": "2819:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2809:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 163,
												"nodeType": "ExpressionStatement",
												"src": "2809:22:1"
											}
										]
									},
									"id": 165,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2638:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2656:2:1"
									},
									"returnParameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2667:0:1"
									},
									"scope": 166,
									"src": "2629:209:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 167,
							"src": "888:1952:1",
							"usedErrors": []
						}
					],
					"src": "112:2729:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							244
						]
					},
					"id": 245,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 168,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 169,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:2",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 244,
							"linearizedBaseContracts": [
								244
							],
							"name": "IERC20",
							"nameLocation": "212:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 178,
									"name": "Transfer",
									"nameLocation": "394:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "403:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "425:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 173,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "445:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:2"
									},
									"src": "388:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 187,
									"name": "Approval",
									"nameLocation": "625:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 187,
												"src": "634:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 183,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 187,
												"src": "657:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 182,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 185,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 187,
												"src": "682:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 184,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:2"
									},
									"src": "619:78:2"
								},
								{
									"documentation": {
										"id": 188,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:2",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 193,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:2"
									},
									"returnParameters": {
										"id": 192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 191,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "820:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 190,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:2"
									},
									"scope": 244,
									"src": "774:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 194,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:2",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 201,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 196,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 201,
												"src": "931:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 195,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:2"
									},
									"returnParameters": {
										"id": 200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 201,
												"src": "971:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 198,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:2"
									},
									"scope": 244,
									"src": "912:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 202,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:2",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 211,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 207,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "1211:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 203,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 206,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "1223:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 205,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:2"
									},
									"returnParameters": {
										"id": 210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 209,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "1257:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 208,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:2"
									},
									"scope": 244,
									"src": "1193:70:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 212,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 221,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "1557:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 213,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 216,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "1572:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 215,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:2"
									},
									"returnParameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "1612:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:2"
									},
									"scope": 244,
									"src": "1538:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 222,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:2",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 231,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "2291:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 223,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "2308:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 225,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:2"
									},
									"returnParameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "2342:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 228,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:2"
									},
									"scope": 244,
									"src": "2274:74:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:2",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 243,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2685:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "2677:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2707:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "2699:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 235,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 238,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2727:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "2719:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 237,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:72:2"
									},
									"returnParameters": {
										"id": 242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "2758:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 240,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2758:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2757:6:2"
									},
									"scope": 244,
									"src": "2646:118:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 245,
							"src": "202:2564:2",
							"usedErrors": []
						}
					],
					"src": "106:2661:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							266
						]
					},
					"id": 267,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 246,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:3"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 247,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:3",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 266,
							"linearizedBaseContracts": [
								266
							],
							"name": "Context",
							"nameLocation": "626:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 255,
										"nodeType": "Block",
										"src": "702:34:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 252,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "723:6:3",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 251,
												"id": 254,
												"nodeType": "Return",
												"src": "712:17:3"
											}
										]
									},
									"id": 256,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:3"
									},
									"returnParameters": {
										"id": 251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 250,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "693:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 249,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:3"
									},
									"scope": 266,
									"src": "640:96:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 264,
										"nodeType": "Block",
										"src": "809:32:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 261,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 262,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "830:4:3",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 260,
												"id": 263,
												"nodeType": "Return",
												"src": "819:15:3"
											}
										]
									},
									"id": 265,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 257,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:3"
									},
									"returnParameters": {
										"id": 260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 265,
												"src": "793:14:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 258,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:3"
									},
									"scope": 266,
									"src": "742:99:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 267,
							"src": "608:235:3",
							"usedErrors": []
						}
					],
					"src": "86:758:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							578
						]
					},
					"id": 579,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 268,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "107:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 269,
								"nodeType": "StructuredDocumentation",
								"src": "285:196:4",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 578,
							"linearizedBaseContracts": [
								578
							],
							"name": "SafeMath",
							"nameLocation": "490:8:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 300,
										"nodeType": "Block",
										"src": "717:140:4",
										"statements": [
											{
												"id": 299,
												"nodeType": "UncheckedBlock",
												"src": "727:124:4",
												"statements": [
													{
														"assignments": [
															282
														],
														"declarations": [
															{
																"constant": false,
																"id": 282,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "759:1:4",
																"nodeType": "VariableDeclaration",
																"scope": 299,
																"src": "751:9:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 281,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "751:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 286,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 285,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 283,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 272,
																"src": "763:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 284,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 274,
																"src": "767:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "763:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "751:17:4"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 289,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 287,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 282,
																"src": "786:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 288,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 272,
																"src": "790:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "786:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 294,
														"nodeType": "IfStatement",
														"src": "782:28:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 290,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "801:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 291,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "808:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 292,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "800:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 280,
															"id": 293,
															"nodeType": "Return",
															"src": "793:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 295,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "832:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 296,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 282,
																	"src": "838:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 297,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "831:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 280,
														"id": 298,
														"nodeType": "Return",
														"src": "824:16:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 270,
										"nodeType": "StructuredDocumentation",
										"src": "505:131:4",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 301,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "650:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 272,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "665:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 301,
												"src": "657:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 271,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "676:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 301,
												"src": "668:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 273,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "656:22:4"
									},
									"returnParameters": {
										"id": 280,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 277,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 301,
												"src": "702:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 276,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "702:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 301,
												"src": "708:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "708:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "701:15:4"
									},
									"scope": 578,
									"src": "641:216:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 328,
										"nodeType": "Block",
										"src": "1078:113:4",
										"statements": [
											{
												"id": 327,
												"nodeType": "UncheckedBlock",
												"src": "1088:97:4",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 315,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 313,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 306,
																"src": "1116:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 314,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 304,
																"src": "1120:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1116:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 320,
														"nodeType": "IfStatement",
														"src": "1112:28:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 316,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1131:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 317,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1138:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 318,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1130:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 312,
															"id": 319,
															"nodeType": "Return",
															"src": "1123:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 321,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1162:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 324,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 322,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 304,
																		"src": "1168:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 323,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 306,
																		"src": "1172:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1168:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 325,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1161:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 312,
														"id": 326,
														"nodeType": "Return",
														"src": "1154:20:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 302,
										"nodeType": "StructuredDocumentation",
										"src": "863:134:4",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 329,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "1011:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 304,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1026:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 329,
												"src": "1018:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 303,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1018:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 306,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1037:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 329,
												"src": "1029:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 305,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1029:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1017:22:4"
									},
									"returnParameters": {
										"id": 312,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 329,
												"src": "1063:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 308,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1063:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 311,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 329,
												"src": "1069:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 310,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1069:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1062:15:4"
									},
									"scope": 578,
									"src": "1002:189:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 370,
										"nodeType": "Block",
										"src": "1415:417:4",
										"statements": [
											{
												"id": 369,
												"nodeType": "UncheckedBlock",
												"src": "1425:401:4",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 343,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 341,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 332,
																"src": "1683:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 342,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1688:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1683:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 348,
														"nodeType": "IfStatement",
														"src": "1679:28:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 344,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1699:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 345,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1705:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 346,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1698:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 340,
															"id": 347,
															"nodeType": "Return",
															"src": "1691:16:4"
														}
													},
													{
														"assignments": [
															350
														],
														"declarations": [
															{
																"constant": false,
																"id": 350,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1729:1:4",
																"nodeType": "VariableDeclaration",
																"scope": 369,
																"src": "1721:9:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 349,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1721:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 354,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 353,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 351,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 332,
																"src": "1733:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 352,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 334,
																"src": "1737:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1733:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1721:17:4"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 359,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 357,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 355,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 350,
																	"src": "1756:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 356,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 332,
																	"src": "1760:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1756:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 358,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 334,
																"src": "1765:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1756:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 364,
														"nodeType": "IfStatement",
														"src": "1752:33:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 360,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1776:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 361,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1783:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 362,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1775:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 340,
															"id": 363,
															"nodeType": "Return",
															"src": "1768:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 365,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1807:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 366,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 350,
																	"src": "1813:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 367,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1806:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 340,
														"id": 368,
														"nodeType": "Return",
														"src": "1799:16:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 330,
										"nodeType": "StructuredDocumentation",
										"src": "1197:137:4",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 371,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1348:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 335,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 332,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1363:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 371,
												"src": "1355:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 331,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1355:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 334,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1374:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 371,
												"src": "1366:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 333,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1366:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1354:22:4"
									},
									"returnParameters": {
										"id": 340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 337,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 371,
												"src": "1400:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 336,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1400:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 371,
												"src": "1406:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 338,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1406:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1399:15:4"
									},
									"scope": 578,
									"src": "1339:493:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 398,
										"nodeType": "Block",
										"src": "2057:114:4",
										"statements": [
											{
												"id": 397,
												"nodeType": "UncheckedBlock",
												"src": "2067:98:4",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 385,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 383,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 376,
																"src": "2095:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 384,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2100:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2095:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 390,
														"nodeType": "IfStatement",
														"src": "2091:29:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 386,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2111:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 387,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2118:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 388,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2110:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 382,
															"id": 389,
															"nodeType": "Return",
															"src": "2103:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 391,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2142:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 394,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 392,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 374,
																		"src": "2148:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 393,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 376,
																		"src": "2152:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2148:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 395,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2141:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 382,
														"id": 396,
														"nodeType": "Return",
														"src": "2134:20:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 372,
										"nodeType": "StructuredDocumentation",
										"src": "1838:138:4",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 399,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1990:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 377,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2005:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "1997:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 373,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1997:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 376,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2016:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "2008:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 375,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1996:22:4"
									},
									"returnParameters": {
										"id": 382,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 379,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "2042:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 378,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2042:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 381,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "2048:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 380,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2048:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2041:15:4"
									},
									"scope": 578,
									"src": "1981:190:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 426,
										"nodeType": "Block",
										"src": "2406:114:4",
										"statements": [
											{
												"id": 425,
												"nodeType": "UncheckedBlock",
												"src": "2416:98:4",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 413,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 411,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 404,
																"src": "2444:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 412,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2449:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2444:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 418,
														"nodeType": "IfStatement",
														"src": "2440:29:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 414,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2460:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 415,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2467:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 416,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2459:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 410,
															"id": 417,
															"nodeType": "Return",
															"src": "2452:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 419,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2491:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 422,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 420,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 402,
																		"src": "2497:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 421,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 404,
																		"src": "2501:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2497:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 423,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2490:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 410,
														"id": 424,
														"nodeType": "Return",
														"src": "2483:20:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 400,
										"nodeType": "StructuredDocumentation",
										"src": "2177:148:4",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 427,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2339:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 405,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 402,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2354:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 427,
												"src": "2346:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 401,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2346:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 404,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2365:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 427,
												"src": "2357:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 403,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2357:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2345:22:4"
									},
									"returnParameters": {
										"id": 410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 407,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 427,
												"src": "2391:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 406,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2391:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 409,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 427,
												"src": "2397:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 408,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2397:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2390:15:4"
									},
									"scope": 578,
									"src": "2330:190:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 441,
										"nodeType": "Block",
										"src": "2822:29:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 437,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 430,
														"src": "2839:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 438,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 432,
														"src": "2843:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2839:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 436,
												"id": 440,
												"nodeType": "Return",
												"src": "2832:12:4"
											}
										]
									},
									"documentation": {
										"id": 428,
										"nodeType": "StructuredDocumentation",
										"src": "2526:224:4",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 442,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2764:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 433,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 430,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2776:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "2768:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 429,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2768:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 432,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2787:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "2779:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 431,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2779:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2767:22:4"
									},
									"returnParameters": {
										"id": 436,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 435,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "2813:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 434,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2813:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2812:9:4"
									},
									"scope": 578,
									"src": "2755:96:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 456,
										"nodeType": "Block",
										"src": "3189:29:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 454,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 452,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 445,
														"src": "3206:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 453,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 447,
														"src": "3210:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3206:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 451,
												"id": 455,
												"nodeType": "Return",
												"src": "3199:12:4"
											}
										]
									},
									"documentation": {
										"id": 443,
										"nodeType": "StructuredDocumentation",
										"src": "2857:260:4",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 457,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3131:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 448,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 445,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3143:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 457,
												"src": "3135:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 444,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3135:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 447,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3154:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 457,
												"src": "3146:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 446,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3146:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3134:22:4"
									},
									"returnParameters": {
										"id": 451,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 450,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 457,
												"src": "3180:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 449,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3180:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3179:9:4"
									},
									"scope": 578,
									"src": "3122:96:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 471,
										"nodeType": "Block",
										"src": "3532:29:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 469,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 467,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 460,
														"src": "3549:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 468,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 462,
														"src": "3553:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3549:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 466,
												"id": 470,
												"nodeType": "Return",
												"src": "3542:12:4"
											}
										]
									},
									"documentation": {
										"id": 458,
										"nodeType": "StructuredDocumentation",
										"src": "3224:236:4",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 472,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3474:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 463,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3486:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 472,
												"src": "3478:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 459,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3478:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 462,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3497:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 472,
												"src": "3489:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 461,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3489:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3477:22:4"
									},
									"returnParameters": {
										"id": 466,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 465,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 472,
												"src": "3523:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 464,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3523:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3522:9:4"
									},
									"scope": 578,
									"src": "3465:96:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 486,
										"nodeType": "Block",
										"src": "3917:29:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 484,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 482,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 475,
														"src": "3934:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 483,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 477,
														"src": "3938:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3934:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 481,
												"id": 485,
												"nodeType": "Return",
												"src": "3927:12:4"
											}
										]
									},
									"documentation": {
										"id": 473,
										"nodeType": "StructuredDocumentation",
										"src": "3567:278:4",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 487,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3859:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 478,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 475,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3871:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 487,
												"src": "3863:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 474,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3863:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 477,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3882:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 487,
												"src": "3874:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 476,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3874:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3862:22:4"
									},
									"returnParameters": {
										"id": 481,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 480,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 487,
												"src": "3908:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 479,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3908:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3907:9:4"
									},
									"scope": 578,
									"src": "3850:96:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 501,
										"nodeType": "Block",
										"src": "4466:29:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 499,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 497,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 490,
														"src": "4483:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 498,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 492,
														"src": "4487:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4483:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 496,
												"id": 500,
												"nodeType": "Return",
												"src": "4476:12:4"
											}
										]
									},
									"documentation": {
										"id": 488,
										"nodeType": "StructuredDocumentation",
										"src": "3952:442:4",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 502,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4408:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 493,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 490,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4420:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 502,
												"src": "4412:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 489,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4412:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 492,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4431:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 502,
												"src": "4423:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 491,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4423:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4411:22:4"
									},
									"returnParameters": {
										"id": 496,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 495,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 502,
												"src": "4457:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 494,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4457:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:9:4"
									},
									"scope": 578,
									"src": "4399:96:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 526,
										"nodeType": "Block",
										"src": "5084:106:4",
										"statements": [
											{
												"id": 525,
												"nodeType": "UncheckedBlock",
												"src": "5094:90:4",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 517,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 515,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 507,
																		"src": "5126:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 516,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 505,
																		"src": "5131:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5126:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 518,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 509,
																	"src": "5134:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 514,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5118:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 519,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5118:29:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 520,
														"nodeType": "ExpressionStatement",
														"src": "5118:29:4"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 523,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 521,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 505,
																"src": "5168:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 522,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 507,
																"src": "5172:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5168:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 513,
														"id": 524,
														"nodeType": "Return",
														"src": "5161:12:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 503,
										"nodeType": "StructuredDocumentation",
										"src": "4501:453:4",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 527,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4968:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 510,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 505,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4989:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 527,
												"src": "4981:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 504,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4981:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 507,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5008:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 527,
												"src": "5000:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 506,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5000:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 509,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5033:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 527,
												"src": "5019:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 508,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5019:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4971:80:4"
									},
									"returnParameters": {
										"id": 513,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 512,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 527,
												"src": "5075:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 511,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5074:9:4"
									},
									"scope": 578,
									"src": "4959:231:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 551,
										"nodeType": "Block",
										"src": "5799:105:4",
										"statements": [
											{
												"id": 550,
												"nodeType": "UncheckedBlock",
												"src": "5809:89:4",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 542,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 540,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 532,
																		"src": "5841:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 541,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5845:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5841:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 543,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 534,
																	"src": "5848:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 539,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5833:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 544,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5833:28:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 545,
														"nodeType": "ExpressionStatement",
														"src": "5833:28:4"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 548,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 546,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 530,
																"src": "5882:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 547,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 532,
																"src": "5886:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5882:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 538,
														"id": 549,
														"nodeType": "Return",
														"src": "5875:12:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 528,
										"nodeType": "StructuredDocumentation",
										"src": "5196:473:4",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 552,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5683:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 535,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 530,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5704:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 552,
												"src": "5696:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 529,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5696:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5723:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 552,
												"src": "5715:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 531,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5715:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5748:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 552,
												"src": "5734:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 533,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5734:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5686:80:4"
									},
									"returnParameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 537,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 552,
												"src": "5790:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 536,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5790:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5789:9:4"
									},
									"scope": 578,
									"src": "5674:230:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 576,
										"nodeType": "Block",
										"src": "6675:105:4",
										"statements": [
											{
												"id": 575,
												"nodeType": "UncheckedBlock",
												"src": "6685:89:4",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 567,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 565,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 557,
																		"src": "6717:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 566,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6721:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6717:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 568,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 559,
																	"src": "6724:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 564,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6709:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 569,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6709:28:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 570,
														"nodeType": "ExpressionStatement",
														"src": "6709:28:4"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 573,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 571,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 555,
																"src": "6758:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 572,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 557,
																"src": "6762:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6758:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 563,
														"id": 574,
														"nodeType": "Return",
														"src": "6751:12:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 553,
										"nodeType": "StructuredDocumentation",
										"src": "5910:635:4",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 577,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6559:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 560,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 555,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6580:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 577,
												"src": "6572:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 554,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6572:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 557,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6599:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 577,
												"src": "6591:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 556,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6591:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 559,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6624:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 577,
												"src": "6610:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 558,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6610:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6562:80:4"
									},
									"returnParameters": {
										"id": 563,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 562,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 577,
												"src": "6666:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 561,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6666:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6665:9:4"
									},
									"scope": 578,
									"src": "6550:230:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 579,
							"src": "482:6300:4",
							"usedErrors": []
						}
					],
					"src": "107:6676:4"
				},
				"id": 4
			},
			"contracts/ChadPepeCrowdsale.sol": {
				"ast": {
					"absolutePath": "contracts/ChadPepeCrowdsale.sol",
					"exportedSymbols": {
						"ChadPepeCrowdsale": [
							827
						],
						"Context": [
							266
						],
						"IERC20": [
							244
						],
						"Ownable": [
							112
						],
						"ReentrancyGuard": [
							166
						],
						"SafeMath": [
							578
						]
					},
					"id": 828,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 580,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".9"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 581,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 828,
							"sourceUnit": 245,
							"src": "57:56:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 582,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 828,
							"sourceUnit": 113,
							"src": "114:52:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 583,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 828,
							"sourceUnit": 167,
							"src": "167:62:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 584,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 828,
							"sourceUnit": 579,
							"src": "230:57:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 585,
										"name": "Ownable",
										"nameLocations": [
											"319:7:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 112,
										"src": "319:7:5"
									},
									"id": 586,
									"nodeType": "InheritanceSpecifier",
									"src": "319:7:5"
								},
								{
									"baseName": {
										"id": 587,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"328:15:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 166,
										"src": "328:15:5"
									},
									"id": 588,
									"nodeType": "InheritanceSpecifier",
									"src": "328:15:5"
								}
							],
							"canonicalName": "ChadPepeCrowdsale",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 827,
							"linearizedBaseContracts": [
								827,
								166,
								112,
								266
							],
							"name": "ChadPepeCrowdsale",
							"nameLocation": "298:17:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 591,
									"libraryName": {
										"id": 589,
										"name": "SafeMath",
										"nameLocations": [
											"356:8:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 578,
										"src": "356:8:5"
									},
									"nodeType": "UsingForDirective",
									"src": "350:27:5",
									"typeName": {
										"id": 590,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "369:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "fc0c546a",
									"id": 594,
									"mutability": "mutable",
									"name": "token",
									"nameLocation": "397:5:5",
									"nodeType": "VariableDeclaration",
									"scope": 827,
									"src": "383:19:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$244",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 593,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 592,
											"name": "IERC20",
											"nameLocations": [
												"383:6:5"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 244,
											"src": "383:6:5"
										},
										"referencedDeclaration": 244,
										"src": "383:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$244",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "2c4e722e",
									"id": 596,
									"mutability": "mutable",
									"name": "rate",
									"nameLocation": "423:4:5",
									"nodeType": "VariableDeclaration",
									"scope": 827,
									"src": "408:19:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 595,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "408:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "4042b66f",
									"id": 598,
									"mutability": "mutable",
									"name": "weiRaised",
									"nameLocation": "448:9:5",
									"nodeType": "VariableDeclaration",
									"scope": 827,
									"src": "433:24:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 597,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "433:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "6faf93231a456e552dbc9961f58d9713ee4f2e69d15f1975b050ef0911053a7b",
									"id": 608,
									"name": "TokensPurchased",
									"nameLocation": "470:15:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 607,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 600,
												"indexed": true,
												"mutability": "mutable",
												"name": "purchaser",
												"nameLocation": "502:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 608,
												"src": "486:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 599,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "486:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 602,
												"indexed": true,
												"mutability": "mutable",
												"name": "beneficiary",
												"nameLocation": "529:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 608,
												"src": "513:27:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 601,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "513:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 604,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "550:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 608,
												"src": "542:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 603,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "542:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 606,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "565:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 608,
												"src": "557:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 605,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "557:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "485:87:5"
									},
									"src": "464:109:5"
								},
								{
									"body": {
										"id": 642,
										"nodeType": "Block",
										"src": "629:223:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 618,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 616,
																"name": "_rate",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 610,
																"src": "647:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 617,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "655:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "647:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436861645065706543726f776473616c653a20726174652069732030",
															"id": 619,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "658:30:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2be6f75e4646a2c7ee6be5c8713e255f7d760756589c534eabd7b36ecd01b082",
																"typeString": "literal_string \"ChadPepeCrowdsale: rate is 0\""
															},
															"value": "ChadPepeCrowdsale: rate is 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2be6f75e4646a2c7ee6be5c8713e255f7d760756589c534eabd7b36ecd01b082",
																"typeString": "literal_string \"ChadPepeCrowdsale: rate is 0\""
															}
														],
														"id": 615,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "639:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 620,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "639:50:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 621,
												"nodeType": "ExpressionStatement",
												"src": "639:50:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 628,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 623,
																"name": "_tokenAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 612,
																"src": "707:13:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 626,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "732:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 625,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "724:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 624,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "724:7:5",
																		"typeDescriptions": {}
																	}
																},
																"id": 627,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "724:10:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "707:27:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436861645065706543726f776473616c653a20746f6b656e20697320746865207a65726f2061646472657373",
															"id": 629,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "736:46:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_87b493e67a349900d043c7f8b3f8dcbac41d09c10dbc42be25d2eaa8cd8696a2",
																"typeString": "literal_string \"ChadPepeCrowdsale: token is the zero address\""
															},
															"value": "ChadPepeCrowdsale: token is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_87b493e67a349900d043c7f8b3f8dcbac41d09c10dbc42be25d2eaa8cd8696a2",
																"typeString": "literal_string \"ChadPepeCrowdsale: token is the zero address\""
															}
														],
														"id": 622,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "699:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 630,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "699:84:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 631,
												"nodeType": "ExpressionStatement",
												"src": "699:84:5"
											},
											{
												"expression": {
													"id": 634,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 632,
														"name": "rate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 596,
														"src": "794:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 633,
														"name": "_rate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 610,
														"src": "801:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "794:12:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 635,
												"nodeType": "ExpressionStatement",
												"src": "794:12:5"
											},
											{
												"expression": {
													"id": 640,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 636,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 594,
														"src": "816:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$244",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 638,
																"name": "_tokenAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 612,
																"src": "831:13:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 637,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 244,
															"src": "824:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$244_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 639,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "824:21:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$244",
															"typeString": "contract IERC20"
														}
													},
													"src": "816:29:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$244",
														"typeString": "contract IERC20"
													}
												},
												"id": 641,
												"nodeType": "ExpressionStatement",
												"src": "816:29:5"
											}
										]
									},
									"id": 643,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 613,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 610,
												"mutability": "mutable",
												"name": "_rate",
												"nameLocation": "599:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 643,
												"src": "591:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 609,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "591:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 612,
												"mutability": "mutable",
												"name": "_tokenAddress",
												"nameLocation": "614:13:5",
												"nodeType": "VariableDeclaration",
												"scope": 643,
												"src": "606:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 611,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "606:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "590:38:5"
									},
									"returnParameters": {
										"id": 614,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "629:0:5"
									},
									"scope": 827,
									"src": "579:273:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 651,
										"nodeType": "Block",
										"src": "885:38:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 647,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "905:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 648,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "909:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "905:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 646,
														"name": "buyTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 709,
														"src": "895:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 649,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "895:21:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 650,
												"nodeType": "ExpressionStatement",
												"src": "895:21:5"
											}
										]
									},
									"id": 652,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 644,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "865:2:5"
									},
									"returnParameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "885:0:5"
									},
									"scope": 827,
									"src": "858:65:5",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 708,
										"nodeType": "Block",
										"src": "997:461:5",
										"statements": [
											{
												"assignments": [
													660
												],
												"declarations": [
													{
														"constant": false,
														"id": 660,
														"mutability": "mutable",
														"name": "weiAmount",
														"nameLocation": "1015:9:5",
														"nodeType": "VariableDeclaration",
														"scope": 708,
														"src": "1007:17:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 659,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1007:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 663,
												"initialValue": {
													"expression": {
														"id": 661,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1027:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 662,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1031:5:5",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"src": "1027:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1007:29:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 665,
															"name": "beneficiary",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 654,
															"src": "1067:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 666,
															"name": "weiAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 660,
															"src": "1080:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 664,
														"name": "_preValidatePurchase",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 734,
														"src": "1046:20:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256) pure"
														}
													},
													"id": 667,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1046:44:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 668,
												"nodeType": "ExpressionStatement",
												"src": "1046:44:5"
											},
											{
												"assignments": [
													670
												],
												"declarations": [
													{
														"constant": false,
														"id": 670,
														"mutability": "mutable",
														"name": "tokens",
														"nameLocation": "1109:6:5",
														"nodeType": "VariableDeclaration",
														"scope": 708,
														"src": "1101:14:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 669,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1101:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 674,
												"initialValue": {
													"arguments": [
														{
															"id": 672,
															"name": "weiAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 660,
															"src": "1134:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 671,
														"name": "_getTokenAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 793,
														"src": "1118:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 673,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1118:26:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1101:43:5"
											},
											{
												"expression": {
													"id": 680,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 675,
														"name": "weiRaised",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 598,
														"src": "1155:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 678,
																"name": "weiAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 660,
																"src": "1181:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 676,
																"name": "weiRaised",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 598,
																"src": "1167:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 677,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1177:3:5",
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 442,
															"src": "1167:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 679,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1167:24:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1155:36:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 681,
												"nodeType": "ExpressionStatement",
												"src": "1155:36:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 683,
															"name": "beneficiary",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 654,
															"src": "1219:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 684,
															"name": "tokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 670,
															"src": "1232:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 682,
														"name": "_processPurchase",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 772,
														"src": "1202:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 685,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1202:37:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 686,
												"nodeType": "ExpressionStatement",
												"src": "1202:37:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 688,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1270:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 689,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1274:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1270:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 690,
															"name": "beneficiary",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 654,
															"src": "1282:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 691,
															"name": "weiAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 660,
															"src": "1295:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 692,
															"name": "tokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 670,
															"src": "1306:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 687,
														"name": "TokensPurchased",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 608,
														"src": "1254:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 693,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1254:59:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 694,
												"nodeType": "EmitStatement",
												"src": "1249:64:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 696,
															"name": "beneficiary",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 654,
															"src": "1347:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 697,
															"name": "weiAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 660,
															"src": "1360:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 695,
														"name": "_updatePurchasingState",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 780,
														"src": "1324:22:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 698,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1324:46:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 699,
												"nodeType": "ExpressionStatement",
												"src": "1324:46:5"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 700,
														"name": "_forwardFunds",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 807,
														"src": "1381:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 701,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1381:15:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 702,
												"nodeType": "ExpressionStatement",
												"src": "1381:15:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 704,
															"name": "beneficiary",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 654,
															"src": "1428:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 705,
															"name": "weiAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 660,
															"src": "1441:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 703,
														"name": "_postValidatePurchase",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 742,
														"src": "1406:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256) pure"
														}
													},
													"id": 706,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1406:45:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 707,
												"nodeType": "ExpressionStatement",
												"src": "1406:45:5"
											}
										]
									},
									"functionSelector": "ec8ac4d8",
									"id": 709,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 657,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 656,
												"name": "nonReentrant",
												"nameLocations": [
													"976:12:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 142,
												"src": "976:12:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "976:12:5"
										}
									],
									"name": "buyTokens",
									"nameLocation": "938:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 655,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 654,
												"mutability": "mutable",
												"name": "beneficiary",
												"nameLocation": "956:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 709,
												"src": "948:19:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 653,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "948:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "947:21:5"
									},
									"returnParameters": {
										"id": 658,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "997:0:5"
									},
									"scope": 827,
									"src": "929:529:5",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 733,
										"nodeType": "Block",
										"src": "1548:175:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 722,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 717,
																"name": "beneficiary",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 711,
																"src": "1566:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 720,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1589:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 719,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1581:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 718,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1581:7:5",
																		"typeDescriptions": {}
																	}
																},
																"id": 721,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1581:10:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1566:25:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436861645065706543726f776473616c653a2062656e656669636961727920697320746865207a65726f2061646472657373",
															"id": 723,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1593:52:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_241e7a82e03c73826b4256830b3d1b02f02001e4c4c03703bc75f6405b4f0020",
																"typeString": "literal_string \"ChadPepeCrowdsale: beneficiary is the zero address\""
															},
															"value": "ChadPepeCrowdsale: beneficiary is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_241e7a82e03c73826b4256830b3d1b02f02001e4c4c03703bc75f6405b4f0020",
																"typeString": "literal_string \"ChadPepeCrowdsale: beneficiary is the zero address\""
															}
														],
														"id": 716,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1558:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 724,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1558:88:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 725,
												"nodeType": "ExpressionStatement",
												"src": "1558:88:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 729,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 727,
																"name": "weiAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 713,
																"src": "1664:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 728,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1677:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1664:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436861645065706543726f776473616c653a20776569416d6f756e742069732030",
															"id": 730,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1680:35:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cbc5bcd0a6eeeb659c2556d3a16dbceb96ed81ea33899af30347f3e87b400c61",
																"typeString": "literal_string \"ChadPepeCrowdsale: weiAmount is 0\""
															},
															"value": "ChadPepeCrowdsale: weiAmount is 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cbc5bcd0a6eeeb659c2556d3a16dbceb96ed81ea33899af30347f3e87b400c61",
																"typeString": "literal_string \"ChadPepeCrowdsale: weiAmount is 0\""
															}
														],
														"id": 726,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1656:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 731,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1656:60:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 732,
												"nodeType": "ExpressionStatement",
												"src": "1656:60:5"
											}
										]
									},
									"id": 734,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_preValidatePurchase",
									"nameLocation": "1473:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 714,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 711,
												"mutability": "mutable",
												"name": "beneficiary",
												"nameLocation": "1502:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 734,
												"src": "1494:19:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 710,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1494:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 713,
												"mutability": "mutable",
												"name": "weiAmount",
												"nameLocation": "1523:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 734,
												"src": "1515:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 712,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1515:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1493:40:5"
									},
									"returnParameters": {
										"id": 715,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1548:0:5"
									},
									"scope": 827,
									"src": "1464:259:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 741,
										"nodeType": "Block",
										"src": "1814:72:5",
										"statements": []
									},
									"id": 742,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_postValidatePurchase",
									"nameLocation": "1738:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 739,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 736,
												"mutability": "mutable",
												"name": "beneficiary",
												"nameLocation": "1768:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 742,
												"src": "1760:19:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 735,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1760:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 738,
												"mutability": "mutable",
												"name": "weiAmount",
												"nameLocation": "1789:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 742,
												"src": "1781:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 737,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1781:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1759:40:5"
									},
									"returnParameters": {
										"id": 740,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1814:0:5"
									},
									"scope": 827,
									"src": "1729:157:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 758,
										"nodeType": "Block",
										"src": "1967:70:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 752,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 40,
																"src": "1996:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 753,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1996:7:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 754,
															"name": "beneficiary",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 744,
															"src": "2005:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 755,
															"name": "tokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 746,
															"src": "2018:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 749,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 594,
															"src": "1977:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$244",
																"typeString": "contract IERC20"
															}
														},
														"id": 751,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1983:12:5",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 243,
														"src": "1977:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 756,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1977:53:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 757,
												"nodeType": "ExpressionStatement",
												"src": "1977:53:5"
											}
										]
									},
									"id": 759,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_deliverTokens",
									"nameLocation": "1901:14:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 744,
												"mutability": "mutable",
												"name": "beneficiary",
												"nameLocation": "1924:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 759,
												"src": "1916:19:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 743,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1916:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 746,
												"mutability": "mutable",
												"name": "tokenAmount",
												"nameLocation": "1945:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 759,
												"src": "1937:19:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 745,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1937:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1915:42:5"
									},
									"returnParameters": {
										"id": 748,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1967:0:5"
									},
									"scope": 827,
									"src": "1892:145:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 771,
										"nodeType": "Block",
										"src": "2120:57:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 767,
															"name": "beneficiary",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 761,
															"src": "2145:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 768,
															"name": "tokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 763,
															"src": "2158:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 766,
														"name": "_deliverTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 759,
														"src": "2130:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 769,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2130:40:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 770,
												"nodeType": "ExpressionStatement",
												"src": "2130:40:5"
											}
										]
									},
									"id": 772,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_processPurchase",
									"nameLocation": "2052:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 764,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 761,
												"mutability": "mutable",
												"name": "beneficiary",
												"nameLocation": "2077:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 772,
												"src": "2069:19:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 760,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2069:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 763,
												"mutability": "mutable",
												"name": "tokenAmount",
												"nameLocation": "2098:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 772,
												"src": "2090:19:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 762,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2090:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2068:42:5"
									},
									"returnParameters": {
										"id": 765,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2120:0:5"
									},
									"scope": 827,
									"src": "2043:134:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 779,
										"nodeType": "Block",
										"src": "2264:80:5",
										"statements": []
									},
									"id": 780,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_updatePurchasingState",
									"nameLocation": "2192:22:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 777,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 774,
												"mutability": "mutable",
												"name": "beneficiary",
												"nameLocation": "2223:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 780,
												"src": "2215:19:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 773,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2215:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 776,
												"mutability": "mutable",
												"name": "weiAmount",
												"nameLocation": "2244:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 780,
												"src": "2236:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 775,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2236:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2214:40:5"
									},
									"returnParameters": {
										"id": 778,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2264:0:5"
									},
									"scope": 827,
									"src": "2183:161:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 792,
										"nodeType": "Block",
										"src": "2426:43:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 789,
															"name": "rate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 596,
															"src": "2457:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 787,
															"name": "weiAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 782,
															"src": "2443:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 788,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2453:3:5",
														"memberName": "mul",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 472,
														"src": "2443:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 790,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2443:19:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 786,
												"id": 791,
												"nodeType": "Return",
												"src": "2436:26:5"
											}
										]
									},
									"id": 793,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getTokenAmount",
									"nameLocation": "2359:15:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 783,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 782,
												"mutability": "mutable",
												"name": "weiAmount",
												"nameLocation": "2383:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 793,
												"src": "2375:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 781,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2375:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:19:5"
									},
									"returnParameters": {
										"id": 786,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 785,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 793,
												"src": "2417:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 784,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2417:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2416:9:5"
									},
									"scope": 827,
									"src": "2350:119:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 806,
										"nodeType": "Block",
										"src": "2509:53:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 802,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2545:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 803,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2549:5:5",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "2545:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 798,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 40,
																		"src": "2527:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 799,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2527:7:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 797,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2519:8:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 796,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2519:8:5",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 800,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2519:16:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 801,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2536:8:5",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "2519:25:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 804,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2519:36:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 805,
												"nodeType": "ExpressionStatement",
												"src": "2519:36:5"
											}
										]
									},
									"id": 807,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_forwardFunds",
									"nameLocation": "2484:13:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 794,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2497:2:5"
									},
									"returnParameters": {
										"id": 795,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2509:0:5"
									},
									"scope": 827,
									"src": "2475:87:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 825,
										"nodeType": "Block",
										"src": "2621:97:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 817,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 815,
																"name": "newRate",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 809,
																"src": "2639:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 816,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2649:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2639:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436861645065706543726f776473616c653a206e657720726174652069732030",
															"id": 818,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2652:34:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_770494544f017deff4c9d8a643e67b2233d772d8786aa0753b1fffc1a310e4f8",
																"typeString": "literal_string \"ChadPepeCrowdsale: new rate is 0\""
															},
															"value": "ChadPepeCrowdsale: new rate is 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_770494544f017deff4c9d8a643e67b2233d772d8786aa0753b1fffc1a310e4f8",
																"typeString": "literal_string \"ChadPepeCrowdsale: new rate is 0\""
															}
														],
														"id": 814,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2631:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 819,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2631:56:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 820,
												"nodeType": "ExpressionStatement",
												"src": "2631:56:5"
											},
											{
												"expression": {
													"id": 823,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 821,
														"name": "rate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 596,
														"src": "2697:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 822,
														"name": "newRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 809,
														"src": "2704:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2697:14:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 824,
												"nodeType": "ExpressionStatement",
												"src": "2697:14:5"
											}
										]
									},
									"functionSelector": "34fcf437",
									"id": 826,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 812,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 811,
												"name": "onlyOwner",
												"nameLocations": [
													"2611:9:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2611:9:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "2611:9:5"
										}
									],
									"name": "setRate",
									"nameLocation": "2577:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 809,
												"mutability": "mutable",
												"name": "newRate",
												"nameLocation": "2593:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "2585:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 808,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2585:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2584:17:5"
									},
									"returnParameters": {
										"id": 813,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2621:0:5"
									},
									"scope": 827,
									"src": "2568:150:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 828,
							"src": "289:2431:5",
							"usedErrors": []
						}
					],
					"src": "32:2689:5"
				},
				"id": 5
			}
		}
	}
}